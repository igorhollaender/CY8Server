ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_1_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	CapSense_1_rawFilterData1,2,4
  18              		.global	CapSense_1_sensorBaseline
  19              		.bss
  20              		.align	2
  21              		.type	CapSense_1_sensorBaseline, %object
  22              		.size	CapSense_1_sensorBaseline, 2
  23              	CapSense_1_sensorBaseline:
  24 0000 0000     		.space	2
  25              		.global	CapSense_1_sensorBaselineLow
  26 0002 0000     		.align	2
  27              		.type	CapSense_1_sensorBaselineLow, %object
  28              		.size	CapSense_1_sensorBaselineLow, 1
  29              	CapSense_1_sensorBaselineLow:
  30 0004 00       		.space	1
  31              		.global	CapSense_1_sensorSignal
  32 0005 000000   		.align	2
  33              		.type	CapSense_1_sensorSignal, %object
  34              		.size	CapSense_1_sensorSignal, 1
  35              	CapSense_1_sensorSignal:
  36 0008 00       		.space	1
  37              		.global	CapSense_1_sensorOnMask
  38 0009 000000   		.align	2
  39              		.type	CapSense_1_sensorOnMask, %object
  40              		.size	CapSense_1_sensorOnMask, 1
  41              	CapSense_1_sensorOnMask:
  42 000c 00       		.space	1
  43              		.comm	CapSense_1_lowBaselineResetCnt,1,4
  44              		.global	CapSense_1_lowBaselineReset
  45              		.data
  46              		.align	2
  47              		.type	CapSense_1_lowBaselineReset, %object
  48              		.size	CapSense_1_lowBaselineReset, 1
  49              	CapSense_1_lowBaselineReset:
  50 0000 1E       		.byte	30
  51              		.global	CapSense_1_enableRawFilters
  52              		.type	CapSense_1_enableRawFilters, %object
  53              		.size	CapSense_1_enableRawFilters, 1
  54              	CapSense_1_enableRawFilters:
  55 0001 01       		.byte	1
  56              		.comm	CapSense_1_fingerThreshold,1,4
  57              		.comm	CapSense_1_noiseThreshold,1,4
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 2


  58              		.comm	CapSense_1_negativeNoiseThreshold,1,4
  59              		.comm	CapSense_1_hysteresis,1,4
  60              		.global	CapSense_1_debounce
  61 0002 0000     		.align	2
  62              		.type	CapSense_1_debounce, %object
  63              		.size	CapSense_1_debounce, 1
  64              	CapSense_1_debounce:
  65 0004 05       		.byte	5
  66 0005 000000   		.bss
  67 000d 000000   		.align	2
  68              	CapSense_1_debounceCounter:
  69 0010 0000     		.space	2
  70              		.global	CapSense_1_rawDataIndex
  71 0012 0000     		.section	.rodata
  72              		.align	2
  73              		.type	CapSense_1_rawDataIndex, %object
  74              		.size	CapSense_1_rawDataIndex, 1
  75              	CapSense_1_rawDataIndex:
  76 0000 00       		.space	1
  77              		.global	CapSense_1_numberOfSensors
  78 0001 000000   		.align	2
  79              		.type	CapSense_1_numberOfSensors, %object
  80              		.size	CapSense_1_numberOfSensors, 1
  81              	CapSense_1_numberOfSensors:
  82 0004 01       		.byte	1
  83 0005 000000   		.section	.text.CapSense_1_BaseInit,"ax",%progbits
  84              		.align	2
  85              		.global	CapSense_1_BaseInit
  86              		.code	16
  87              		.thumb_func
  88              		.type	CapSense_1_BaseInit, %function
  89              	CapSense_1_BaseInit:
  90              	.LFB35:
  91              		.file 1 "Generated_Source\\PSoC4\\CapSense_1_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * File Name: CapSense_1_CSHL.c
   3:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Version 2.60
   4:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
   5:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
  11:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #include "CapSense_1_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #include "CapSense_1_PVT.h"
  20:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if (CapSense_1_TUNING_METHOD == CapSense_1__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     extern void CapSense_1_UpdateThresholds(uint32 sensor);
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 3


  24:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TUNING_METHOD == CapSense_1__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_1_CSHL.c ****       (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData1[CapSense_1_TOTAL_SENSOR_COUNT];
  31:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData2[CapSense_1_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #elif ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData1[CapSense_1_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif  /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         *    (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_1_CSHL.c **** extern uint16 CapSense_1_sensorRaw[CapSense_1_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_1_CSHL.c **** extern uint8 CapSense_1_sensorEnableMask[CapSense_1_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/CapSense_1_CSHL.c **** extern const uint8 CapSense_1_widgetNumber[CapSense_1_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if (CapSense_1_TUNING_METHOD != CapSense_1__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     extern uint32 CapSense_1_widgetResolution[CapSense_1_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TUNING_METHOD != CapSense_1__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint16 CapSense_1_sensorBaseline[CapSense_1_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorBaselineLow[CapSense_1_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorSignal[CapSense_1_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorOnMask[CapSense_1_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  57:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_lowBaselineResetCnt[CapSense_1_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_lowBaselineReset[CapSense_1_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     30u, 
  60:Generated_Source\PSoC4/CapSense_1_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  62:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if (CapSense_1_TUNING_METHOD == CapSense_1__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     extern CapSense_1_CONFIG_TYPE_P4_v2_60 CapSense_1_config;
  66:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif  /* (CapSense_1_TUNING_METHOD == CapSense_1__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  68:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if (CapSense_1_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_enableRawFilters = CapSense_1_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif  /* (CapSense_1_RAW_FILTER_MASK != 0u) */
  71:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_fingerThreshold[CapSense_1_THRESHOLD_TBL_SIZE];
  74:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  75:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_noiseThreshold[CapSense_1_THRESHOLD_TBL_SIZE];
  76:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_negativeNoiseThreshold[CapSense_1_THRESHOLD_TBL_SIZE];
  78:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  79:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_hysteresis[CapSense_1_WIDGET_PARAM_TBL_SIZE];
  80:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 4


  81:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_debounce[] = {
  82:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     5u, 
  83:Generated_Source\PSoC4/CapSense_1_CSHL.c **** };
  84:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  85:Generated_Source\PSoC4/CapSense_1_CSHL.c **** static uint8 CapSense_1_debounceCounter[] = {
  86:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     0u, 0u, 
  87:Generated_Source\PSoC4/CapSense_1_CSHL.c **** };
  88:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  89:Generated_Source\PSoC4/CapSense_1_CSHL.c **** const uint8 CapSense_1_rawDataIndex[] = {
  90:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     0u, /* DummyWidget__BTN */
  91:Generated_Source\PSoC4/CapSense_1_CSHL.c **** };
  92:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  93:Generated_Source\PSoC4/CapSense_1_CSHL.c **** const uint8 CapSense_1_numberOfSensors[] = {
  94:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     1u, /* DummyWidget__BTN */
  95:Generated_Source\PSoC4/CapSense_1_CSHL.c **** };
  96:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  97:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  98:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  99:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 100:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 101:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_BaseInit
 102:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 103:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 104:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 105:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Loads the CapSense_1_sensorBaseline[sensor] array element with an
 106:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  initial value which is equal to the raw count value.
 107:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Resets to zero CapSense_1_sensorBaselineLow[sensor] and
 108:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[sensor] array element.
 109:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Loads the CapSense_1_rawFilterData2[sensor] and
 110:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[sensor] array element with an
 111:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 112:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 113:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 114:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 115:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 116:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 117:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 118:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 119:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 120:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[]    - used to store the baseline value.
 121:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaselineLow[] - used to store the fraction byte of
 122:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  the baseline value.
 123:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store a difference between
 124:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 125:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData1[]    - used to store a previous sample of
 126:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  any enabled raw data filter.
 127:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[]    - used to store before a previous sample
 128:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 129:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 130:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 131:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 132:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 133:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 134:Generated_Source\PSoC4/CapSense_1_CSHL.c **** void CapSense_1_BaseInit(uint32 sensor)
 135:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
  92              		.loc 1 135 0
  93              		.cfi_startproc
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 5


  94 0000 80B5     		push	{r7, lr}
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 7, -8
  97              		.cfi_offset 14, -4
  98 0002 84B0     		sub	sp, sp, #16
  99              		.cfi_def_cfa_offset 24
 100 0004 00AF     		add	r7, sp, #0
 101              		.cfi_def_cfa_register 7
 102 0006 7860     		str	r0, [r7, #4]
 136:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if ((CapSense_1_TOTAL_BUTTONS_COUNT) || (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) || \
 137:Generated_Source\PSoC4/CapSense_1_CSHL.c ****          (CapSense_1_TOTAL_GENERICS_COUNT))
 138:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 widget = CapSense_1_widgetNumber[sensor];
 103              		.loc 1 138 0
 104 0008 0F23     		mov	r3, #15
 105 000a FB18     		add	r3, r7, r3
 106 000c 1549     		ldr	r1, .L2
 107 000e 7A68     		ldr	r2, [r7, #4]
 108 0010 8A18     		add	r2, r1, r2
 109 0012 1278     		ldrb	r2, [r2]
 110 0014 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif /* ((CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT)) 
 140:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 141:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT)
 142:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 debounceIndex;
 143:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) */
 144:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 145:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 146:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 147:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(widget < CapSense_1_END_OF_WIDGETS_INDEX)
 148:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
 149:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 150:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 151:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Initialize Baseline */
 152:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     CapSense_1_sensorBaseline[sensor] = CapSense_1_sensorRaw[sensor];
 111              		.loc 1 152 0
 112 0016 144B     		ldr	r3, .L2+4
 113 0018 7A68     		ldr	r2, [r7, #4]
 114 001a 5200     		lsl	r2, r2, #1
 115 001c D15A     		ldrh	r1, [r2, r3]
 116 001e 134B     		ldr	r3, .L2+8
 117 0020 7A68     		ldr	r2, [r7, #4]
 118 0022 5200     		lsl	r2, r2, #1
 119 0024 D152     		strh	r1, [r2, r3]
 153:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     CapSense_1_sensorBaselineLow[sensor] = 0u;
 120              		.loc 1 153 0
 121 0026 124A     		ldr	r2, .L2+12
 122 0028 7B68     		ldr	r3, [r7, #4]
 123 002a D318     		add	r3, r2, r3
 124 002c 0022     		mov	r2, #0
 125 002e 1A70     		strb	r2, [r3]
 154:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     CapSense_1_sensorSignal[sensor] = 0u;
 126              		.loc 1 154 0
 127 0030 104A     		ldr	r2, .L2+16
 128 0032 7B68     		ldr	r3, [r7, #4]
 129 0034 D318     		add	r3, r2, r3
 130 0036 0022     		mov	r2, #0
 131 0038 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 6


 155:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 156:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     CapSense_1_debounceCounter[widget] =  CapSense_1_debounce[widget];
 132              		.loc 1 156 0
 133 003a 0F23     		mov	r3, #15
 134 003c FB18     		add	r3, r7, r3
 135 003e 1B78     		ldrb	r3, [r3]
 136 0040 0F22     		mov	r2, #15
 137 0042 BA18     		add	r2, r7, r2
 138 0044 1278     		ldrb	r2, [r2]
 139 0046 0C49     		ldr	r1, .L2+20
 140 0048 895C     		ldrb	r1, [r1, r2]
 141 004a 0C4A     		ldr	r2, .L2+24
 142 004c D154     		strb	r1, [r2, r3]
 157:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 158:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 159:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if ((0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER)) ||\
 160:Generated_Source\PSoC4/CapSense_1_CSHL.c ****          (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER)))
 161:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 162:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = CapSense_1_sensorRaw[sensor];
 163:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_sensorRaw[sensor];
 164:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 165:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #elif ((CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) ||\
 166:Generated_Source\PSoC4/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER) ||\
 167:Generated_Source\PSoC4/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER) ||\
 168:Generated_Source\PSoC4/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER) ||\
 169:Generated_Source\PSoC4/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER))
 170:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 171:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = CapSense_1_sensorRaw[sensor];
 143              		.loc 1 171 0
 144 004e 064B     		ldr	r3, .L2+4
 145 0050 7A68     		ldr	r2, [r7, #4]
 146 0052 5200     		lsl	r2, r2, #1
 147 0054 D15A     		ldrh	r1, [r2, r3]
 148 0056 0A4B     		ldr	r3, .L2+28
 149 0058 7A68     		ldr	r2, [r7, #4]
 150 005a 5200     		lsl	r2, r2, #1
 151 005c D152     		strh	r1, [r2, r3]
 172:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 173:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #else
 174:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* No Raw filters */
 175:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif  /* ((CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) || \
 176:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             *   (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER))
 177:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             */
 178:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 179:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 180:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 181:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
 182:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 183:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 152              		.loc 1 183 0
 153 005e BD46     		mov	sp, r7
 154 0060 04B0     		add	sp, sp, #16
 155              		@ sp needed
 156 0062 80BD     		pop	{r7, pc}
 157              	.L3:
 158              		.align	2
 159              	.L2:
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 7


 160 0064 00000000 		.word	CapSense_1_widgetNumber
 161 0068 00000000 		.word	CapSense_1_sensorRaw
 162 006c 00000000 		.word	CapSense_1_sensorBaseline
 163 0070 00000000 		.word	CapSense_1_sensorBaselineLow
 164 0074 00000000 		.word	CapSense_1_sensorSignal
 165 0078 00000000 		.word	CapSense_1_debounce
 166 007c 10000000 		.word	CapSense_1_debounceCounter
 167 0080 00000000 		.word	CapSense_1_rawFilterData1
 168              		.cfi_endproc
 169              	.LFE35:
 170              		.size	CapSense_1_BaseInit, .-CapSense_1_BaseInit
 171              		.section	.text.CapSense_1_InitializeSensorBaseline,"ax",%progbits
 172              		.align	2
 173              		.global	CapSense_1_InitializeSensorBaseline
 174              		.code	16
 175              		.thumb_func
 176              		.type	CapSense_1_InitializeSensorBaseline, %function
 177              	CapSense_1_InitializeSensorBaseline:
 178              	.LFB36:
 184:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 185:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 186:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 187:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeSensorBaseline
 188:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 189:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 190:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 191:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Loads the CapSense_1_sensorBaseline[sensor] array element with an
 192:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 193:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 194:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 195:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  enabled.
 196:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 197:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 198:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 199:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 200:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 201:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 202:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 203:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 204:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 205:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 206:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 207:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 208:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 209:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 210:Generated_Source\PSoC4/CapSense_1_CSHL.c **** void CapSense_1_InitializeSensorBaseline(uint32 sensor)
 211:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 179              		.loc 1 211 0
 180              		.cfi_startproc
 181 0000 80B5     		push	{r7, lr}
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 7, -8
 184              		.cfi_offset 14, -4
 185 0002 82B0     		sub	sp, sp, #8
 186              		.cfi_def_cfa_offset 16
 187 0004 00AF     		add	r7, sp, #0
 188              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 8


 189 0006 7860     		str	r0, [r7, #4]
 212:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Scan sensor */
 213:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     CapSense_1_ScanSensor(sensor);
 190              		.loc 1 213 0
 191 0008 7B68     		ldr	r3, [r7, #4]
 192 000a 181C     		mov	r0, r3
 193 000c FFF7FEFF 		bl	CapSense_1_ScanSensor
 214:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     while(CapSense_1_IsBusy() != 0u)
 194              		.loc 1 214 0
 195 0010 C046     		mov	r8, r8
 196              	.L5:
 197              		.loc 1 214 0 is_stmt 0 discriminator 1
 198 0012 FFF7FEFF 		bl	CapSense_1_IsBusy
 199 0016 031E     		sub	r3, r0, #0
 200 0018 FBD1     		bne	.L5
 215:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 216:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Wait while sensor is busy */
 217:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 218:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 219:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 220:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     CapSense_1_BaseInit(sensor);
 201              		.loc 1 220 0 is_stmt 1
 202 001a 7B68     		ldr	r3, [r7, #4]
 203 001c 181C     		mov	r0, r3
 204 001e FFF7FEFF 		bl	CapSense_1_BaseInit
 221:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 205              		.loc 1 221 0
 206 0022 BD46     		mov	sp, r7
 207 0024 02B0     		add	sp, sp, #8
 208              		@ sp needed
 209 0026 80BD     		pop	{r7, pc}
 210              		.cfi_endproc
 211              	.LFE36:
 212              		.size	CapSense_1_InitializeSensorBaseline, .-CapSense_1_InitializeSensorBaseline
 213              		.section	.text.CapSense_1_InitializeAllBaselines,"ax",%progbits
 214              		.align	2
 215              		.global	CapSense_1_InitializeAllBaselines
 216              		.code	16
 217              		.thumb_func
 218              		.type	CapSense_1_InitializeAllBaselines, %function
 219              	CapSense_1_InitializeAllBaselines:
 220              	.LFB37:
 222:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 223:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 224:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 225:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeAllBaselines
 226:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 227:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 228:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 229:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Uses the CapSense_1_InitializeSensorBaseline function to load the
 230:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[] array with an initial values by scanning
 231:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 232:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 233:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 234:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 235:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 236:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 9


 237:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 238:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 239:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 240:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 241:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 242:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 243:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 244:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 245:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 246:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 247:Generated_Source\PSoC4/CapSense_1_CSHL.c **** void CapSense_1_InitializeAllBaselines(void)
 248:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 221              		.loc 1 248 0
 222              		.cfi_startproc
 223 0000 80B5     		push	{r7, lr}
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 7, -8
 226              		.cfi_offset 14, -4
 227 0002 82B0     		sub	sp, sp, #8
 228              		.cfi_def_cfa_offset 16
 229 0004 00AF     		add	r7, sp, #0
 230              		.cfi_def_cfa_register 7
 249:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 i;
 250:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 251:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SCANSLOT_COUNT; i++)
 231              		.loc 1 251 0
 232 0006 0023     		mov	r3, #0
 233 0008 7B60     		str	r3, [r7, #4]
 234 000a 06E0     		b	.L7
 235              	.L8:
 252:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 253:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_InitializeSensorBaseline(i);
 236              		.loc 1 253 0 discriminator 3
 237 000c 7B68     		ldr	r3, [r7, #4]
 238 000e 181C     		mov	r0, r3
 239 0010 FFF7FEFF 		bl	CapSense_1_InitializeSensorBaseline
 251:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 240              		.loc 1 251 0 discriminator 3
 241 0014 7B68     		ldr	r3, [r7, #4]
 242 0016 0133     		add	r3, r3, #1
 243 0018 7B60     		str	r3, [r7, #4]
 244              	.L7:
 251:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 245              		.loc 1 251 0 is_stmt 0 discriminator 1
 246 001a 7B68     		ldr	r3, [r7, #4]
 247 001c 002B     		cmp	r3, #0
 248 001e F5D0     		beq	.L8
 254:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 255:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 249              		.loc 1 255 0 is_stmt 1
 250 0020 BD46     		mov	sp, r7
 251 0022 02B0     		add	sp, sp, #8
 252              		@ sp needed
 253 0024 80BD     		pop	{r7, pc}
 254              		.cfi_endproc
 255              	.LFE37:
 256              		.size	CapSense_1_InitializeAllBaselines, .-CapSense_1_InitializeAllBaselines
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 10


 257 0026 C046     		.section	.text.CapSense_1_InitializeEnabledBaselines,"ax",%progbits
 258              		.align	2
 259              		.global	CapSense_1_InitializeEnabledBaselines
 260              		.code	16
 261              		.thumb_func
 262              		.type	CapSense_1_InitializeEnabledBaselines, %function
 263              	CapSense_1_InitializeEnabledBaselines:
 264              	.LFB38:
 256:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 257:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 258:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 259:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeEnabledBaselines
 260:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 261:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 262:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 263:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 264:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 265:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 266:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  The raw data filters are initialized if enabled.
 267:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 268:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 269:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 270:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 271:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 272:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 273:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 274:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 275:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorRaw[] - used to store the sensors raw data.
 276:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 277:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 278:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 279:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 280:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 281:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 282:Generated_Source\PSoC4/CapSense_1_CSHL.c **** void CapSense_1_InitializeEnabledBaselines(void)
 283:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 265              		.loc 1 283 0
 266              		.cfi_startproc
 267 0000 80B5     		push	{r7, lr}
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 7, -8
 270              		.cfi_offset 14, -4
 271 0002 82B0     		sub	sp, sp, #8
 272              		.cfi_def_cfa_offset 16
 273 0004 00AF     		add	r7, sp, #0
 274              		.cfi_def_cfa_register 7
 284:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 i;
 285:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 isSensorEnabled;
 286:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 287:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     CapSense_1_ScanEnabledWidgets();
 275              		.loc 1 287 0
 276 0006 FFF7FEFF 		bl	CapSense_1_ScanEnabledWidgets
 288:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     while(CapSense_1_IsBusy() != 0u)
 277              		.loc 1 288 0
 278 000a C046     		mov	r8, r8
 279              	.L10:
 280              		.loc 1 288 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 11


 281 000c FFF7FEFF 		bl	CapSense_1_IsBusy
 282 0010 031E     		sub	r3, r0, #0
 283 0012 FBD1     		bne	.L10
 289:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 290:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Wait while sensor is busy */
 291:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 292:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 293:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 284              		.loc 1 293 0 is_stmt 1
 285 0014 0023     		mov	r3, #0
 286 0016 7B60     		str	r3, [r7, #4]
 287 0018 11E0     		b	.L11
 288              	.L13:
 294:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 295:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         isSensorEnabled = CapSense_1_GetBitValue(CapSense_1_sensorEnableMask, i);
 289              		.loc 1 295 0
 290 001a 0C4A     		ldr	r2, .L14
 291 001c 7B68     		ldr	r3, [r7, #4]
 292 001e 101C     		mov	r0, r2
 293 0020 191C     		mov	r1, r3
 294 0022 FFF7FEFF 		bl	CapSense_1_GetBitValue
 295 0026 031C     		mov	r3, r0
 296 0028 3B60     		str	r3, [r7]
 296:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 297:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 298:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(isSensorEnabled != 0u)
 297              		.loc 1 298 0
 298 002a 3B68     		ldr	r3, [r7]
 299 002c 002B     		cmp	r3, #0
 300 002e 03D0     		beq	.L12
 299:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
 300:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Initialize baselines */
 301:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(i);
 301              		.loc 1 301 0
 302 0030 7B68     		ldr	r3, [r7, #4]
 303 0032 181C     		mov	r0, r3
 304 0034 FFF7FEFF 		bl	CapSense_1_BaseInit
 305              	.L12:
 293:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 306              		.loc 1 293 0 discriminator 2
 307 0038 7B68     		ldr	r3, [r7, #4]
 308 003a 0133     		add	r3, r3, #1
 309 003c 7B60     		str	r3, [r7, #4]
 310              	.L11:
 293:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 311              		.loc 1 293 0 is_stmt 0 discriminator 1
 312 003e 7B68     		ldr	r3, [r7, #4]
 313 0040 002B     		cmp	r3, #0
 314 0042 EAD0     		beq	.L13
 302:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
 303:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 304:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 315              		.loc 1 304 0 is_stmt 1
 316 0044 BD46     		mov	sp, r7
 317 0046 02B0     		add	sp, sp, #8
 318              		@ sp needed
 319 0048 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 12


 320              	.L15:
 321 004a C046     		.align	2
 322              	.L14:
 323 004c 00000000 		.word	CapSense_1_sensorEnableMask
 324              		.cfi_endproc
 325              	.LFE38:
 326              		.size	CapSense_1_InitializeEnabledBaselines, .-CapSense_1_InitializeEnabledBaselines
 327              		.section	.text.CapSense_1_UpdateBaselineNoThreshold,"ax",%progbits
 328              		.align	2
 329              		.global	CapSense_1_UpdateBaselineNoThreshold
 330              		.code	16
 331              		.thumb_func
 332              		.type	CapSense_1_UpdateBaselineNoThreshold, %function
 333              	CapSense_1_UpdateBaselineNoThreshold:
 334              	.LFB39:
 305:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 306:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 307:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 308:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateBaselineNoThreshold
 309:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 310:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 311:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 312:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Updates the CapSense_1_sensorBaseline[sensor] array element using the
 313:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 314:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 315:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  it in CapSense_1_sensorSignal[sensor].
 316:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 317:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 318:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 319:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  than noise threshold.
 320:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 321:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  calculation.
 322:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 323:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 324:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 325:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 326:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 327:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 328:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 329:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 330:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 331:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 332:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_widgetNumber[]  - stores widget numbers.
 333:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[]    - used to store baseline value.
 334:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaselineLow[] - used to store fraction byte of
 335:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  baseline value.
 336:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store difference between
 337:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 338:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData1[]    - used to store previous sample of
 339:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  any enabled raw data filter.
 340:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[]    - used to store before previous sample
 341:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 342:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 343:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 344:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 345:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 346:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 13


 347:Generated_Source\PSoC4/CapSense_1_CSHL.c **** void CapSense_1_UpdateBaselineNoThreshold(uint32 sensor)
 348:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 335              		.loc 1 348 0
 336              		.cfi_startproc
 337 0000 90B5     		push	{r4, r7, lr}
 338              		.cfi_def_cfa_offset 12
 339              		.cfi_offset 4, -12
 340              		.cfi_offset 7, -8
 341              		.cfi_offset 14, -4
 342 0002 87B0     		sub	sp, sp, #28
 343              		.cfi_def_cfa_offset 40
 344 0004 00AF     		add	r7, sp, #0
 345              		.cfi_def_cfa_register 7
 346 0006 7860     		str	r0, [r7, #4]
 349:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 calc;
 350:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 sign;
 351:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 tempRaw;
 352:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 filteredRawData;
 353:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 widget = CapSense_1_widgetNumber[sensor];
 347              		.loc 1 353 0
 348 0008 0F23     		mov	r3, #15
 349 000a FB18     		add	r3, r7, r3
 350 000c 7E49     		ldr	r1, .L29
 351 000e 7A68     		ldr	r2, [r7, #4]
 352 0010 8A18     		add	r2, r1, r2
 353 0012 1278     		ldrb	r2, [r2]
 354 0014 1A70     		strb	r2, [r3]
 354:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 noiseThreshold;
 355:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 356:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 357:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 358:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(widget < CapSense_1_END_OF_WIDGETS_INDEX)
 359:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
 360:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 361:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 362:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     noiseThreshold = CapSense_1_noiseThreshold[widget];
 355              		.loc 1 362 0
 356 0016 0F23     		mov	r3, #15
 357 0018 FB18     		add	r3, r7, r3
 358 001a 1A78     		ldrb	r2, [r3]
 359 001c 0E23     		mov	r3, #14
 360 001e FB18     		add	r3, r7, r3
 361 0020 7A49     		ldr	r1, .L29+4
 362 0022 8A5C     		ldrb	r2, [r1, r2]
 363 0024 1A70     		strb	r2, [r3]
 363:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     filteredRawData = CapSense_1_sensorRaw[sensor];
 364              		.loc 1 363 0
 365 0026 1023     		mov	r3, #16
 366 0028 FB18     		add	r3, r7, r3
 367 002a 794A     		ldr	r2, .L29+8
 368 002c 7968     		ldr	r1, [r7, #4]
 369 002e 4900     		lsl	r1, r1, #1
 370 0030 8A5A     		ldrh	r2, [r1, r2]
 371 0032 1A80     		strh	r2, [r3]
 364:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 365:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if (CapSense_1_RAW_FILTER_MASK != 0u)
 366:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     if(CapSense_1_enableRawFilters != 0u)
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 14


 372              		.loc 1 366 0
 373 0034 774B     		ldr	r3, .L29+12
 374 0036 1B78     		ldrb	r3, [r3]
 375 0038 002B     		cmp	r3, #0
 376 003a 15D0     		beq	.L17
 367:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 368:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER)
 369:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             tempRaw = filteredRawData;
 370:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             filteredRawData = CapSense_1_MedianFilter(filteredRawData, CapSense_1_rawFilterData1[se
 371:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                             CapSense_1_rawFilterData2[sensor]);
 372:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_rawFilterData2[sensor] = CapSense_1_rawFilterData1[sensor];
 373:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_rawFilterData1[sensor] = tempRaw;
 374:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 375:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER)
 376:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             tempRaw = filteredRawData;
 377:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             filteredRawData = CapSense_1_AveragingFilter(filteredRawData, CapSense_1_rawFilterData1
 378:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                CapSense_1_rawFilterData2[sensor]);
 379:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_rawFilterData2[sensor] = CapSense_1_rawFilterData1[sensor];
 380:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_rawFilterData1[sensor] = tempRaw;
 381:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 382:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER)
 383:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             filteredRawData = CapSense_1_IIR2Filter(filteredRawData, CapSense_1_rawFilterData1[sens
 384:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_rawFilterData1[sensor] = filteredRawData;
 385:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 386:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER)
 387:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             filteredRawData = CapSense_1_IIR4Filter(filteredRawData, CapSense_1_rawFilterData1[sens
 377              		.loc 1 387 0
 378 003c 764B     		ldr	r3, .L29+16
 379 003e 7A68     		ldr	r2, [r7, #4]
 380 0040 5200     		lsl	r2, r2, #1
 381 0042 D25A     		ldrh	r2, [r2, r3]
 382 0044 1023     		mov	r3, #16
 383 0046 FC18     		add	r4, r7, r3
 384 0048 1023     		mov	r3, #16
 385 004a FB18     		add	r3, r7, r3
 386 004c 1B88     		ldrh	r3, [r3]
 387 004e 181C     		mov	r0, r3
 388 0050 111C     		mov	r1, r2
 389 0052 FFF7FEFF 		bl	CapSense_1_IIR4Filter
 390 0056 031C     		mov	r3, r0
 391 0058 2380     		strh	r3, [r4]
 388:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_rawFilterData1[sensor] = filteredRawData;
 392              		.loc 1 388 0
 393 005a 6F4B     		ldr	r3, .L29+16
 394 005c 7A68     		ldr	r2, [r7, #4]
 395 005e 5200     		lsl	r2, r2, #1
 396 0060 1021     		mov	r1, #16
 397 0062 7918     		add	r1, r7, r1
 398 0064 0988     		ldrh	r1, [r1]
 399 0066 D152     		strh	r1, [r2, r3]
 400              	.L17:
 389:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 390:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER)
 391:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             filteredRawData = CapSense_1_JitterFilter(filteredRawData, CapSense_1_rawFilterData1[se
 392:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_rawFilterData1[sensor] = filteredRawData;
 393:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 394:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER)
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 15


 395:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             filteredRawData = CapSense_1_IIR8Filter(filteredRawData, CapSense_1_rawFilterData1[sens
 396:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_rawFilterData1[sensor] = filteredRawData;
 397:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 398:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER)
 399:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             filteredRawData = CapSense_1_IIR16Filter(filteredRawData, CapSense_1_rawFilterData1[sen
 400:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_rawFilterData1[sensor] = filteredRawData;
 401:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 402:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #else
 403:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* No Raw filters */
 404:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif  /* (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) */
 405:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 406:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_RAW_FILTER_MASK != 0u) */
 407:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 408:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if (CapSense_1_TUNING_METHOD == CapSense_1__TUNING_AUTO)
 409:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_60(&CapSense_1_config, (uint8)sensor, CapSense_1_sensorRaw);
 401              		.loc 1 409 0
 402 0068 7B68     		ldr	r3, [r7, #4]
 403 006a DAB2     		uxtb	r2, r3
 404 006c 6B49     		ldr	r1, .L29+20
 405 006e 684B     		ldr	r3, .L29+8
 406 0070 081C     		mov	r0, r1
 407 0072 111C     		mov	r1, r2
 408 0074 1A1C     		mov	r2, r3
 409 0076 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_60
 410:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif /* (CapSense_1_TUNING_METHOD == CapSense_1__TUNING_AUTO) */
 411:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 412:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Baseline calculation */
 413:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 414:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     if(filteredRawData >= CapSense_1_sensorBaseline[sensor])
 410              		.loc 1 414 0
 411 007a 694B     		ldr	r3, .L29+24
 412 007c 7A68     		ldr	r2, [r7, #4]
 413 007e 5200     		lsl	r2, r2, #1
 414 0080 D35A     		ldrh	r3, [r2, r3]
 415 0082 1022     		mov	r2, #16
 416 0084 BA18     		add	r2, r7, r2
 417 0086 1288     		ldrh	r2, [r2]
 418 0088 9A42     		cmp	r2, r3
 419 008a 12D3     		bcc	.L18
 415:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 416:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 420              		.loc 1 416 0
 421 008c 654A     		ldr	r2, .L29+28
 422 008e 7B68     		ldr	r3, [r7, #4]
 423 0090 D318     		add	r3, r2, r3
 424 0092 0022     		mov	r2, #0
 425 0094 1A70     		strb	r2, [r3]
 417:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tempRaw = filteredRawData - CapSense_1_sensorBaseline[sensor];
 426              		.loc 1 417 0
 427 0096 624B     		ldr	r3, .L29+24
 428 0098 7A68     		ldr	r2, [r7, #4]
 429 009a 5200     		lsl	r2, r2, #1
 430 009c D25A     		ldrh	r2, [r2, r3]
 431 009e 1223     		mov	r3, #18
 432 00a0 FB18     		add	r3, r7, r3
 433 00a2 1021     		mov	r1, #16
 434 00a4 7918     		add	r1, r7, r1
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 16


 435 00a6 0988     		ldrh	r1, [r1]
 436 00a8 8A1A     		sub	r2, r1, r2
 437 00aa 1A80     		strh	r2, [r3]
 418:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 438              		.loc 1 418 0
 439 00ac 0123     		mov	r3, #1
 440 00ae 7B61     		str	r3, [r7, #20]
 441 00b0 0CE0     		b	.L19
 442              	.L18:
 419:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 420:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     else
 421:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 422:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tempRaw = CapSense_1_sensorBaseline[sensor] - filteredRawData;
 443              		.loc 1 422 0
 444 00b2 5B4B     		ldr	r3, .L29+24
 445 00b4 7A68     		ldr	r2, [r7, #4]
 446 00b6 5200     		lsl	r2, r2, #1
 447 00b8 D15A     		ldrh	r1, [r2, r3]
 448 00ba 1223     		mov	r3, #18
 449 00bc FB18     		add	r3, r7, r3
 450 00be 1022     		mov	r2, #16
 451 00c0 BA18     		add	r2, r7, r2
 452 00c2 1288     		ldrh	r2, [r2]
 453 00c4 8A1A     		sub	r2, r1, r2
 454 00c6 1A80     		strh	r2, [r3]
 423:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 455              		.loc 1 423 0
 456 00c8 0023     		mov	r3, #0
 457 00ca 7B61     		str	r3, [r7, #20]
 458              	.L19:
 424:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 425:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 426:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if (CapSense_1_TUNING_METHOD != CapSense_1__TUNING_NONE)
 427:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_1_negativeNoiseThreshold[widget]))
 459              		.loc 1 427 0
 460 00cc 7B69     		ldr	r3, [r7, #20]
 461 00ce 002B     		cmp	r3, #0
 462 00d0 2AD1     		bne	.L20
 463              		.loc 1 427 0 is_stmt 0 discriminator 1
 464 00d2 0F23     		mov	r3, #15
 465 00d4 FB18     		add	r3, r7, r3
 466 00d6 1B78     		ldrb	r3, [r3]
 467 00d8 534A     		ldr	r2, .L29+32
 468 00da D35C     		ldrb	r3, [r2, r3]
 469 00dc 9BB2     		uxth	r3, r3
 470 00de 1222     		mov	r2, #18
 471 00e0 BA18     		add	r2, r7, r2
 472 00e2 1288     		ldrh	r2, [r2]
 473 00e4 9A42     		cmp	r2, r3
 474 00e6 1FD9     		bls	.L20
 428:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #else
 429:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD))
 430:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif /* (CapSense_1_TUNING_METHOD != CapSense_1__TUNING_NONE) */
 431:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 432:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(CapSense_1_lowBaselineResetCnt[sensor] >= CapSense_1_lowBaselineReset[sensor])
 475              		.loc 1 432 0 is_stmt 1
 476 00e8 4E4A     		ldr	r2, .L29+28
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 17


 477 00ea 7B68     		ldr	r3, [r7, #4]
 478 00ec D318     		add	r3, r2, r3
 479 00ee 1A78     		ldrb	r2, [r3]
 480 00f0 4E49     		ldr	r1, .L29+36
 481 00f2 7B68     		ldr	r3, [r7, #4]
 482 00f4 CB18     		add	r3, r1, r3
 483 00f6 1B78     		ldrb	r3, [r3]
 484 00f8 9A42     		cmp	r2, r3
 485 00fa 09D3     		bcc	.L21
 433:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
 434:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor);
 486              		.loc 1 434 0
 487 00fc 7B68     		ldr	r3, [r7, #4]
 488 00fe 181C     		mov	r0, r3
 489 0100 FFF7FEFF 		bl	CapSense_1_BaseInit
 435:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 490              		.loc 1 435 0
 491 0104 474A     		ldr	r2, .L29+28
 492 0106 7B68     		ldr	r3, [r7, #4]
 493 0108 D318     		add	r3, r2, r3
 494 010a 0022     		mov	r2, #0
 495 010c 1A70     		strb	r2, [r3]
 432:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
 496              		.loc 1 432 0
 497 010e 51E0     		b	.L23
 498              	.L21:
 436:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
 437:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         else
 438:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
 439:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor]++;
 499              		.loc 1 439 0
 500 0110 444A     		ldr	r2, .L29+28
 501 0112 7B68     		ldr	r3, [r7, #4]
 502 0114 D318     		add	r3, r2, r3
 503 0116 1B78     		ldrb	r3, [r3]
 504 0118 0133     		add	r3, r3, #1
 505 011a D9B2     		uxtb	r1, r3
 506 011c 414A     		ldr	r2, .L29+28
 507 011e 7B68     		ldr	r3, [r7, #4]
 508 0120 D318     		add	r3, r2, r3
 509 0122 0A1C     		add	r2, r1, #0
 510 0124 1A70     		strb	r2, [r3]
 432:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
 511              		.loc 1 432 0
 512 0126 45E0     		b	.L23
 513              	.L20:
 440:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
 441:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 442:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     else
 443:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 444:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE)
 445:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_TUNING_METHOD != CapSense_1__TUNING_NONE)
 446:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 447:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 514              		.loc 1 447 0
 515 0128 0E23     		mov	r3, #14
 516 012a FB18     		add	r3, r7, r3
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 18


 517 012c 1B78     		ldrb	r3, [r3]
 518 012e 9BB2     		uxth	r3, r3
 519 0130 1222     		mov	r2, #18
 520 0132 BA18     		add	r2, r7, r2
 521 0134 1288     		ldrh	r2, [r2]
 522 0136 9A42     		cmp	r2, r3
 523 0138 0DD9     		bls	.L24
 448:Generated_Source\PSoC4/CapSense_1_CSHL.c ****              ((tempRaw < (uint16) CapSense_1_negativeNoiseThreshold[widget])
 524              		.loc 1 448 0 discriminator 1
 525 013a 0F23     		mov	r3, #15
 526 013c FB18     		add	r3, r7, r3
 527 013e 1B78     		ldrb	r3, [r3]
 528 0140 394A     		ldr	r2, .L29+32
 529 0142 D35C     		ldrb	r3, [r2, r3]
 530 0144 9BB2     		uxth	r3, r3
 447:Generated_Source\PSoC4/CapSense_1_CSHL.c ****              ((tempRaw < (uint16) CapSense_1_negativeNoiseThreshold[widget])
 531              		.loc 1 447 0 discriminator 1
 532 0146 1222     		mov	r2, #18
 533 0148 BA18     		add	r2, r7, r2
 534 014a 1288     		ldrh	r2, [r2]
 535 014c 9A42     		cmp	r2, r3
 536 014e 31D2     		bcs	.L23
 449:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                && (sign == 0u)))
 537              		.loc 1 449 0
 538 0150 7B69     		ldr	r3, [r7, #20]
 539 0152 002B     		cmp	r3, #0
 540 0154 2ED1     		bne	.L23
 541              	.L24:
 450:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
 451:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #else
 452:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 453:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 454:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                  ((tempRaw < (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD)
 455:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                    && (sign == 0u)))
 456:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
 457:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_TUNING_METHOD != CapSense_1__TUNING_NONE) */
 458:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE) */
 459:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Make full Baseline 23 bits */
 460:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 calc = (uint32) CapSense_1_sensorBaseline[sensor] << 8u;
 542              		.loc 1 460 0
 543 0156 324B     		ldr	r3, .L29+24
 544 0158 7A68     		ldr	r2, [r7, #4]
 545 015a 5200     		lsl	r2, r2, #1
 546 015c D35A     		ldrh	r3, [r2, r3]
 547 015e 1B02     		lsl	r3, r3, #8
 548 0160 BB60     		str	r3, [r7, #8]
 461:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 calc |= (uint32) CapSense_1_sensorBaselineLow[sensor];
 549              		.loc 1 461 0
 550 0162 334A     		ldr	r2, .L29+40
 551 0164 7B68     		ldr	r3, [r7, #4]
 552 0166 D318     		add	r3, r2, r3
 553 0168 1B78     		ldrb	r3, [r3]
 554 016a 1A1C     		mov	r2, r3
 555 016c BB68     		ldr	r3, [r7, #8]
 556 016e 1343     		orr	r3, r2
 557 0170 BB60     		str	r3, [r7, #8]
 462:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 19


 463:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Add Raw Data to Baseline */
 464:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 calc += filteredRawData;
 558              		.loc 1 464 0
 559 0172 1023     		mov	r3, #16
 560 0174 FB18     		add	r3, r7, r3
 561 0176 1B88     		ldrh	r3, [r3]
 562 0178 BA68     		ldr	r2, [r7, #8]
 563 017a D318     		add	r3, r2, r3
 564 017c BB60     		str	r3, [r7, #8]
 465:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 466:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Sub the high Baseline */
 467:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 calc -= CapSense_1_sensorBaseline[sensor];
 565              		.loc 1 467 0
 566 017e 284B     		ldr	r3, .L29+24
 567 0180 7A68     		ldr	r2, [r7, #4]
 568 0182 5200     		lsl	r2, r2, #1
 569 0184 D35A     		ldrh	r3, [r2, r3]
 570 0186 1A1C     		mov	r2, r3
 571 0188 BB68     		ldr	r3, [r7, #8]
 572 018a 9B1A     		sub	r3, r3, r2
 573 018c BB60     		str	r3, [r7, #8]
 468:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 469:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Put Baseline and BaselineLow */
 470:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 574              		.loc 1 470 0
 575 018e BB68     		ldr	r3, [r7, #8]
 576 0190 1B0A     		lsr	r3, r3, #8
 577 0192 99B2     		uxth	r1, r3
 578 0194 224B     		ldr	r3, .L29+24
 579 0196 7A68     		ldr	r2, [r7, #4]
 580 0198 5200     		lsl	r2, r2, #1
 581 019a D152     		strh	r1, [r2, r3]
 471:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaselineLow[sensor] = ((uint8) calc);
 582              		.loc 1 471 0
 583 019c BB68     		ldr	r3, [r7, #8]
 584 019e D9B2     		uxtb	r1, r3
 585 01a0 234A     		ldr	r2, .L29+40
 586 01a2 7B68     		ldr	r3, [r7, #4]
 587 01a4 D318     		add	r3, r2, r3
 588 01a6 0A1C     		add	r2, r1, #0
 589 01a8 1A70     		strb	r2, [r3]
 472:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 473:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 590              		.loc 1 473 0
 591 01aa 1E4A     		ldr	r2, .L29+28
 592 01ac 7B68     		ldr	r3, [r7, #4]
 593 01ae D318     		add	r3, r2, r3
 594 01b0 0022     		mov	r2, #0
 595 01b2 1A70     		strb	r2, [r3]
 596              	.L23:
 474:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE)
 475:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
 476:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE) */
 477:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 478:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 479:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 480:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 20


 597              		.loc 1 480 0
 598 01b4 0E23     		mov	r3, #14
 599 01b6 FB18     		add	r3, r7, r3
 600 01b8 1B78     		ldrb	r3, [r3]
 601 01ba 9BB2     		uxth	r3, r3
 602 01bc 1222     		mov	r2, #18
 603 01be BA18     		add	r2, r7, r2
 604 01c0 1288     		ldrh	r2, [r2]
 605 01c2 9A42     		cmp	r2, r3
 606 01c4 17D9     		bls	.L25
 607              		.loc 1 480 0 is_stmt 0 discriminator 1
 608 01c6 7B69     		ldr	r3, [r7, #20]
 609 01c8 002B     		cmp	r3, #0
 610 01ca 14D0     		beq	.L25
 481:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 482:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_SIGNAL_SIZE == CapSense_1_SIGNAL_SIZE_UINT8)
 483:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Over flow defence for uint8 */
 484:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if (tempRaw > 0xFFu)
 611              		.loc 1 484 0 is_stmt 1
 612 01cc 1223     		mov	r3, #18
 613 01ce FB18     		add	r3, r7, r3
 614 01d0 1B88     		ldrh	r3, [r3]
 615 01d2 FF2B     		cmp	r3, #255
 616 01d4 05D9     		bls	.L26
 485:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
 486:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 CapSense_1_sensorSignal[sensor] = 0xFFu;
 617              		.loc 1 486 0
 618 01d6 174A     		ldr	r2, .L29+44
 619 01d8 7B68     		ldr	r3, [r7, #4]
 620 01da D318     		add	r3, r2, r3
 621 01dc FF22     		mov	r2, #255
 622 01de 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
 623              		.loc 1 484 0
 624 01e0 0EE0     		b	.L16
 625              	.L26:
 487:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
 488:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             else
 489:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
 490:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 CapSense_1_sensorSignal[sensor] = ((uint8) tempRaw);
 626              		.loc 1 490 0
 627 01e2 1223     		mov	r3, #18
 628 01e4 FB18     		add	r3, r7, r3
 629 01e6 1B88     		ldrh	r3, [r3]
 630 01e8 D9B2     		uxtb	r1, r3
 631 01ea 124A     		ldr	r2, .L29+44
 632 01ec 7B68     		ldr	r3, [r7, #4]
 633 01ee D318     		add	r3, r2, r3
 634 01f0 0A1C     		add	r2, r1, #0
 635 01f2 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
 636              		.loc 1 484 0
 637 01f4 04E0     		b	.L16
 638              	.L25:
 491:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
 492:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #else
 493:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_sensorSignal[sensor] = ((uint16) tempRaw);
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 21


 494:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif  /* (CapSense_1_SIGNAL_SIZE == CapSense_1_SIGNAL_SIZE_UINT8) */
 495:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 496:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     else
 497:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 498:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Signal is zero */
 499:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_sensorSignal[sensor] = 0u;
 639              		.loc 1 499 0
 640 01f6 0F4A     		ldr	r2, .L29+44
 641 01f8 7B68     		ldr	r3, [r7, #4]
 642 01fa D318     		add	r3, r2, r3
 643 01fc 0022     		mov	r2, #0
 644 01fe 1A70     		strb	r2, [r3]
 645              	.L16:
 500:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 501:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 502:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 503:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 504:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
 505:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 506:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 646              		.loc 1 506 0
 647 0200 BD46     		mov	sp, r7
 648 0202 07B0     		add	sp, sp, #28
 649              		@ sp needed
 650 0204 90BD     		pop	{r4, r7, pc}
 651              	.L30:
 652 0206 C046     		.align	2
 653              	.L29:
 654 0208 00000000 		.word	CapSense_1_widgetNumber
 655 020c 00000000 		.word	CapSense_1_noiseThreshold
 656 0210 00000000 		.word	CapSense_1_sensorRaw
 657 0214 00000000 		.word	CapSense_1_enableRawFilters
 658 0218 00000000 		.word	CapSense_1_rawFilterData1
 659 021c 00000000 		.word	CapSense_1_config
 660 0220 00000000 		.word	CapSense_1_sensorBaseline
 661 0224 00000000 		.word	CapSense_1_lowBaselineResetCnt
 662 0228 00000000 		.word	CapSense_1_negativeNoiseThreshold
 663 022c 00000000 		.word	CapSense_1_lowBaselineReset
 664 0230 00000000 		.word	CapSense_1_sensorBaselineLow
 665 0234 00000000 		.word	CapSense_1_sensorSignal
 666              		.cfi_endproc
 667              	.LFE39:
 668              		.size	CapSense_1_UpdateBaselineNoThreshold, .-CapSense_1_UpdateBaselineNoThreshold
 669              		.section	.text.CapSense_1_UpdateSensorBaseline,"ax",%progbits
 670              		.align	2
 671              		.global	CapSense_1_UpdateSensorBaseline
 672              		.code	16
 673              		.thumb_func
 674              		.type	CapSense_1_UpdateSensorBaseline, %function
 675              	CapSense_1_UpdateSensorBaseline:
 676              	.LFB40:
 507:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 508:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 509:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 510:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateSensorBaseline
 511:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 512:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 22


 513:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 514:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Updates the CapSense_1_sensorBaseline[sensor] array element using the
 515:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 516:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 517:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  it in CapSense_1_sensorSignal[sensor].
 518:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 519:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 520:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 521:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  if signal is less than noise threshold.
 522:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 523:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  calculation.
 524:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 525:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 526:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 527:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 528:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 529:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 530:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 531:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 532:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 533:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_widgetNumber[]  - stores widget numbers.
 534:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 535:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 536:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 537:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 538:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 539:Generated_Source\PSoC4/CapSense_1_CSHL.c ****  void CapSense_1_UpdateSensorBaseline(uint32 sensor)
 540:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 677              		.loc 1 540 0
 678              		.cfi_startproc
 679 0000 80B5     		push	{r7, lr}
 680              		.cfi_def_cfa_offset 8
 681              		.cfi_offset 7, -8
 682              		.cfi_offset 14, -4
 683 0002 82B0     		sub	sp, sp, #8
 684              		.cfi_def_cfa_offset 16
 685 0004 00AF     		add	r7, sp, #0
 686              		.cfi_def_cfa_register 7
 687 0006 7860     		str	r0, [r7, #4]
 541:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 542:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint32 widget;
 543:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 544:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         widget = CapSense_1_widgetNumber[sensor];
 545:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 546:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 547:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(widget < CapSense_1_END_OF_WIDGETS_INDEX)
 548:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
 549:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 550:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 551:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if (CapSense_1_TUNING_METHOD == CapSense_1__TUNING_AUTO)
 552:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_UpdateThresholds(sensor);
 688              		.loc 1 552 0
 689 0008 7B68     		ldr	r3, [r7, #4]
 690 000a 181C     		mov	r0, r3
 691 000c FFF7FEFF 		bl	CapSense_1_UpdateThresholds
 553:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif /* (CapSense_1_TUNING_METHOD == CapSense_1__TUNING_AUTO) */
 554:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 23


 555:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     CapSense_1_UpdateBaselineNoThreshold(sensor);
 692              		.loc 1 555 0
 693 0010 7B68     		ldr	r3, [r7, #4]
 694 0012 181C     		mov	r0, r3
 695 0014 FFF7FEFF 		bl	CapSense_1_UpdateBaselineNoThreshold
 556:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 557:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 558:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 559:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
 560:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 561:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 696              		.loc 1 561 0
 697 0018 BD46     		mov	sp, r7
 698 001a 02B0     		add	sp, sp, #8
 699              		@ sp needed
 700 001c 80BD     		pop	{r7, pc}
 701              		.cfi_endproc
 702              	.LFE40:
 703              		.size	CapSense_1_UpdateSensorBaseline, .-CapSense_1_UpdateSensorBaseline
 704 001e C046     		.section	.text.CapSense_1_UpdateEnabledBaselines,"ax",%progbits
 705              		.align	2
 706              		.global	CapSense_1_UpdateEnabledBaselines
 707              		.code	16
 708              		.thumb_func
 709              		.type	CapSense_1_UpdateEnabledBaselines, %function
 710              	CapSense_1_UpdateEnabledBaselines:
 711              	.LFB41:
 562:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 563:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 564:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 565:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateEnabledBaselines
 566:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 567:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 568:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 569:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Checks CapSense_1_sensorEnableMask[] array and calls the
 570:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_UpdateSensorBaseline function to update the baselines
 571:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  for the enabled sensors.
 572:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 573:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 574:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 575:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 576:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 577:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 578:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 579:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 580:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning
 581:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  state.
 582:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors
 583:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 584:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for
 585:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 586:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 587:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 588:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 589:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 590:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 591:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 24


 592:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/CapSense_1_CSHL.c ****  void CapSense_1_UpdateEnabledBaselines(void)
 594:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 712              		.loc 1 594 0
 713              		.cfi_startproc
 714 0000 80B5     		push	{r7, lr}
 715              		.cfi_def_cfa_offset 8
 716              		.cfi_offset 7, -8
 717              		.cfi_offset 14, -4
 718 0002 82B0     		sub	sp, sp, #8
 719              		.cfi_def_cfa_offset 16
 720 0004 00AF     		add	r7, sp, #0
 721              		.cfi_def_cfa_register 7
 595:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 i;
 596:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 isSensorEnabled;
 597:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 598:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 722              		.loc 1 598 0
 723 0006 0023     		mov	r3, #0
 724 0008 7B60     		str	r3, [r7, #4]
 725 000a 11E0     		b	.L33
 726              	.L35:
 599:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 600:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         isSensorEnabled = CapSense_1_GetBitValue(CapSense_1_sensorEnableMask, i);
 727              		.loc 1 600 0
 728 000c 0B4A     		ldr	r2, .L36
 729 000e 7B68     		ldr	r3, [r7, #4]
 730 0010 101C     		mov	r0, r2
 731 0012 191C     		mov	r1, r3
 732 0014 FFF7FEFF 		bl	CapSense_1_GetBitValue
 733 0018 031C     		mov	r3, r0
 734 001a 3B60     		str	r3, [r7]
 601:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 602:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(0u != isSensorEnabled)
 735              		.loc 1 602 0
 736 001c 3B68     		ldr	r3, [r7]
 737 001e 002B     		cmp	r3, #0
 738 0020 03D0     		beq	.L34
 603:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
 604:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_UpdateSensorBaseline(i);
 739              		.loc 1 604 0
 740 0022 7B68     		ldr	r3, [r7, #4]
 741 0024 181C     		mov	r0, r3
 742 0026 FFF7FEFF 		bl	CapSense_1_UpdateSensorBaseline
 743              	.L34:
 598:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 744              		.loc 1 598 0 discriminator 2
 745 002a 7B68     		ldr	r3, [r7, #4]
 746 002c 0133     		add	r3, r3, #1
 747 002e 7B60     		str	r3, [r7, #4]
 748              	.L33:
 598:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 749              		.loc 1 598 0 is_stmt 0 discriminator 1
 750 0030 7B68     		ldr	r3, [r7, #4]
 751 0032 002B     		cmp	r3, #0
 752 0034 EAD0     		beq	.L35
 605:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 25


 606:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 607:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 753              		.loc 1 607 0 is_stmt 1
 754 0036 BD46     		mov	sp, r7
 755 0038 02B0     		add	sp, sp, #8
 756              		@ sp needed
 757 003a 80BD     		pop	{r7, pc}
 758              	.L37:
 759              		.align	2
 760              	.L36:
 761 003c 00000000 		.word	CapSense_1_sensorEnableMask
 762              		.cfi_endproc
 763              	.LFE41:
 764              		.size	CapSense_1_UpdateEnabledBaselines, .-CapSense_1_UpdateEnabledBaselines
 765              		.section	.text.CapSense_1_UpdateWidgetBaseline,"ax",%progbits
 766              		.align	2
 767              		.global	CapSense_1_UpdateWidgetBaseline
 768              		.code	16
 769              		.thumb_func
 770              		.type	CapSense_1_UpdateWidgetBaseline, %function
 771              	CapSense_1_UpdateWidgetBaseline:
 772              	.LFB42:
 608:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 609:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 610:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateWidgetBaseline
 611:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 612:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 613:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 614:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Checks CapSense_1_sensorEnableMask[] array and calls the
 615:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_UpdateSensorBaseline function to update the baselines
 616:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  for the enabled sensors that belong to widget.
 617:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 618:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 619:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  widget:  Widget number.
 620:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 621:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 622:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 623:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 624:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 625:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning
 626:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  state.
 627:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors
 628:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 629:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for
 630:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 631:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 632:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 633:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 634:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 635:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 636:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 637:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/CapSense_1_CSHL.c **** void CapSense_1_UpdateWidgetBaseline(uint32 widget)
 639:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 773              		.loc 1 639 0
 774              		.cfi_startproc
 775 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 26


 776              		.cfi_def_cfa_offset 8
 777              		.cfi_offset 7, -8
 778              		.cfi_offset 14, -4
 779 0002 88B0     		sub	sp, sp, #32
 780              		.cfi_def_cfa_offset 40
 781 0004 00AF     		add	r7, sp, #0
 782              		.cfi_def_cfa_register 7
 783 0006 7860     		str	r0, [r7, #4]
 640:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 sensorsPerWidget;
 641:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 firstSensor;
 642:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 lastSensor;
 643:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 i;
 644:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 isSensorEnabled;
 645:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 646:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Get number of sensors in widget */
 647:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     sensorsPerWidget = CapSense_1_numberOfSensors[widget];
 784              		.loc 1 647 0
 785 0008 0123     		mov	r3, #1
 786 000a BB61     		str	r3, [r7, #24]
 648:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 649:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Get first sensor in widget */
 650:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     firstSensor = CapSense_1_rawDataIndex[widget];
 787              		.loc 1 650 0
 788 000c 0023     		mov	r3, #0
 789 000e 7B61     		str	r3, [r7, #20]
 651:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 652:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Get last sensor in widget */
 653:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     lastSensor = (CapSense_1_rawDataIndex[widget] + sensorsPerWidget);
 790              		.loc 1 653 0
 791 0010 0023     		mov	r3, #0
 792 0012 1A1C     		mov	r2, r3
 793 0014 BB69     		ldr	r3, [r7, #24]
 794 0016 D318     		add	r3, r2, r3
 795 0018 3B61     		str	r3, [r7, #16]
 654:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 655:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 796              		.loc 1 655 0
 797 001a 7B69     		ldr	r3, [r7, #20]
 798 001c FB61     		str	r3, [r7, #28]
 799 001e 11E0     		b	.L39
 800              	.L41:
 656:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 657:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         isSensorEnabled = CapSense_1_GetBitValue(CapSense_1_sensorEnableMask, i);
 801              		.loc 1 657 0
 802 0020 0C4A     		ldr	r2, .L42
 803 0022 FB69     		ldr	r3, [r7, #28]
 804 0024 101C     		mov	r0, r2
 805 0026 191C     		mov	r1, r3
 806 0028 FFF7FEFF 		bl	CapSense_1_GetBitValue
 807 002c 031C     		mov	r3, r0
 808 002e FB60     		str	r3, [r7, #12]
 658:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 659:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(0u != isSensorEnabled)
 809              		.loc 1 659 0
 810 0030 FB68     		ldr	r3, [r7, #12]
 811 0032 002B     		cmp	r3, #0
 812 0034 03D0     		beq	.L40
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 27


 660:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
 661:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_UpdateSensorBaseline(i);
 813              		.loc 1 661 0
 814 0036 FB69     		ldr	r3, [r7, #28]
 815 0038 181C     		mov	r0, r3
 816 003a FFF7FEFF 		bl	CapSense_1_UpdateSensorBaseline
 817              	.L40:
 655:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 818              		.loc 1 655 0 discriminator 2
 819 003e FB69     		ldr	r3, [r7, #28]
 820 0040 0133     		add	r3, r3, #1
 821 0042 FB61     		str	r3, [r7, #28]
 822              	.L39:
 655:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 823              		.loc 1 655 0 is_stmt 0 discriminator 1
 824 0044 FA69     		ldr	r2, [r7, #28]
 825 0046 3B69     		ldr	r3, [r7, #16]
 826 0048 9A42     		cmp	r2, r3
 827 004a E9D3     		bcc	.L41
 662:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
 663:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 664:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 828              		.loc 1 664 0 is_stmt 1
 829 004c BD46     		mov	sp, r7
 830 004e 08B0     		add	sp, sp, #32
 831              		@ sp needed
 832 0050 80BD     		pop	{r7, pc}
 833              	.L43:
 834 0052 C046     		.align	2
 835              	.L42:
 836 0054 00000000 		.word	CapSense_1_sensorEnableMask
 837              		.cfi_endproc
 838              	.LFE42:
 839              		.size	CapSense_1_UpdateWidgetBaseline, .-CapSense_1_UpdateWidgetBaseline
 840              		.section	.text.CapSense_1_GetBaselineData,"ax",%progbits
 841              		.align	2
 842              		.global	CapSense_1_GetBaselineData
 843              		.code	16
 844              		.thumb_func
 845              		.type	CapSense_1_GetBaselineData, %function
 846              	CapSense_1_GetBaselineData:
 847              	.LFB43:
 665:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 666:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 667:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_GetBaselineData
 669:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 670:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 671:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 672:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This function reads the sensor baseline from the component.
 673:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 674:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 675:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 676:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 677:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 678:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 679:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 28


 680:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 681:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[] - the array with an initial values by scanning
 682:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 683:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 684:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 685:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 686:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 687:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint16 CapSense_1_GetBaselineData(uint32 sensor)
 688:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 848              		.loc 1 688 0
 849              		.cfi_startproc
 850 0000 80B5     		push	{r7, lr}
 851              		.cfi_def_cfa_offset 8
 852              		.cfi_offset 7, -8
 853              		.cfi_offset 14, -4
 854 0002 82B0     		sub	sp, sp, #8
 855              		.cfi_def_cfa_offset 16
 856 0004 00AF     		add	r7, sp, #0
 857              		.cfi_def_cfa_register 7
 858 0006 7860     		str	r0, [r7, #4]
 689:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     return (CapSense_1_sensorBaseline[sensor]);
 859              		.loc 1 689 0
 860 0008 034B     		ldr	r3, .L46
 861 000a 7A68     		ldr	r2, [r7, #4]
 862 000c 5200     		lsl	r2, r2, #1
 863 000e D35A     		ldrh	r3, [r2, r3]
 690:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 864              		.loc 1 690 0
 865 0010 181C     		mov	r0, r3
 866 0012 BD46     		mov	sp, r7
 867 0014 02B0     		add	sp, sp, #8
 868              		@ sp needed
 869 0016 80BD     		pop	{r7, pc}
 870              	.L47:
 871              		.align	2
 872              	.L46:
 873 0018 00000000 		.word	CapSense_1_sensorBaseline
 874              		.cfi_endproc
 875              	.LFE43:
 876              		.size	CapSense_1_GetBaselineData, .-CapSense_1_GetBaselineData
 877              		.section	.text.CapSense_1_SetBaselineData,"ax",%progbits
 878              		.align	2
 879              		.global	CapSense_1_SetBaselineData
 880              		.code	16
 881              		.thumb_func
 882              		.type	CapSense_1_SetBaselineData, %function
 883              	CapSense_1_SetBaselineData:
 884              	.LFB44:
 691:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 692:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 693:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 694:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_SetBaselineData
 695:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 696:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 697:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 698:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 699:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 29


 700:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 701:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 702:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  data:    Sensor baseline.
 703:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 704:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 705:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None.
 706:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 707:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 708:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[] - the array with initial values by scanning
 709:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 710:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 711:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 712:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 713:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 714:Generated_Source\PSoC4/CapSense_1_CSHL.c **** void CapSense_1_SetBaselineData(uint32 sensor, uint16 data)
 715:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 885              		.loc 1 715 0
 886              		.cfi_startproc
 887 0000 80B5     		push	{r7, lr}
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 7, -8
 890              		.cfi_offset 14, -4
 891 0002 82B0     		sub	sp, sp, #8
 892              		.cfi_def_cfa_offset 16
 893 0004 00AF     		add	r7, sp, #0
 894              		.cfi_def_cfa_register 7
 895 0006 7860     		str	r0, [r7, #4]
 896 0008 0A1C     		mov	r2, r1
 897 000a BB1C     		add	r3, r7, #2
 898 000c 1A80     		strh	r2, [r3]
 716:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     CapSense_1_sensorBaseline[sensor] = data;
 899              		.loc 1 716 0
 900 000e 044B     		ldr	r3, .L49
 901 0010 7A68     		ldr	r2, [r7, #4]
 902 0012 5200     		lsl	r2, r2, #1
 903 0014 B91C     		add	r1, r7, #2
 904 0016 0988     		ldrh	r1, [r1]
 905 0018 D152     		strh	r1, [r2, r3]
 717:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 906              		.loc 1 717 0
 907 001a BD46     		mov	sp, r7
 908 001c 02B0     		add	sp, sp, #8
 909              		@ sp needed
 910 001e 80BD     		pop	{r7, pc}
 911              	.L50:
 912              		.align	2
 913              	.L49:
 914 0020 00000000 		.word	CapSense_1_sensorBaseline
 915              		.cfi_endproc
 916              	.LFE44:
 917              		.size	CapSense_1_SetBaselineData, .-CapSense_1_SetBaselineData
 918              		.section	.text.CapSense_1_GetDiffCountData,"ax",%progbits
 919              		.align	2
 920              		.global	CapSense_1_GetDiffCountData
 921              		.code	16
 922              		.thumb_func
 923              		.type	CapSense_1_GetDiffCountData, %function
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 30


 924              	CapSense_1_GetDiffCountData:
 925              	.LFB45:
 718:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 719:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 720:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 721:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_GetDiffCountData
 722:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 723:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 724:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 725:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This function returns the Sensor Signal from the component.
 726:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 727:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 728:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 729:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 730:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 731:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 732:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  argument.
 733:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 734:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 735:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[] - the array with difference counts for sensors
 736:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 737:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 738:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 739:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 740:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 741:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_GetDiffCountData(uint32 sensor)
 742:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 926              		.loc 1 742 0
 927              		.cfi_startproc
 928 0000 80B5     		push	{r7, lr}
 929              		.cfi_def_cfa_offset 8
 930              		.cfi_offset 7, -8
 931              		.cfi_offset 14, -4
 932 0002 82B0     		sub	sp, sp, #8
 933              		.cfi_def_cfa_offset 16
 934 0004 00AF     		add	r7, sp, #0
 935              		.cfi_def_cfa_register 7
 936 0006 7860     		str	r0, [r7, #4]
 743:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     return (CapSense_1_sensorSignal[sensor]);
 937              		.loc 1 743 0
 938 0008 034A     		ldr	r2, .L53
 939 000a 7B68     		ldr	r3, [r7, #4]
 940 000c D318     		add	r3, r2, r3
 941 000e 1B78     		ldrb	r3, [r3]
 744:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 942              		.loc 1 744 0
 943 0010 181C     		mov	r0, r3
 944 0012 BD46     		mov	sp, r7
 945 0014 02B0     		add	sp, sp, #8
 946              		@ sp needed
 947 0016 80BD     		pop	{r7, pc}
 948              	.L54:
 949              		.align	2
 950              	.L53:
 951 0018 00000000 		.word	CapSense_1_sensorSignal
 952              		.cfi_endproc
 953              	.LFE45:
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 31


 954              		.size	CapSense_1_GetDiffCountData, .-CapSense_1_GetDiffCountData
 955              		.section	.text.CapSense_1_SetDiffCountData,"ax",%progbits
 956              		.align	2
 957              		.global	CapSense_1_SetDiffCountData
 958              		.code	16
 959              		.thumb_func
 960              		.type	CapSense_1_SetDiffCountData, %function
 961              	CapSense_1_SetDiffCountData:
 962              	.LFB46:
 745:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 746:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 747:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 748:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_SetDiffCountData
 749:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 750:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 751:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 752:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 753:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 754:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 755:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 756:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  value:   Sensor signal.
 757:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 758:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 759:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None.
 760:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 761:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 762:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[] - the array with difference counts for sensors
 763:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 764:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 765:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 766:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 767:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 768:Generated_Source\PSoC4/CapSense_1_CSHL.c **** void CapSense_1_SetDiffCountData(uint32 sensor, uint8 value)
 769:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 963              		.loc 1 769 0
 964              		.cfi_startproc
 965 0000 80B5     		push	{r7, lr}
 966              		.cfi_def_cfa_offset 8
 967              		.cfi_offset 7, -8
 968              		.cfi_offset 14, -4
 969 0002 82B0     		sub	sp, sp, #8
 970              		.cfi_def_cfa_offset 16
 971 0004 00AF     		add	r7, sp, #0
 972              		.cfi_def_cfa_register 7
 973 0006 7860     		str	r0, [r7, #4]
 974 0008 0A1C     		mov	r2, r1
 975 000a FB1C     		add	r3, r7, #3
 976 000c 1A70     		strb	r2, [r3]
 770:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     CapSense_1_sensorSignal[sensor] = value;
 977              		.loc 1 770 0
 978 000e 044A     		ldr	r2, .L56
 979 0010 7B68     		ldr	r3, [r7, #4]
 980 0012 D318     		add	r3, r2, r3
 981 0014 FA1C     		add	r2, r7, #3
 982 0016 1278     		ldrb	r2, [r2]
 983 0018 1A70     		strb	r2, [r3]
 771:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 32


 984              		.loc 1 771 0
 985 001a BD46     		mov	sp, r7
 986 001c 02B0     		add	sp, sp, #8
 987              		@ sp needed
 988 001e 80BD     		pop	{r7, pc}
 989              	.L57:
 990              		.align	2
 991              	.L56:
 992 0020 00000000 		.word	CapSense_1_sensorSignal
 993              		.cfi_endproc
 994              	.LFE46:
 995              		.size	CapSense_1_SetDiffCountData, .-CapSense_1_SetDiffCountData
 996              		.section	.text.CapSense_1_GetFingerThreshold,"ax",%progbits
 997              		.align	2
 998              		.global	CapSense_1_GetFingerThreshold
 999              		.code	16
 1000              		.thumb_func
 1001              		.type	CapSense_1_GetFingerThreshold, %function
 1002              	CapSense_1_GetFingerThreshold:
 1003              	.LFB47:
 772:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 773:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 774:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 775:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_GetFingerThreshold
 776:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 777:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 778:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 779:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This function reads the finger threshold from the component.
 780:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 781:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 782:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  widget:  widget number.
 783:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 784:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 785:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 786:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 787:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 788:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_fingerThreshold[] - This array contains the level of signal
 789:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 790:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 791:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 792:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 793:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 794:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 795:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_GetFingerThreshold(uint32 widget)
 796:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 1004              		.loc 1 796 0
 1005              		.cfi_startproc
 1006 0000 80B5     		push	{r7, lr}
 1007              		.cfi_def_cfa_offset 8
 1008              		.cfi_offset 7, -8
 1009              		.cfi_offset 14, -4
 1010 0002 82B0     		sub	sp, sp, #8
 1011              		.cfi_def_cfa_offset 16
 1012 0004 00AF     		add	r7, sp, #0
 1013              		.cfi_def_cfa_register 7
 1014 0006 7860     		str	r0, [r7, #4]
 797:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     return(CapSense_1_fingerThreshold[widget]);
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 33


 1015              		.loc 1 797 0
 1016 0008 034A     		ldr	r2, .L60
 1017 000a 7B68     		ldr	r3, [r7, #4]
 1018 000c D318     		add	r3, r2, r3
 1019 000e 1B78     		ldrb	r3, [r3]
 798:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 1020              		.loc 1 798 0
 1021 0010 181C     		mov	r0, r3
 1022 0012 BD46     		mov	sp, r7
 1023 0014 02B0     		add	sp, sp, #8
 1024              		@ sp needed
 1025 0016 80BD     		pop	{r7, pc}
 1026              	.L61:
 1027              		.align	2
 1028              	.L60:
 1029 0018 00000000 		.word	CapSense_1_fingerThreshold
 1030              		.cfi_endproc
 1031              	.LFE47:
 1032              		.size	CapSense_1_GetFingerThreshold, .-CapSense_1_GetFingerThreshold
 1033              		.section	.text.CapSense_1_GetNoiseThreshold,"ax",%progbits
 1034              		.align	2
 1035              		.global	CapSense_1_GetNoiseThreshold
 1036              		.code	16
 1037              		.thumb_func
 1038              		.type	CapSense_1_GetNoiseThreshold, %function
 1039              	CapSense_1_GetNoiseThreshold:
 1040              	.LFB48:
 799:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 800:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 801:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 802:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_GetNoiseThreshold
 803:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 804:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 805:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 806:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This function reads the noise threshold from the component.
 807:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 808:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 809:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  widget:  widget number.
 810:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 811:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 812:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 813:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 814:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 815:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_noiseThreshold[] - This array contains the level of signal
 816:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 817:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 818:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 819:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 820:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 821:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 822:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_GetNoiseThreshold(uint32 widget)
 823:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 1041              		.loc 1 823 0
 1042              		.cfi_startproc
 1043 0000 80B5     		push	{r7, lr}
 1044              		.cfi_def_cfa_offset 8
 1045              		.cfi_offset 7, -8
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 34


 1046              		.cfi_offset 14, -4
 1047 0002 82B0     		sub	sp, sp, #8
 1048              		.cfi_def_cfa_offset 16
 1049 0004 00AF     		add	r7, sp, #0
 1050              		.cfi_def_cfa_register 7
 1051 0006 7860     		str	r0, [r7, #4]
 824:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     return (CapSense_1_noiseThreshold[widget]);
 1052              		.loc 1 824 0
 1053 0008 034A     		ldr	r2, .L64
 1054 000a 7B68     		ldr	r3, [r7, #4]
 1055 000c D318     		add	r3, r2, r3
 1056 000e 1B78     		ldrb	r3, [r3]
 825:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 1057              		.loc 1 825 0
 1058 0010 181C     		mov	r0, r3
 1059 0012 BD46     		mov	sp, r7
 1060 0014 02B0     		add	sp, sp, #8
 1061              		@ sp needed
 1062 0016 80BD     		pop	{r7, pc}
 1063              	.L65:
 1064              		.align	2
 1065              	.L64:
 1066 0018 00000000 		.word	CapSense_1_noiseThreshold
 1067              		.cfi_endproc
 1068              	.LFE48:
 1069              		.size	CapSense_1_GetNoiseThreshold, .-CapSense_1_GetNoiseThreshold
 1070              		.section	.text.CapSense_1_GetFingerHysteresis,"ax",%progbits
 1071              		.align	2
 1072              		.global	CapSense_1_GetFingerHysteresis
 1073              		.code	16
 1074              		.thumb_func
 1075              		.type	CapSense_1_GetFingerHysteresis, %function
 1076              	CapSense_1_GetFingerHysteresis:
 1077              	.LFB49:
 826:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 827:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 828:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 829:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_GetFingerHysteresis
 830:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 831:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 832:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 833:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This function reads the Hysteresis value from the component.
 834:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 835:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 836:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  widget:  widget number.
 837:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 838:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 839:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 840:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 841:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 842:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_hysteresis[] - This array contains the hysteresis value
 843:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *   for each widget.
 844:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_widgetNumberSld - structure with dynamic sliders' parameters.
 845:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 846:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 847:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 848:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 35


 849:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 850:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_GetFingerHysteresis(uint32 widget)
 851:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 1078              		.loc 1 851 0
 1079              		.cfi_startproc
 1080 0000 80B5     		push	{r7, lr}
 1081              		.cfi_def_cfa_offset 8
 1082              		.cfi_offset 7, -8
 1083              		.cfi_offset 14, -4
 1084 0002 82B0     		sub	sp, sp, #8
 1085              		.cfi_def_cfa_offset 16
 1086 0004 00AF     		add	r7, sp, #0
 1087              		.cfi_def_cfa_register 7
 1088 0006 7860     		str	r0, [r7, #4]
 852:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     return(CapSense_1_hysteresis[widget]);
 1089              		.loc 1 852 0
 1090 0008 034A     		ldr	r2, .L68
 1091 000a 7B68     		ldr	r3, [r7, #4]
 1092 000c D318     		add	r3, r2, r3
 1093 000e 1B78     		ldrb	r3, [r3]
 853:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 1094              		.loc 1 853 0
 1095 0010 181C     		mov	r0, r3
 1096 0012 BD46     		mov	sp, r7
 1097 0014 02B0     		add	sp, sp, #8
 1098              		@ sp needed
 1099 0016 80BD     		pop	{r7, pc}
 1100              	.L69:
 1101              		.align	2
 1102              	.L68:
 1103 0018 00000000 		.word	CapSense_1_hysteresis
 1104              		.cfi_endproc
 1105              	.LFE49:
 1106              		.size	CapSense_1_GetFingerHysteresis, .-CapSense_1_GetFingerHysteresis
 1107              		.section	.text.CapSense_1_GetNegativeNoiseThreshold,"ax",%progbits
 1108              		.align	2
 1109              		.global	CapSense_1_GetNegativeNoiseThreshold
 1110              		.code	16
 1111              		.thumb_func
 1112              		.type	CapSense_1_GetNegativeNoiseThreshold, %function
 1113              	CapSense_1_GetNegativeNoiseThreshold:
 1114              	.LFB50:
 854:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 855:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 856:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 857:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_GetNegativeNoiseThreshold
 858:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 859:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 860:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 861:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This function reads the negative noise threshold from the component.
 862:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 863:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 864:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None.
 865:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 866:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return Value:
 867:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API returns the negative noise threshold
 868:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 36


 869:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 870:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_negativeNoiseThreshold - This variable specifies the negative
 871:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 872:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *   to the raw count level.
 873:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 874:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 875:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 876:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 877:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 878:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_GetNegativeNoiseThreshold(uint32 widget)
 879:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 1115              		.loc 1 879 0
 1116              		.cfi_startproc
 1117 0000 80B5     		push	{r7, lr}
 1118              		.cfi_def_cfa_offset 8
 1119              		.cfi_offset 7, -8
 1120              		.cfi_offset 14, -4
 1121 0002 82B0     		sub	sp, sp, #8
 1122              		.cfi_def_cfa_offset 16
 1123 0004 00AF     		add	r7, sp, #0
 1124              		.cfi_def_cfa_register 7
 1125 0006 7860     		str	r0, [r7, #4]
 880:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if (CapSense_1_TUNING_METHOD != CapSense_1__TUNING_NONE)
 881:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     return(CapSense_1_negativeNoiseThreshold[widget]);
 1126              		.loc 1 881 0
 1127 0008 034A     		ldr	r2, .L72
 1128 000a 7B68     		ldr	r3, [r7, #4]
 1129 000c D318     		add	r3, r2, r3
 1130 000e 1B78     		ldrb	r3, [r3]
 882:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #else
 883:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     return(CapSense_1_NEGATIVE_NOISE_THRESHOLD);
 884:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TUNING_METHOD != CapSense_1__TUNING_NONE) */
 885:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 1131              		.loc 1 885 0
 1132 0010 181C     		mov	r0, r3
 1133 0012 BD46     		mov	sp, r7
 1134 0014 02B0     		add	sp, sp, #8
 1135              		@ sp needed
 1136 0016 80BD     		pop	{r7, pc}
 1137              	.L73:
 1138              		.align	2
 1139              	.L72:
 1140 0018 00000000 		.word	CapSense_1_negativeNoiseThreshold
 1141              		.cfi_endproc
 1142              	.LFE50:
 1143              		.size	CapSense_1_GetNegativeNoiseThreshold, .-CapSense_1_GetNegativeNoiseThreshold
 1144              		.section	.text.CapSense_1_SetFingerThreshold,"ax",%progbits
 1145              		.align	2
 1146              		.global	CapSense_1_SetFingerThreshold
 1147              		.code	16
 1148              		.thumb_func
 1149              		.type	CapSense_1_SetFingerThreshold, %function
 1150              	CapSense_1_SetFingerThreshold:
 1151              	.LFB51:
 886:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 887:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 888:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if(CapSense_1_TUNING_METHOD != CapSense_1__TUNING_NONE)
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 37


 889:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
 890:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_SetFingerThreshold
 891:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
 892:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 893:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
 894:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 895:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 896:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
 897:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  sensorNumber:  widget index.
 898:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  value:  Finger threshold value for the widget.
 899:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 900:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return Value:
 901:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
 902:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 903:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Global Variables:
 904:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  CapSense_1_fingerThreshold[] - This array contains the level of signal
 905:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 906:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 907:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
 908:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
 909:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 910:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
 911:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     void CapSense_1_SetFingerThreshold(uint32 widget, uint8 value)
 912:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 1152              		.loc 1 912 0
 1153              		.cfi_startproc
 1154 0000 80B5     		push	{r7, lr}
 1155              		.cfi_def_cfa_offset 8
 1156              		.cfi_offset 7, -8
 1157              		.cfi_offset 14, -4
 1158 0002 82B0     		sub	sp, sp, #8
 1159              		.cfi_def_cfa_offset 16
 1160 0004 00AF     		add	r7, sp, #0
 1161              		.cfi_def_cfa_register 7
 1162 0006 7860     		str	r0, [r7, #4]
 1163 0008 0A1C     		mov	r2, r1
 1164 000a FB1C     		add	r3, r7, #3
 1165 000c 1A70     		strb	r2, [r3]
 913:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_fingerThreshold[widget] = value;
 1166              		.loc 1 913 0
 1167 000e 044A     		ldr	r2, .L75
 1168 0010 7B68     		ldr	r3, [r7, #4]
 1169 0012 D318     		add	r3, r2, r3
 1170 0014 FA1C     		add	r2, r7, #3
 1171 0016 1278     		ldrb	r2, [r2]
 1172 0018 1A70     		strb	r2, [r3]
 914:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 1173              		.loc 1 914 0
 1174 001a BD46     		mov	sp, r7
 1175 001c 02B0     		add	sp, sp, #8
 1176              		@ sp needed
 1177 001e 80BD     		pop	{r7, pc}
 1178              	.L76:
 1179              		.align	2
 1180              	.L75:
 1181 0020 00000000 		.word	CapSense_1_fingerThreshold
 1182              		.cfi_endproc
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 38


 1183              	.LFE51:
 1184              		.size	CapSense_1_SetFingerThreshold, .-CapSense_1_SetFingerThreshold
 1185              		.section	.text.CapSense_1_SetNoiseThreshold,"ax",%progbits
 1186              		.align	2
 1187              		.global	CapSense_1_SetNoiseThreshold
 1188              		.code	16
 1189              		.thumb_func
 1190              		.type	CapSense_1_SetNoiseThreshold, %function
 1191              	CapSense_1_SetNoiseThreshold:
 1192              	.LFB52:
 915:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 916:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 917:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
 918:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_SetNoiseThreshold
 919:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
 920:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 921:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
 922:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 923:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 924:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
 925:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  widget:  Sensor index number.
 926:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  value:   Noise Threshold value for widget.
 927:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 928:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return Value:
 929:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
 930:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 931:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Global Variables:
 932:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  CapSense_1_noiseThreshold[] - This array contains the level of signal
 933:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 934:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 935:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
 936:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
 937:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 938:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
 939:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     void CapSense_1_SetNoiseThreshold(uint32 widget, uint8 value)
 940:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 1193              		.loc 1 940 0
 1194              		.cfi_startproc
 1195 0000 80B5     		push	{r7, lr}
 1196              		.cfi_def_cfa_offset 8
 1197              		.cfi_offset 7, -8
 1198              		.cfi_offset 14, -4
 1199 0002 82B0     		sub	sp, sp, #8
 1200              		.cfi_def_cfa_offset 16
 1201 0004 00AF     		add	r7, sp, #0
 1202              		.cfi_def_cfa_register 7
 1203 0006 7860     		str	r0, [r7, #4]
 1204 0008 0A1C     		mov	r2, r1
 1205 000a FB1C     		add	r3, r7, #3
 1206 000c 1A70     		strb	r2, [r3]
 941:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_noiseThreshold[widget] = value;
 1207              		.loc 1 941 0
 1208 000e 044A     		ldr	r2, .L78
 1209 0010 7B68     		ldr	r3, [r7, #4]
 1210 0012 D318     		add	r3, r2, r3
 1211 0014 FA1C     		add	r2, r7, #3
 1212 0016 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 39


 1213 0018 1A70     		strb	r2, [r3]
 942:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 1214              		.loc 1 942 0
 1215 001a BD46     		mov	sp, r7
 1216 001c 02B0     		add	sp, sp, #8
 1217              		@ sp needed
 1218 001e 80BD     		pop	{r7, pc}
 1219              	.L79:
 1220              		.align	2
 1221              	.L78:
 1222 0020 00000000 		.word	CapSense_1_noiseThreshold
 1223              		.cfi_endproc
 1224              	.LFE52:
 1225              		.size	CapSense_1_SetNoiseThreshold, .-CapSense_1_SetNoiseThreshold
 1226              		.section	.text.CapSense_1_SetFingerHysteresis,"ax",%progbits
 1227              		.align	2
 1228              		.global	CapSense_1_SetFingerHysteresis
 1229              		.code	16
 1230              		.thumb_func
 1231              		.type	CapSense_1_SetFingerHysteresis, %function
 1232              	CapSense_1_SetFingerHysteresis:
 1233              	.LFB53:
 943:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 944:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 945:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
 946:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_SetFingerHysteresis
 947:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
 948:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 949:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
 950:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 951:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 952:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
 953:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  value:  Hysteresis value for widgets.
 954:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  widget:  widget number
 955:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 956:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return Value:
 957:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
 958:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 959:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Global Variables:
 960:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  CapSense_1_hysteresis[] - This array contains the hysteresis value for each widget.
 961:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  CapSense_1_widgetNumberSld - structure with dynamic sliders' parameters.
 962:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 963:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
 964:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
 965:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 966:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
 967:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     void CapSense_1_SetFingerHysteresis(uint32 widget, uint8 value)
 968:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 1234              		.loc 1 968 0
 1235              		.cfi_startproc
 1236 0000 80B5     		push	{r7, lr}
 1237              		.cfi_def_cfa_offset 8
 1238              		.cfi_offset 7, -8
 1239              		.cfi_offset 14, -4
 1240 0002 82B0     		sub	sp, sp, #8
 1241              		.cfi_def_cfa_offset 16
 1242 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 40


 1243              		.cfi_def_cfa_register 7
 1244 0006 7860     		str	r0, [r7, #4]
 1245 0008 0A1C     		mov	r2, r1
 1246 000a FB1C     		add	r3, r7, #3
 1247 000c 1A70     		strb	r2, [r3]
 969:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_hysteresis[widget] = value;
 1248              		.loc 1 969 0
 1249 000e 044A     		ldr	r2, .L81
 1250 0010 7B68     		ldr	r3, [r7, #4]
 1251 0012 D318     		add	r3, r2, r3
 1252 0014 FA1C     		add	r2, r7, #3
 1253 0016 1278     		ldrb	r2, [r2]
 1254 0018 1A70     		strb	r2, [r3]
 970:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 1255              		.loc 1 970 0
 1256 001a BD46     		mov	sp, r7
 1257 001c 02B0     		add	sp, sp, #8
 1258              		@ sp needed
 1259 001e 80BD     		pop	{r7, pc}
 1260              	.L82:
 1261              		.align	2
 1262              	.L81:
 1263 0020 00000000 		.word	CapSense_1_hysteresis
 1264              		.cfi_endproc
 1265              	.LFE53:
 1266              		.size	CapSense_1_SetFingerHysteresis, .-CapSense_1_SetFingerHysteresis
 1267              		.section	.text.CapSense_1_SetNegativeNoiseThreshold,"ax",%progbits
 1268              		.align	2
 1269              		.global	CapSense_1_SetNegativeNoiseThreshold
 1270              		.code	16
 1271              		.thumb_func
 1272              		.type	CapSense_1_SetNegativeNoiseThreshold, %function
 1273              	CapSense_1_SetNegativeNoiseThreshold:
 1274              	.LFB54:
 971:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 972:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 973:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
 974:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_SetNegativeNoiseThreshold
 975:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
 976:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 977:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
 978:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 979:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 980:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
 981:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 982:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  widget: widget number
 983:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 984:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return Value:
 985:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
 986:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 987:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Global Variables:
 988:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  CapSense_1_negativeNoiseThreshold  - This parameter specifies the negative
 989:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 990:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *   the raw count level.
 991:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 992:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
 993:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 41


 994:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
 995:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
 996:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     void CapSense_1_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
 997:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 1275              		.loc 1 997 0
 1276              		.cfi_startproc
 1277 0000 80B5     		push	{r7, lr}
 1278              		.cfi_def_cfa_offset 8
 1279              		.cfi_offset 7, -8
 1280              		.cfi_offset 14, -4
 1281 0002 82B0     		sub	sp, sp, #8
 1282              		.cfi_def_cfa_offset 16
 1283 0004 00AF     		add	r7, sp, #0
 1284              		.cfi_def_cfa_register 7
 1285 0006 7860     		str	r0, [r7, #4]
 1286 0008 0A1C     		mov	r2, r1
 1287 000a FB1C     		add	r3, r7, #3
 1288 000c 1A70     		strb	r2, [r3]
 998:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_negativeNoiseThreshold[widget] = value;
 1289              		.loc 1 998 0
 1290 000e 044A     		ldr	r2, .L84
 1291 0010 7B68     		ldr	r3, [r7, #4]
 1292 0012 D318     		add	r3, r2, r3
 1293 0014 FA1C     		add	r2, r7, #3
 1294 0016 1278     		ldrb	r2, [r2]
 1295 0018 1A70     		strb	r2, [r3]
 999:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 1296              		.loc 1 999 0
 1297 001a BD46     		mov	sp, r7
 1298 001c 02B0     		add	sp, sp, #8
 1299              		@ sp needed
 1300 001e 80BD     		pop	{r7, pc}
 1301              	.L85:
 1302              		.align	2
 1303              	.L84:
 1304 0020 00000000 		.word	CapSense_1_negativeNoiseThreshold
 1305              		.cfi_endproc
 1306              	.LFE54:
 1307              		.size	CapSense_1_SetNegativeNoiseThreshold, .-CapSense_1_SetNegativeNoiseThreshold
 1308              		.section	.text.CapSense_1_SetDebounce,"ax",%progbits
 1309              		.align	2
 1310              		.global	CapSense_1_SetDebounce
 1311              		.code	16
 1312              		.thumb_func
 1313              		.type	CapSense_1_SetDebounce, %function
 1314              	CapSense_1_SetDebounce:
 1315              	.LFB55:
1000:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1001:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1002:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
1003:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_SetDebounce
1004:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
1005:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1006:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
1007:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This API sets the debounce value for a widget.
1008:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1009:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 42


1010:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  value:  Debounce value for widget.
1011:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  widget: widget index.
1012:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1013:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return Value:
1014:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
1015:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1016:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Global Variables:
1017:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  CapSense_1_debounce[] - This array contains the debounce value for each widget.
1018:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  CapSense_1_widgetNumberSld - structure with dynamic sliders' parameters.
1019:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1020:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
1021:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
1022:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1023:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
1024:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     void CapSense_1_SetDebounce(uint32 widget, uint8 value)
1025:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 1316              		.loc 1 1025 0
 1317              		.cfi_startproc
 1318 0000 80B5     		push	{r7, lr}
 1319              		.cfi_def_cfa_offset 8
 1320              		.cfi_offset 7, -8
 1321              		.cfi_offset 14, -4
 1322 0002 82B0     		sub	sp, sp, #8
 1323              		.cfi_def_cfa_offset 16
 1324 0004 00AF     		add	r7, sp, #0
 1325              		.cfi_def_cfa_register 7
 1326 0006 7860     		str	r0, [r7, #4]
 1327 0008 0A1C     		mov	r2, r1
 1328 000a FB1C     		add	r3, r7, #3
 1329 000c 1A70     		strb	r2, [r3]
1026:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_debounce[widget] = value;
 1330              		.loc 1 1026 0
 1331 000e 044A     		ldr	r2, .L87
 1332 0010 7B68     		ldr	r3, [r7, #4]
 1333 0012 D318     		add	r3, r2, r3
 1334 0014 FA1C     		add	r2, r7, #3
 1335 0016 1278     		ldrb	r2, [r2]
 1336 0018 1A70     		strb	r2, [r3]
1027:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 1337              		.loc 1 1027 0
 1338 001a BD46     		mov	sp, r7
 1339 001c 02B0     		add	sp, sp, #8
 1340              		@ sp needed
 1341 001e 80BD     		pop	{r7, pc}
 1342              	.L88:
 1343              		.align	2
 1344              	.L87:
 1345 0020 00000000 		.word	CapSense_1_debounce
 1346              		.cfi_endproc
 1347              	.LFE55:
 1348              		.size	CapSense_1_SetDebounce, .-CapSense_1_SetDebounce
 1349              		.section	.text.CapSense_1_SetLowBaselineReset,"ax",%progbits
 1350              		.align	2
 1351              		.global	CapSense_1_SetLowBaselineReset
 1352              		.code	16
 1353              		.thumb_func
 1354              		.type	CapSense_1_SetLowBaselineReset, %function
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 43


 1355              	CapSense_1_SetLowBaselineReset:
 1356              	.LFB56:
1028:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1029:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1030:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
1031:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_SetLowBaselineReset
1032:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
1033:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1034:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
1035:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1036:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1037:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
1038:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  value: low baseline reset threshold value.
1039:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  sensor: Sensor index.
1040:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1041:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return Value:
1042:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
1043:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1044:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Global Variables:
1045:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  CapSense_1_lowBaselineReset[] - This array contains the Baseline update
1046:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  threshold value for each sensor.
1047:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1048:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
1049:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
1050:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1051:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
1052:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     void CapSense_1_SetLowBaselineReset(uint32 sensor, uint8 value)
1053:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 1357              		.loc 1 1053 0
 1358              		.cfi_startproc
 1359 0000 80B5     		push	{r7, lr}
 1360              		.cfi_def_cfa_offset 8
 1361              		.cfi_offset 7, -8
 1362              		.cfi_offset 14, -4
 1363 0002 82B0     		sub	sp, sp, #8
 1364              		.cfi_def_cfa_offset 16
 1365 0004 00AF     		add	r7, sp, #0
 1366              		.cfi_def_cfa_register 7
 1367 0006 7860     		str	r0, [r7, #4]
 1368 0008 0A1C     		mov	r2, r1
 1369 000a FB1C     		add	r3, r7, #3
 1370 000c 1A70     		strb	r2, [r3]
1054:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_lowBaselineReset[sensor] = value;
 1371              		.loc 1 1054 0
 1372 000e 044A     		ldr	r2, .L90
 1373 0010 7B68     		ldr	r3, [r7, #4]
 1374 0012 D318     		add	r3, r2, r3
 1375 0014 FA1C     		add	r2, r7, #3
 1376 0016 1278     		ldrb	r2, [r2]
 1377 0018 1A70     		strb	r2, [r3]
1055:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 1378              		.loc 1 1055 0
 1379 001a BD46     		mov	sp, r7
 1380 001c 02B0     		add	sp, sp, #8
 1381              		@ sp needed
 1382 001e 80BD     		pop	{r7, pc}
 1383              	.L91:
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 44


 1384              		.align	2
 1385              	.L90:
 1386 0020 00000000 		.word	CapSense_1_lowBaselineReset
 1387              		.cfi_endproc
 1388              	.LFE56:
 1389              		.size	CapSense_1_SetLowBaselineReset, .-CapSense_1_SetLowBaselineReset
 1390              		.section	.text.CapSense_1_CheckIsSensorActive,"ax",%progbits
 1391              		.align	2
 1392              		.global	CapSense_1_CheckIsSensorActive
 1393              		.code	16
 1394              		.thumb_func
 1395              		.type	CapSense_1_CheckIsSensorActive, %function
 1396              	CapSense_1_CheckIsSensorActive:
 1397              	.LFB57:
1056:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TUNING_METHOD != CapSense_1__TUNING_NONE) */
1057:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1058:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1059:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
1060:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsSensorActive
1061:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
1062:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1063:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
1064:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Compares the CapSense_1_sensorSignal[sensor] array element to the finger
1065:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1066:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1067:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  based on whether the sensor is currently active.
1068:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1069:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1070:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1071:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This function updates the CapSense_1_sensorOnMask[] array element.
1072:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1073:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
1074:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
1075:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1076:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
1077:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1078:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1079:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
1080:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[] - used to store the difference between
1081:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1082:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_debounceCounter[]   - used to store the current debounce
1083:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1084:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1085:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1086:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[] - used to store the sensors on/off state.
1087:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[0] contains the masked bits for sensors
1088:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1089:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for
1090:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1091:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  0 - sensor is inactive.
1092:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  1 - sensor is active.
1093:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1094:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
1095:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
1096:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1097:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
1098:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint32 CapSense_1_CheckIsSensorActive(uint32 sensor)
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 45


1099:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 1398              		.loc 1 1099 0
 1399              		.cfi_startproc
 1400 0000 80B5     		push	{r7, lr}
 1401              		.cfi_def_cfa_offset 8
 1402              		.cfi_offset 7, -8
 1403              		.cfi_offset 14, -4
 1404 0002 84B0     		sub	sp, sp, #16
 1405              		.cfi_def_cfa_offset 24
 1406 0004 00AF     		add	r7, sp, #0
 1407              		.cfi_def_cfa_register 7
 1408 0006 7860     		str	r0, [r7, #4]
1100:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 widget;
1101:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 debounce;
1102:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 debounceIndex;
1103:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1104:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 fingerThreshold;
1105:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 hysteresis;
1106:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
1107:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1108:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Prepare to find debounce counter index */
1109:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     widget = CapSense_1_widgetNumber[sensor];
 1409              		.loc 1 1109 0
 1410 0008 0F23     		mov	r3, #15
 1411 000a FB18     		add	r3, r7, r3
 1412 000c 4249     		ldr	r1, .L101
 1413 000e 7A68     		ldr	r2, [r7, #4]
 1414 0010 8A18     		add	r2, r1, r2
 1415 0012 1278     		ldrb	r2, [r2]
 1416 0014 1A70     		strb	r2, [r3]
1110:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1111:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     fingerThreshold = CapSense_1_fingerThreshold[widget];
 1417              		.loc 1 1111 0
 1418 0016 0F23     		mov	r3, #15
 1419 0018 FB18     		add	r3, r7, r3
 1420 001a 1A78     		ldrb	r2, [r3]
 1421 001c 0E23     		mov	r3, #14
 1422 001e FB18     		add	r3, r7, r3
 1423 0020 3E49     		ldr	r1, .L101+4
 1424 0022 8A5C     		ldrb	r2, [r1, r2]
 1425 0024 1A70     		strb	r2, [r3]
1112:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     hysteresis = CapSense_1_hysteresis[widget];
 1426              		.loc 1 1112 0
 1427 0026 0F23     		mov	r3, #15
 1428 0028 FB18     		add	r3, r7, r3
 1429 002a 1A78     		ldrb	r2, [r3]
 1430 002c 0D23     		mov	r3, #13
 1431 002e FB18     		add	r3, r7, r3
 1432 0030 3B49     		ldr	r1, .L101+8
 1433 0032 8A5C     		ldrb	r2, [r1, r2]
 1434 0034 1A70     		strb	r2, [r3]
1113:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     debounce = CapSense_1_debounce[widget];
 1435              		.loc 1 1113 0
 1436 0036 0F23     		mov	r3, #15
 1437 0038 FB18     		add	r3, r7, r3
 1438 003a 1A78     		ldrb	r2, [r3]
 1439 003c 0C23     		mov	r3, #12
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 46


 1440 003e FB18     		add	r3, r7, r3
 1441 0040 3849     		ldr	r1, .L101+12
 1442 0042 8A5C     		ldrb	r2, [r1, r2]
 1443 0044 1A70     		strb	r2, [r3]
1114:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1115:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         debounceIndex = widget;
 1444              		.loc 1 1115 0
 1445 0046 0B23     		mov	r3, #11
 1446 0048 FB18     		add	r3, r7, r3
 1447 004a 0F22     		mov	r2, #15
 1448 004c BA18     		add	r2, r7, r2
 1449 004e 1278     		ldrb	r2, [r2]
 1450 0050 1A70     		strb	r2, [r3]
1116:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1117:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1118:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Was on */
1119:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     if (0u != CapSense_1_GetBitValue(CapSense_1_sensorOnMask, sensor))
 1451              		.loc 1 1119 0
 1452 0052 354A     		ldr	r2, .L101+16
 1453 0054 7B68     		ldr	r3, [r7, #4]
 1454 0056 101C     		mov	r0, r2
 1455 0058 191C     		mov	r1, r3
 1456 005a FFF7FEFF 		bl	CapSense_1_GetBitValue
 1457 005e 031E     		sub	r3, r0, #0
 1458 0060 1DD0     		beq	.L93
1120:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
1121:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Hysteresis minus */
1122:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if (CapSense_1_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1459              		.loc 1 1122 0
 1460 0062 324A     		ldr	r2, .L101+20
 1461 0064 7B68     		ldr	r3, [r7, #4]
 1462 0066 D318     		add	r3, r2, r3
 1463 0068 1B78     		ldrb	r3, [r3]
 1464 006a 191C     		mov	r1, r3
 1465 006c 0E23     		mov	r3, #14
 1466 006e FB18     		add	r3, r7, r3
 1467 0070 1A78     		ldrb	r2, [r3]
 1468 0072 0D23     		mov	r3, #13
 1469 0074 FB18     		add	r3, r7, r3
 1470 0076 1B78     		ldrb	r3, [r3]
 1471 0078 D31A     		sub	r3, r2, r3
 1472 007a 9942     		cmp	r1, r3
 1473 007c 3DDA     		bge	.L95
1123:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1124:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_SetBitValue(CapSense_1_sensorOnMask, sensor, 0u);
 1474              		.loc 1 1124 0
 1475 007e 2A4A     		ldr	r2, .L101+16
 1476 0080 7B68     		ldr	r3, [r7, #4]
 1477 0082 101C     		mov	r0, r2
 1478 0084 191C     		mov	r1, r3
 1479 0086 0022     		mov	r2, #0
 1480 0088 FFF7FEFF 		bl	CapSense_1_SetBitValue
1125:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1126:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex] = debounce;
 1481              		.loc 1 1126 0
 1482 008c 0B23     		mov	r3, #11
 1483 008e FB18     		add	r3, r7, r3
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 47


 1484 0090 1B78     		ldrb	r3, [r3]
 1485 0092 274A     		ldr	r2, .L101+24
 1486 0094 0C21     		mov	r1, #12
 1487 0096 7918     		add	r1, r7, r1
 1488 0098 0978     		ldrb	r1, [r1]
 1489 009a D154     		strb	r1, [r2, r3]
 1490 009c 2DE0     		b	.L95
 1491              	.L93:
1127:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1128:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
1129:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     else    /* Was off */
1130:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
1131:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Hysteresis plus */
1132:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if (CapSense_1_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1492              		.loc 1 1132 0
 1493 009e 234A     		ldr	r2, .L101+20
 1494 00a0 7B68     		ldr	r3, [r7, #4]
 1495 00a2 D318     		add	r3, r2, r3
 1496 00a4 1B78     		ldrb	r3, [r3]
 1497 00a6 191C     		mov	r1, r3
 1498 00a8 0E23     		mov	r3, #14
 1499 00aa FB18     		add	r3, r7, r3
 1500 00ac 1A78     		ldrb	r2, [r3]
 1501 00ae 0D23     		mov	r3, #13
 1502 00b0 FB18     		add	r3, r7, r3
 1503 00b2 1B78     		ldrb	r3, [r3]
 1504 00b4 D318     		add	r3, r2, r3
 1505 00b6 9942     		cmp	r1, r3
 1506 00b8 17DB     		blt	.L96
1133:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1134:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex]--;
 1507              		.loc 1 1134 0
 1508 00ba 0B23     		mov	r3, #11
 1509 00bc FB18     		add	r3, r7, r3
 1510 00be 1B78     		ldrb	r3, [r3]
 1511 00c0 1B4A     		ldr	r2, .L101+24
 1512 00c2 D25C     		ldrb	r2, [r2, r3]
 1513 00c4 013A     		sub	r2, r2, #1
 1514 00c6 D1B2     		uxtb	r1, r2
 1515 00c8 194A     		ldr	r2, .L101+24
 1516 00ca D154     		strb	r1, [r2, r3]
1135:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Sensor active, decrement debounce counter */
1136:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if(CapSense_1_debounceCounter[debounceIndex] == 0u)
 1517              		.loc 1 1136 0
 1518 00cc 0B23     		mov	r3, #11
 1519 00ce FB18     		add	r3, r7, r3
 1520 00d0 1B78     		ldrb	r3, [r3]
 1521 00d2 174A     		ldr	r2, .L101+24
 1522 00d4 D35C     		ldrb	r3, [r2, r3]
 1523 00d6 002B     		cmp	r3, #0
 1524 00d8 0FD1     		bne	.L95
1137:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
1138:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 CapSense_1_SetBitValue(CapSense_1_sensorOnMask, sensor, 1u);
 1525              		.loc 1 1138 0
 1526 00da 134A     		ldr	r2, .L101+16
 1527 00dc 7B68     		ldr	r3, [r7, #4]
 1528 00de 101C     		mov	r0, r2
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 48


 1529 00e0 191C     		mov	r1, r3
 1530 00e2 0122     		mov	r2, #1
 1531 00e4 FFF7FEFF 		bl	CapSense_1_SetBitValue
 1532 00e8 07E0     		b	.L95
 1533              	.L96:
1139:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
1140:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1141:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         else
1142:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1143:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1144:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex] = debounce;
 1534              		.loc 1 1144 0
 1535 00ea 0B23     		mov	r3, #11
 1536 00ec FB18     		add	r3, r7, r3
 1537 00ee 1B78     		ldrb	r3, [r3]
 1538 00f0 0F4A     		ldr	r2, .L101+24
 1539 00f2 0C21     		mov	r1, #12
 1540 00f4 7918     		add	r1, r7, r1
 1541 00f6 0978     		ldrb	r1, [r1]
 1542 00f8 D154     		strb	r1, [r2, r3]
 1543              	.L95:
1145:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1146:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
1147:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1148:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     return ((uint32)((0u != CapSense_1_GetBitValue(CapSense_1_sensorOnMask, sensor)) ? 1u : 0u));
 1544              		.loc 1 1148 0
 1545 00fa 0B4A     		ldr	r2, .L101+16
 1546 00fc 7B68     		ldr	r3, [r7, #4]
 1547 00fe 101C     		mov	r0, r2
 1548 0100 191C     		mov	r1, r3
 1549 0102 FFF7FEFF 		bl	CapSense_1_GetBitValue
 1550 0106 031E     		sub	r3, r0, #0
 1551 0108 01D0     		beq	.L98
 1552              		.loc 1 1148 0 is_stmt 0 discriminator 1
 1553 010a 0123     		mov	r3, #1
 1554 010c 00E0     		b	.L99
 1555              	.L98:
 1556              		.loc 1 1148 0 discriminator 2
 1557 010e 0023     		mov	r3, #0
 1558              	.L99:
1149:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 1559              		.loc 1 1149 0 is_stmt 1 discriminator 4
 1560 0110 181C     		mov	r0, r3
 1561 0112 BD46     		mov	sp, r7
 1562 0114 04B0     		add	sp, sp, #16
 1563              		@ sp needed
 1564 0116 80BD     		pop	{r7, pc}
 1565              	.L102:
 1566              		.align	2
 1567              	.L101:
 1568 0118 00000000 		.word	CapSense_1_widgetNumber
 1569 011c 00000000 		.word	CapSense_1_fingerThreshold
 1570 0120 00000000 		.word	CapSense_1_hysteresis
 1571 0124 00000000 		.word	CapSense_1_debounce
 1572 0128 00000000 		.word	CapSense_1_sensorOnMask
 1573 012c 00000000 		.word	CapSense_1_sensorSignal
 1574 0130 10000000 		.word	CapSense_1_debounceCounter
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 49


 1575              		.cfi_endproc
 1576              	.LFE57:
 1577              		.size	CapSense_1_CheckIsSensorActive, .-CapSense_1_CheckIsSensorActive
 1578              		.section	.text.CapSense_1_CheckIsWidgetActive,"ax",%progbits
 1579              		.align	2
 1580              		.global	CapSense_1_CheckIsWidgetActive
 1581              		.code	16
 1582              		.thumb_func
 1583              		.type	CapSense_1_CheckIsWidgetActive, %function
 1584              	CapSense_1_CheckIsWidgetActive:
 1585              	.LFB58:
1150:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1151:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1152:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
1153:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsWidgetActive
1154:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
1155:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1156:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
1157:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1158:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1159:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1160:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1161:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1162:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  is raised by the hysteresis amount.
1163:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * The debounce counter added to the sensor active transition.
1164:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1165:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1166:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
1167:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  widget:  widget number.
1168:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1169:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
1170:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1171:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1172:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1173:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
1174:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1175:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1176:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
1177:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
1178:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1179:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
1180:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint32 CapSense_1_CheckIsWidgetActive(uint32 widget)
1181:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 1586              		.loc 1 1181 0
 1587              		.cfi_startproc
 1588 0000 80B5     		push	{r7, lr}
 1589              		.cfi_def_cfa_offset 8
 1590              		.cfi_offset 7, -8
 1591              		.cfi_offset 14, -4
 1592 0002 86B0     		sub	sp, sp, #24
 1593              		.cfi_def_cfa_offset 32
 1594 0004 00AF     		add	r7, sp, #0
 1595              		.cfi_def_cfa_register 7
 1596 0006 7860     		str	r0, [r7, #4]
1182:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_1_rawDataIndex[widget];
 1597              		.loc 1 1182 0
 1598 0008 0023     		mov	r3, #0
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 50


 1599 000a 7B61     		str	r3, [r7, #20]
1183:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_1_numberOfSensors[widget] + rawIndex;
 1600              		.loc 1 1183 0
 1601 000c 0123     		mov	r3, #1
 1602 000e 1A1C     		mov	r2, r3
 1603 0010 7B69     		ldr	r3, [r7, #20]
 1604 0012 D318     		add	r3, r2, r3
 1605 0014 FB60     		str	r3, [r7, #12]
1184:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 state = 0u;
 1606              		.loc 1 1184 0
 1607 0016 0023     		mov	r3, #0
 1608 0018 3B61     		str	r3, [r7, #16]
 1609              	.L105:
1185:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1186:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Check all sensors of widget */
1187:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     do
1188:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
1189:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(CapSense_1_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1610              		.loc 1 1189 0
 1611 001a 7B69     		ldr	r3, [r7, #20]
 1612 001c 181C     		mov	r0, r3
 1613 001e FFF7FEFF 		bl	CapSense_1_CheckIsSensorActive
 1614 0022 031E     		sub	r3, r0, #0
 1615 0024 01D0     		beq	.L104
1190:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1191:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             state = CapSense_1_SENSOR_IS_ACTIVE;
 1616              		.loc 1 1191 0
 1617 0026 0123     		mov	r3, #1
 1618 0028 3B61     		str	r3, [r7, #16]
 1619              	.L104:
1192:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1193:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         rawIndex++;
 1620              		.loc 1 1193 0
 1621 002a 7B69     		ldr	r3, [r7, #20]
 1622 002c 0133     		add	r3, r3, #1
 1623 002e 7B61     		str	r3, [r7, #20]
1194:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
1195:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     while(rawIndex < numOfSensors);
 1624              		.loc 1 1195 0
 1625 0030 7A69     		ldr	r2, [r7, #20]
 1626 0032 FB68     		ldr	r3, [r7, #12]
 1627 0034 9A42     		cmp	r2, r3
 1628 0036 F0D3     		bcc	.L105
1196:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1197:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1198:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1199:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     return state;
 1629              		.loc 1 1199 0
 1630 0038 3B69     		ldr	r3, [r7, #16]
1200:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 1631              		.loc 1 1200 0
 1632 003a 181C     		mov	r0, r3
 1633 003c BD46     		mov	sp, r7
 1634 003e 06B0     		add	sp, sp, #24
 1635              		@ sp needed
 1636 0040 80BD     		pop	{r7, pc}
 1637              		.cfi_endproc
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 51


 1638              	.LFE58:
 1639              		.size	CapSense_1_CheckIsWidgetActive, .-CapSense_1_CheckIsWidgetActive
 1640 0042 C046     		.section	.text.CapSense_1_CheckIsAnyWidgetActive,"ax",%progbits
 1641              		.align	2
 1642              		.global	CapSense_1_CheckIsAnyWidgetActive
 1643              		.code	16
 1644              		.thumb_func
 1645              		.type	CapSense_1_CheckIsAnyWidgetActive, %function
 1646              	CapSense_1_CheckIsAnyWidgetActive:
 1647              	.LFB59:
1201:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1202:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1203:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
1204:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsAnyWidgetActive
1205:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
1206:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1207:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
1208:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Compares all the sensors of the CapSense_1_Signal[] array to their finger
1209:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  threshold. Calls CapSense_1_CheckIsWidgetActive() for each widget so
1210:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  the CapSense_1_sensorOnMask[] array is up to date after calling this
1211:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  function.
1212:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1213:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
1214:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  widget:  widget number.
1215:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1216:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
1217:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1218:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1219:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
1220:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
1221:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1222:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
1223:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
1224:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1225:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
1226:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint32 CapSense_1_CheckIsAnyWidgetActive(void)
1227:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 1648              		.loc 1 1227 0
 1649              		.cfi_startproc
 1650 0000 80B5     		push	{r7, lr}
 1651              		.cfi_def_cfa_offset 8
 1652              		.cfi_offset 7, -8
 1653              		.cfi_offset 14, -4
 1654 0002 82B0     		sub	sp, sp, #8
 1655              		.cfi_def_cfa_offset 16
 1656 0004 00AF     		add	r7, sp, #0
 1657              		.cfi_def_cfa_register 7
1228:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1229:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint32 i;
1230:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 state = 0u;
 1658              		.loc 1 1230 0
 1659 0006 0023     		mov	r3, #0
 1660 0008 3B60     		str	r3, [r7]
1231:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
1232:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_WIDGET_COUNT; i++)
 1661              		.loc 1 1232 0
 1662 000a 0023     		mov	r3, #0
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 52


 1663 000c 7B60     		str	r3, [r7, #4]
 1664 000e 0AE0     		b	.L108
 1665              	.L110:
1233:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
1234:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if (CapSense_1_CheckIsWidgetActive(i) != 0u)
 1666              		.loc 1 1234 0
 1667 0010 7B68     		ldr	r3, [r7, #4]
 1668 0012 181C     		mov	r0, r3
 1669 0014 FFF7FEFF 		bl	CapSense_1_CheckIsWidgetActive
 1670 0018 031E     		sub	r3, r0, #0
 1671 001a 01D0     		beq	.L109
1235:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1236:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             state = CapSense_1_WIDGET_IS_ACTIVE;
 1672              		.loc 1 1236 0
 1673 001c 0123     		mov	r3, #1
 1674 001e 3B60     		str	r3, [r7]
 1675              	.L109:
1232:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 1676              		.loc 1 1232 0 discriminator 2
 1677 0020 7B68     		ldr	r3, [r7, #4]
 1678 0022 0133     		add	r3, r3, #1
 1679 0024 7B60     		str	r3, [r7, #4]
 1680              	.L108:
1232:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 1681              		.loc 1 1232 0 is_stmt 0 discriminator 1
 1682 0026 7B68     		ldr	r3, [r7, #4]
 1683 0028 002B     		cmp	r3, #0
 1684 002a F1D0     		beq	.L110
1237:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1238:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
1239:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
1240:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1241:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1242:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     return state;
 1685              		.loc 1 1242 0 is_stmt 1
 1686 002c 3B68     		ldr	r3, [r7]
1243:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 1687              		.loc 1 1243 0
 1688 002e 181C     		mov	r0, r3
 1689 0030 BD46     		mov	sp, r7
 1690 0032 02B0     		add	sp, sp, #8
 1691              		@ sp needed
 1692 0034 80BD     		pop	{r7, pc}
 1693              		.cfi_endproc
 1694              	.LFE59:
 1695              		.size	CapSense_1_CheckIsAnyWidgetActive, .-CapSense_1_CheckIsAnyWidgetActive
 1696 0036 C046     		.section	.text.CapSense_1_EnableWidget,"ax",%progbits
 1697              		.align	2
 1698              		.global	CapSense_1_EnableWidget
 1699              		.code	16
 1700              		.thumb_func
 1701              		.type	CapSense_1_EnableWidget, %function
 1702              	CapSense_1_EnableWidget:
 1703              	.LFB60:
1244:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1245:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1246:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 53


1247:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_EnableWidget
1248:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
1249:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1250:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
1251:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1252:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1253:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
1254:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  widget:  widget number.
1255:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1256:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
1257:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
1258:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1259:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
1260:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning
1261:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  state.
1262:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors
1263:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1264:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for
1265:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1266:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
1267:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
1268:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1269:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
1270:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
1271:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1272:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
1273:Generated_Source\PSoC4/CapSense_1_CSHL.c **** void CapSense_1_EnableWidget(uint32 widget)
1274:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 1704              		.loc 1 1274 0
 1705              		.cfi_startproc
 1706 0000 80B5     		push	{r7, lr}
 1707              		.cfi_def_cfa_offset 8
 1708              		.cfi_offset 7, -8
 1709              		.cfi_offset 14, -4
 1710 0002 84B0     		sub	sp, sp, #16
 1711              		.cfi_def_cfa_offset 24
 1712 0004 00AF     		add	r7, sp, #0
 1713              		.cfi_def_cfa_register 7
 1714 0006 7860     		str	r0, [r7, #4]
1275:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1276:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 1715              		.loc 1 1276 0
 1716 0008 0F23     		mov	r3, #15
 1717 000a FB18     		add	r3, r7, r3
 1718 000c 0022     		mov	r2, #0
 1719 000e 1A70     		strb	r2, [r3]
1277:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 numOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 1720              		.loc 1 1277 0
 1721 0010 0121     		mov	r1, #1
 1722 0012 0E23     		mov	r3, #14
 1723 0014 FB18     		add	r3, r7, r3
 1724 0016 0F22     		mov	r2, #15
 1725 0018 BA18     		add	r2, r7, r2
 1726 001a 1278     		ldrb	r2, [r2]
 1727 001c 8A18     		add	r2, r1, r2
 1728 001e 1A70     		strb	r2, [r3]
 1729              	.L113:
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 54


1278:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1279:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Enable all sensors of widget */
1280:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     do
1281:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
1282:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_SetBitValue(CapSense_1_sensorEnableMask, (uint32)rawIndex, 1u);
 1730              		.loc 1 1282 0 discriminator 1
 1731 0020 0F23     		mov	r3, #15
 1732 0022 FB18     		add	r3, r7, r3
 1733 0024 1B78     		ldrb	r3, [r3]
 1734 0026 0C4A     		ldr	r2, .L114
 1735 0028 101C     		mov	r0, r2
 1736 002a 191C     		mov	r1, r3
 1737 002c 0122     		mov	r2, #1
 1738 002e FFF7FEFF 		bl	CapSense_1_SetBitValue
1283:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         rawIndex++;
 1739              		.loc 1 1283 0 discriminator 1
 1740 0032 0F23     		mov	r3, #15
 1741 0034 FB18     		add	r3, r7, r3
 1742 0036 1A78     		ldrb	r2, [r3]
 1743 0038 0F23     		mov	r3, #15
 1744 003a FB18     		add	r3, r7, r3
 1745 003c 0132     		add	r2, r2, #1
 1746 003e 1A70     		strb	r2, [r3]
1284:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
1285:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     while(rawIndex < numOfSensors);
 1747              		.loc 1 1285 0 discriminator 1
 1748 0040 0F23     		mov	r3, #15
 1749 0042 FA18     		add	r2, r7, r3
 1750 0044 0E23     		mov	r3, #14
 1751 0046 FB18     		add	r3, r7, r3
 1752 0048 1278     		ldrb	r2, [r2]
 1753 004a 1B78     		ldrb	r3, [r3]
 1754 004c 9A42     		cmp	r2, r3
 1755 004e E7D3     		bcc	.L113
1286:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 1756              		.loc 1 1286 0
 1757 0050 BD46     		mov	sp, r7
 1758 0052 04B0     		add	sp, sp, #16
 1759              		@ sp needed
 1760 0054 80BD     		pop	{r7, pc}
 1761              	.L115:
 1762 0056 C046     		.align	2
 1763              	.L114:
 1764 0058 00000000 		.word	CapSense_1_sensorEnableMask
 1765              		.cfi_endproc
 1766              	.LFE60:
 1767              		.size	CapSense_1_EnableWidget, .-CapSense_1_EnableWidget
 1768              		.section	.text.CapSense_1_DisableWidget,"ax",%progbits
 1769              		.align	2
 1770              		.global	CapSense_1_DisableWidget
 1771              		.code	16
 1772              		.thumb_func
 1773              		.type	CapSense_1_DisableWidget, %function
 1774              	CapSense_1_DisableWidget:
 1775              	.LFB61:
1287:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1288:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 55


1289:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
1290:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_DisableWidget
1291:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
1292:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1293:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
1294:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1295:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1296:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
1297:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  widget:  widget number.
1298:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1299:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
1300:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
1301:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1302:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
1303:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning
1304:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  state.
1305:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors
1306:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1307:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for
1308:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1309:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  0 - sensor isn't scanned by CapSense_1_ScanEnabledWidgets().
1310:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  1 - sensor is scanned by CapSense_1_ScanEnabledWidgets().
1311:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1312:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
1313:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
1314:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1315:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
1316:Generated_Source\PSoC4/CapSense_1_CSHL.c **** void CapSense_1_DisableWidget(uint32 widget)
1317:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 1776              		.loc 1 1317 0
 1777              		.cfi_startproc
 1778 0000 80B5     		push	{r7, lr}
 1779              		.cfi_def_cfa_offset 8
 1780              		.cfi_offset 7, -8
 1781              		.cfi_offset 14, -4
 1782 0002 84B0     		sub	sp, sp, #16
 1783              		.cfi_def_cfa_offset 24
 1784 0004 00AF     		add	r7, sp, #0
 1785              		.cfi_def_cfa_register 7
 1786 0006 7860     		str	r0, [r7, #4]
1318:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 1787              		.loc 1 1318 0
 1788 0008 0F23     		mov	r3, #15
 1789 000a FB18     		add	r3, r7, r3
 1790 000c 0022     		mov	r2, #0
 1791 000e 1A70     		strb	r2, [r3]
1319:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 numOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 1792              		.loc 1 1319 0
 1793 0010 0121     		mov	r1, #1
 1794 0012 0E23     		mov	r3, #14
 1795 0014 FB18     		add	r3, r7, r3
 1796 0016 0F22     		mov	r2, #15
 1797 0018 BA18     		add	r2, r7, r2
 1798 001a 1278     		ldrb	r2, [r2]
 1799 001c 8A18     		add	r2, r1, r2
 1800 001e 1A70     		strb	r2, [r3]
 1801              	.L117:
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 56


1320:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1321:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Disable all sensors of widget */
1322:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     do
1323:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
1324:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1325:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_SetBitValue(CapSense_1_sensorEnableMask, (uint32)rawIndex, 0u);
 1802              		.loc 1 1325 0 discriminator 1
 1803 0020 0F23     		mov	r3, #15
 1804 0022 FB18     		add	r3, r7, r3
 1805 0024 1B78     		ldrb	r3, [r3]
 1806 0026 0C4A     		ldr	r2, .L118
 1807 0028 101C     		mov	r0, r2
 1808 002a 191C     		mov	r1, r3
 1809 002c 0022     		mov	r2, #0
 1810 002e FFF7FEFF 		bl	CapSense_1_SetBitValue
1326:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         rawIndex++;
 1811              		.loc 1 1326 0 discriminator 1
 1812 0032 0F23     		mov	r3, #15
 1813 0034 FB18     		add	r3, r7, r3
 1814 0036 1A78     		ldrb	r2, [r3]
 1815 0038 0F23     		mov	r3, #15
 1816 003a FB18     		add	r3, r7, r3
 1817 003c 0132     		add	r2, r2, #1
 1818 003e 1A70     		strb	r2, [r3]
1327:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
1328:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     while(rawIndex < numOfSensors);
 1819              		.loc 1 1328 0 discriminator 1
 1820 0040 0F23     		mov	r3, #15
 1821 0042 FA18     		add	r2, r7, r3
 1822 0044 0E23     		mov	r3, #14
 1823 0046 FB18     		add	r3, r7, r3
 1824 0048 1278     		ldrb	r2, [r2]
 1825 004a 1B78     		ldrb	r3, [r3]
 1826 004c 9A42     		cmp	r2, r3
 1827 004e E7D3     		bcc	.L117
1329:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 1828              		.loc 1 1329 0
 1829 0050 BD46     		mov	sp, r7
 1830 0052 04B0     		add	sp, sp, #16
 1831              		@ sp needed
 1832 0054 80BD     		pop	{r7, pc}
 1833              	.L119:
 1834 0056 C046     		.align	2
 1835              	.L118:
 1836 0058 00000000 		.word	CapSense_1_sensorEnableMask
 1837              		.cfi_endproc
 1838              	.LFE61:
 1839              		.size	CapSense_1_DisableWidget, .-CapSense_1_DisableWidget
 1840              		.section	.text.CapSense_1_MedianFilter,"ax",%progbits
 1841              		.align	2
 1842              		.global	CapSense_1_MedianFilter
 1843              		.code	16
 1844              		.thumb_func
 1845              		.type	CapSense_1_MedianFilter, %function
 1846              	CapSense_1_MedianFilter:
 1847              	.LFB62:
1330:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 57


1331:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1332:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_CENTROIDS_BASIC_COUNT)
1333:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
1334:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_FindMaximum
1335:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
1336:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1337:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
1338:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1339:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  CapSense_1_sensorSignal[] within a defined centroid and
1340:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1341:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  ignored.
1342:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1343:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1344:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1345:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1346:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
1347:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  offset:  Start index of centroid in CapSense_1_sensorSignal[] array.
1348:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  count:   number of elements within centroid.
1349:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1350:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  diplex:   pointer to diplex table.
1351:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1352:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
1353:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1354:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1355:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1356:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Global Variables:
1357:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  CapSense_1_startOfSlider[] - contains the index of the first slider element
1358:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1359:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
1360:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
1361:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1362:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
1363:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if (CapSense_1_IS_DIPLEX_SLIDER)
1364:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 CapSense_1_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 
1365:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #else
1366:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 CapSense_1_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1367:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1368:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
1369:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 i;
1370:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1371:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 curPos = 0u;
1372:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* No centroid at Start */
1373:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 curCntrdSize = 0u;
1374:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 curCtrdStartPos = CapSense_1_MAXIMUM_CENTROID;
1375:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Biggest centroid is zero */
1376:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1377:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1378:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1379:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 maximum = CapSense_1_MAXIMUM_CENTROID;
1380:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1381:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 temp = 0u;
1382:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 *startOfSlider = &CapSense_1_sensorSignal[offset];
1383:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1384:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1385:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if(diplex != 0u)
1386:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
1387:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Initialize */
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 58


1388:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 i = 0u;
1389:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1390:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Make slider x2 as Diplexed */
1391:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 count <<= 1u;
1392:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 while(1u)
1393:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1394:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1395:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1396:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         if (curCtrdStartPos == CapSense_1_MAXIMUM_CENTROID)
1397:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         {
1398:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             /* Start of centroid */
1399:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             curCtrdStartPos = i;
1400:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             curCntrdSize++;
1401:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         }
1402:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         else
1403:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         {
1404:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             curCntrdSize++;
1405:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         }
1406:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
1407:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1408:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1409:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         if(curCntrdSize > 0u)
1410:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         {
1411:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             /* We are at the end of current */
1412:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1413:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1414:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1415:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1416:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
1417:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1418:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             curCntrdSize = 0u;
1419:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             curCtrdStartPos = CapSense_1_MAXIMUM_CENTROID;
1420:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         }
1421:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
1422:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1423:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     i++;
1424:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     curPos = diplex[i];
1425:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     if(i == count)
1426:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1427:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         break;
1428:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
1429:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1430:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1431:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1432:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                        We are at the end of current */
1433:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1434:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1435:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1436:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1437:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1438:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
1439:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             else
1440:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
1441:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Without diplexing */
1442:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 biggestCtrdSize = count;
1443:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
1444:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 59


1445:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1446:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Check centroid size */
1447:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #if (CapSense_1_IS_NON_DIPLEX_SLIDER)
1448:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1449:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #else
1450:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1451:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_IS_NON_DIPLEX_SLIDER) */
1452:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1453:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1454:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1455:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER)
1456:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (diplex == 0u)
1457:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1458:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 curPos = i;
1459:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
1460:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             else
1461:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1462:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 curPos = diplex[i];
1463:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
1464:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #elif (CapSense_1_IS_DIPLEX_SLIDER)
1465:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             curPos = diplex[i];
1466:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER) 
1467:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         /* Looking for greater element within centroid */
1468:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1469:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         {
1470:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1471:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1472:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 maximum = i;
1473:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 temp = startOfSlider[curPos];
1474:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
1475:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         }
1476:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
1477:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1478:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #else
1479:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             for (i = 0u; i < count; i++)
1480:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
1481:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Looking for greater element within centroid */
1482:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1483:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1484:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     if(startOfSlider[i] > temp)
1485:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1486:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         maximum = i;
1487:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         temp = startOfSlider[i];
1488:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
1489:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1490:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
1491:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1492:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return (maximum);
1493:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
1494:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1495:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1496:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
1497:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_CalcCentroid
1498:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
1499:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1500:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
1501:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 60


1502:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  resolution.
1503:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1504:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
1505:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  type:  widget type.
1506:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  diplex:  pointer to diplex table.
1507:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1508:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  offset:   Start index of centroid in CapSense_1_sensorSignal[] array.
1509:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  count:    Number of elements within centroid.
1510:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1511:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  API resolution.
1512:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1513:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1514:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
1515:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns a position value of the slider.
1516:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1517:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
1518:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
1519:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1520:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
1521:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if (CapSense_1_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1522:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 CapSense_1_CalcCentroid(uint8 maximum, uint8 offset,
1523:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1524:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #else
1525:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 CapSense_1_CalcCentroid(uint8 maximum, uint8 offset,
1526:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1527:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1528:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
1529:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_TOUCH_PADS_BASIC_COU
1530:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 posPrev;
1531:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 posNext;
1532:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_1_TOTAL_TOUCH_PADS_BASIC
1533:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1534:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Helps during centroid calculation */
1535:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_TOTAL_CENTROIDS_BASIC_COUNT)
1536:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             static uint8 CapSense_1_centroid[3u];
1537:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif  /* (CapSense_1_TOTAL_CENTROIDS_BASIC_COUNT) */
1538:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1539:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1540:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 pos;
1541:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1542:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1543:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 position;
1544:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint32 numerator;
1545:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         int32 denominator;
1546:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1547:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8  *startOfSlider = &CapSense_1_sensorSignal[offset];
1548:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1549:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_TOUCH_PADS_BASIC_COU
1550:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             posPrev = 0u;
1551:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_1_TOTAL_TOUCH_PADS_BASIC
1552:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1553:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1554:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if(type == CapSense_1_TYPE_RADIAL_SLIDER)
1555:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
1556:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1557:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1558:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #if (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 61


1559:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Copy Signal to the centroid array */
1560:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 CapSense_1_centroid[CapSense_1_POS] = startOfSlider[maximum];
1561:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1562:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Check borders for ROTARY Slider */
1563:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1564:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1565:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[count - 1u];
1566:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[1u];
1567:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1568:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1569:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1570:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[maximum - 1u];
1571:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[0u];
1572:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1573:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 else                                /* Not first Not last */
1574:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1575:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[maximum - 1u];
1576:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[maximum + 1u];
1577:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1578:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1579:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1580:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1581:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
1582:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             else
1583:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
1584:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1585:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1586:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #if ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_TOUCH_PADS_BASIC
1587:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 #if (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER)
1588:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1589:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     if(diplex == 0u)
1590:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1591:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         pos     = maximum;
1592:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         posPrev = maximum - 1u;
1593:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         posNext = maximum + 1u;
1594:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
1595:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     else
1596:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1597:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         pos     = diplex[maximum];
1598:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1599:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         posNext = diplex[maximum + 1u];
1600:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         count <<= 1u;
1601:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
1602:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 #elif (CapSense_1_IS_DIPLEX_SLIDER)
1603:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1604:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     pos     = diplex[maximum];
1605:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1606:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     posNext = diplex[maximum + 1u];
1607:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     count <<= 1u;
1608:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 #else
1609:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1610:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     if (maximum >= 1u)
1611:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1612:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         posPrev = maximum - 1u;
1613:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
1614:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     posNext = maximum + 1u;
1615:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 #endif /* (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER) */
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 62


1616:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1617:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Copy Signal to the centroid array */
1618:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 #if (CapSense_1_IS_DIPLEX_SLIDER)
1619:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS] = startOfSlider[pos];
1620:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 #else
1621:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS] = startOfSlider[maximum];
1622:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1623:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1624:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Check borders for LINEAR Slider */
1625:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1626:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1627:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = 0u;
1628:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[posNext];
1629:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1630:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1631:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1632:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[posPrev];
1633:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = 0u;
1634:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1635:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 else                                /* Not first Not last */
1636:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1637:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[posPrev];
1638:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[posNext];
1639:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1640:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #endif /* ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_1_TOTAL_TOUCH_PADS_BAS
1641:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1642:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1643:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
1644:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1645:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1646:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Subtract noiseThreshold */
1647:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(CapSense_1_centroid[CapSense_1_POS_PREV] > noiseThreshold)
1648:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1649:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_PREV] -= noiseThreshold;
1650:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1651:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         else
1652:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1653:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_PREV] = 0u;
1654:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1655:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1656:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1657:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_centroid[CapSense_1_POS] -= noiseThreshold;
1658:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1659:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Subtract noiseThreshold */
1660:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(CapSense_1_centroid[CapSense_1_POS_NEXT] > noiseThreshold)
1661:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1662:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_NEXT] -= noiseThreshold;
1663:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1664:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         else
1665:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1666:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_NEXT] = 0u;
1667:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1668:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1669:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1670:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Si+1 - Si-1 */
1671:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         numerator = (uint32) CapSense_1_centroid[CapSense_1_POS_NEXT] -
1672:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     (uint32) CapSense_1_centroid[CapSense_1_POS_PREV];
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 63


1673:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1674:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Si+1 + Si + Si-1 */
1675:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         denominator = (int32) CapSense_1_centroid[CapSense_1_POS_PREV] +
1676:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                       (int32) CapSense_1_centroid[CapSense_1_POS] +
1677:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                       (int32) CapSense_1_centroid[CapSense_1_POS_NEXT];
1678:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1679:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* (numerator/denominator) + maximum */
1680:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1681:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1682:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if(CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1683:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Only required for RADIAL Slider */
1684:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if(denominator < 0)
1685:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
1686:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1687:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
1688:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1689:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1690:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         denominator *= (int16)resolution;
1691:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1692:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Round result and put it to uint8 */
1693:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_1_CENTROID_ROUND_VALUE));
1694:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1695:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return (position);
1696:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
1697:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_CENTROIDS_BASIC_COUNT) */
1698:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1699:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1700:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if((CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1701:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
1702:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetCentroidPos
1703:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
1704:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1705:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
1706:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Checks the CapSense_1_Signal[ ] array for a centroid within
1707:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1708:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1709:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  result if enabled.
1710:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1711:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
1712:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  widget:  Widget number.
1713:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1714:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  #define CapSense_1_"widget_name"__LS           5
1715:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1716:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
1717:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns a position value of the linear slider.
1718:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1719:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Global Variables:
1720:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
1721:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1722:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
1723:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1724:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1725:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1726:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1727:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1728:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1729:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 64


1730:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Note:
1731:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1732:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1733:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1734:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  that noise will not generate a false centroid.
1735:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
1736:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_GetCentroidPos(uint32 widget)
1737:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
1738:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1739:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             const uint8 *diplex;
1740:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1741:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1742:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1743:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 posIndex;
1744:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1745:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget];
1746:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1747:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1748:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1749:Generated_Source\PSoC4/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1750:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 tempPos;
1751:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) 
1752:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK
1753:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                */
1754:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1755:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 maximum;
1756:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint16 position;
1757:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1758:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1759:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1760:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1761:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if(widget < CapSense_1_TOTAL_DIPLEXED_SLIDERS_COUNT)
1762:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
1763:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 maximum = CapSense_1_diplexTable[widget];
1764:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 diplex = &CapSense_1_diplexTable[maximum];
1765:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
1766:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             else
1767:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
1768:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 diplex = 0u;
1769:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
1770:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1771:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1772:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Find Maximum within centroid */
1773:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1774:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, (uint8)CapSense_1_fingerThreshold[widge
1775:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #else
1776:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, (uint8)CapSense_1_fingerThreshold[widge
1777:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1778:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1779:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if (maximum != 0xFFu)
1780:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1781:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Calculate centroid */
1782:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             position = (uint16) CapSense_1_CalcCentroid(maximum,
1783:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                          offset, count, CapSense_1_centroidMult[widget], CapSense_1_noiseThreshold[
1784:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1785:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1786:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Check if this linear slider has enabled filters */
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 65


1787:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1788:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1789:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     /* Calculate position to store filters data */
1790:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1791:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1792:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1793:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1794:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         /* Init filters */
1795:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[posIndex] = (uint8) position;
1796:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if ((0u != (CapSense_1_MEDIAN_FILTER & \
1797:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                      CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1798:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                              (0u != (CapSense_1_AVERAGING_FILTER & \
1799:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                      CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1800:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1801:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER)) ||
1802:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1803:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1804:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = (uint8) position;
1805:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
1806:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1807:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1808:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *   (0u != (CapSense_1_AVERAGING_FILTER & \
1809:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1810:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
1811:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1812:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1813:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
1814:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     else
1815:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1816:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         /* Do filtering */
1817:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1818:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1819:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1820:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1821:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_MedianFilter(position,
1822:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1823:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1824:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] =
1825:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1826:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1827:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
1828:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /*(0u != (CapSense_1_MEDIAN_FILTER &
1829:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *         CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1830:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
1831:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1832:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if(0u!=(CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1833:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER))
1834:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1835:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1836:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_AveragingFilter(position,
1837:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1838:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1839:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex+1u]=CapSense_1_posFiltersData[po
1840:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1841:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
1842:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1843:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 66


1844:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
1845:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1846:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_
1847:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER))
1848:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1849:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR2Filter(position,
1850:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1851:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1852:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
1853:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR2_FILTER & \
1854:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *          CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1855:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
1856:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1857:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_
1858:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1859:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1860:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR4Filter(position,
1861:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1862:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1863:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
1864:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR4_FILTER & \
1865:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *          CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1866:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
1867:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1868:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1869:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1870:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1871:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_JitterFilter(position,
1872:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1873:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1874:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
1875:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_JITTER_FILTER & \
1876:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1877:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
1878:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
1879:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1880:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1881:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1882:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1883:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         else
1884:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1885:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Maximum wasn't found */
1886:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             position = 0xFFFFu;
1887:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1888:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #if(0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1889:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Reset filters */
1890:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1891:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1892:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1893:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1894:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1895:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1896:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1897:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1898:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return (position);
1899:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
1900:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* ((CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT >
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 67


1901:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1902:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1903:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if((CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1904:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
1905:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetRadialCentroidPos
1906:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
1907:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1908:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
1909:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Checks the CapSense_1_Signal[ ] array for a centroid within
1910:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1911:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1912:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  result if enabled.
1913:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1914:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
1915:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  widget:  Widget number.
1916:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1917:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  #define CapSense_1_"widget_name"__RS           5
1918:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1919:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
1920:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns a position value of the radial slider.
1921:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1922:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Global Variables:
1923:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None.
1924:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1925:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
1926:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1927:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1928:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1929:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1930:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1931:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1932:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Note:
1933:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1934:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1935:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1936:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  that noise will not generate a false centroid.
1937:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1938:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
1939:Generated_Source\PSoC4/CapSense_1_CSHL.c ****      uint16 CapSense_1_GetRadialCentroidPos(uint32 widget)
1940:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
1941:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1942:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 posIndex;
1943:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1944:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget];
1945:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1946:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1947:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1948:Generated_Source\PSoC4/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1949:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 tempPos;
1950:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) 
1951:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK
1952:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                */
1953:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1954:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 maximum;
1955:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint16 position;
1956:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1957:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 68


1958:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1959:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Find Maximum within centroid */
1960:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1961:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, (uint8)CapSense_1_fingerThreshold[widge
1962:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #else
1963:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, (uint8)CapSense_1_fingerThreshold[widge
1964:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1965:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1966:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if (maximum != CapSense_1_MAXIMUM_CENTROID)
1967:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1968:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Calculate centroid */
1969:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             position = (uint16) CapSense_1_CalcCentroid(maximum,
1970:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                          offset, count, CapSense_1_centroidMult[widget], CapSense_1_noiseThreshold[
1971:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1972:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1973:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1974:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1975:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1976:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     /* Calculate position to store filters data */
1977:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1978:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1979:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1980:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1981:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         /* Init filters */
1982:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[posIndex] = (uint8) position;
1983:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if ((0u != (CapSense_1_MEDIAN_FILTER & \
1984:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                      CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1985:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                              (0u != (CapSense_1_AVERAGING_FILTER & \
1986:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                      CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1987:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1988:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))  ||
1989:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1990:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1991:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = (uint8) position;
1992:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
1993:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1994:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1995:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *   (0u != (CapSense_1_AVERAGING_FILTER & \
1996:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1997:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
1998:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1999:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[firstTimeIndex] = 1u;
2000:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
2001:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     else
2002:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
2003:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         /* Do filtering */
2004:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTER
2005:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
2006:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
2007:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
2008:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_MedianFilter(position,
2009:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                         CapSense_1_posFiltersData[p
2010:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                         CapSense_1_posFiltersData[p
2011:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] =
2012:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                               CapSense_1_posFilters
2013:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
2014:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 69


2015:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_MEDIAN_FILTER &
2016:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
2017:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
2018:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2019:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_AVERAGING_FILTER & \
2020:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
2021:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER))
2022:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
2023:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
2024:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_AveragingFilter(position,
2025:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
2026:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
2027:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex+1u]= CapSense_1_posFiltersData[p
2028:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
2029:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
2030:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
2031:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
2032:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
2033:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2034:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_
2035:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER))
2036:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
2037:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR2Filter(position,
2038:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
2039:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
2040:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
2041:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR2_FILTER &
2042:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
2043:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
2044:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2045:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_
2046:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
2047:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
2048:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR4Filter(position,
2049:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
2050:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
2051:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
2052:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR4_FILTER &
2053:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
2054:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
2055:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2056:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTER
2057:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
2058:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
2059:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_JitterFilter(position,
2060:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                          CapSense_1_posFiltersData[
2061:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
2062:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
2063:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_JITTER_FILTER &
2064:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
2065:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
2066:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
2067:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
2068:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2069:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2070:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
2071:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         else
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 70


2072:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
2073:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Maximum was not found */
2074:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             position = 0xFFFFu;
2075:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2076:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
2077:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Reset filters */
2078:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if((posFiltersMask & CapSense_1_ANY_POS_FILTER) != 0u)
2079:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
2080:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
2081:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
2082:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2083:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
2084:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2085:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return (position);
2086:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
2087:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* ((CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT >
2088:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2089:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2090:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2091:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetTouchCentroidPos
2093:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
2094:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2095:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
2096:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2097:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2098:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2099:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2100:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  The position filter is applied to the result if enabled.
2101:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2102:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  customizer.
2103:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2104:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
2105:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  widget:  Widget number.
2106:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2107:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  #define CapSense_1_"widget_name"__TP            5
2108:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2109:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2110:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  result of calculation of X and Y position are stored.
2111:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  pos[0u]  - position of X
2112:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  pos[1u]  - position of Y
2113:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2114:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
2115:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2116:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2117:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Global Variables:
2118:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None.
2119:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2120:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
2121:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2122:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2123:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *   calculations.
2124:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2125:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
2126:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 CapSense_1_GetTouchCentroidPos(uint32 widget, uint16* pos)
2127:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
2128:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 71


2129:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 posXIndex;
2130:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 posYIndex;
2131:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
2132:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget];
2133:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
2134:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2135:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
2136:Generated_Source\PSoC4/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
2137:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint16 tempPos;
2138:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
2139:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
2140:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                */
2141:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2142:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 MaxX;
2143:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 MaxY;
2144:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 posX;
2145:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 posY;
2146:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint32 touch = 0u;
2147:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
2148:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
2149:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2150:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Find Maximum within X centroid */
2151:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
2152:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             MaxX = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], 0u);
2153:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #else
2154:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             MaxX = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
2155:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
2156:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2157:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if (MaxX != CapSense_1_MAXIMUM_CENTROID)
2158:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
2159:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             offset = CapSense_1_rawDataIndex[widget + 1u];
2160:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             count = CapSense_1_numberOfSensors[widget + 1u];
2161:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2162:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Find Maximum within Y centroid */
2163:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #if (CapSense_1_IS_DIPLEX_SLIDER)
2164:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 MaxY = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget + 1u
2165:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #else
2166:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 MaxY = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget + 1u
2167:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
2168:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2169:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if (MaxY != CapSense_1_MAXIMUM_CENTROID)
2170:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
2171:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* X and Y maximums are found = true touch */
2172:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 touch = 1u;
2173:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2174:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Calculate Y centroid */
2175:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 posY = CapSense_1_CalcCentroid(MaxY, offset, count,
2176:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             CapSense_1_centroidMult[widget + 1u], CapSense_1_noiseThreshold[widget 
2177:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2178:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Calculate X centroid */
2179:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 offset = CapSense_1_rawDataIndex[widget];
2180:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 count = CapSense_1_numberOfSensors[widget];
2181:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2182:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 posX = CapSense_1_CalcCentroid(MaxX, offset, count,
2183:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             CapSense_1_centroidMult[widget],CapSense_1_noiseThreshold[widget]);
2184:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2185:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 72


2186:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     /* Check if this TP has enabled filters */
2187:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
2188:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
2189:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         /* Calculate position to store filters data */
2190:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2191:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         posYIndex  = CapSense_1_posFiltersData[widget + 1u];
2192:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2193:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         if (0u == CapSense_1_posFiltersData[firstTimeIndex])
2194:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         {
2195:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             /* Init filters */
2196:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[posXIndex] = posX;
2197:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[posYIndex] = posY;
2198:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2199:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #if((0u != (CapSense_1_MEDIAN_FILTER & \
2200:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                         CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))|| \
2201:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 (0u != (CapSense_1_AVERAGING_FILTER & \
2202:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                         CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
2203:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2204:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER)) ||
2205:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
2206:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 {
2207:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = posX;
2208:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = posY;
2209:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 }
2210:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
2211:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
2212:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    *    (0u != (CapSense_1_AVERAGING_FILTER & \
2213:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    *            CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
2214:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    */
2215:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2216:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[firstTimeIndex] = 1u;
2217:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         }
2218:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         else
2219:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         {
2220:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             /* Do filtering */
2221:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTER
2222:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
2223:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 {
2224:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     tempPos = posX;
2225:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_MedianFilter(posX,
2226:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
2227:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
2228:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] =
2229:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
2230:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = tempPos;
2231:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2232:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     tempPos = posY;
2233:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_MedianFilter(posY,
2234:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
2235:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
2236:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] =
2237:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
2238:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = tempPos;
2239:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 }
2240:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2241:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_MEDIAN_FILTER & \
2242:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    *          CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 73


2243:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    */
2244:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2245:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #if(0u !=(CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTE
2246:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER))
2247:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 {
2248:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     tempPos = posX;
2249:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_AveragingFilter(posX,
2250:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
2251:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
2252:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] =
2253:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
2254:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = tempPos;
2255:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2256:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     tempPos = posY;
2257:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_AveragingFilter(posY,
2258:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
2259:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
2260:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] =
2261:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
2262:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = tempPos;
2263:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 }
2264:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2265:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
2266:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
2267:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    */
2268:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2269:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_
2270:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER))
2271:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 {
2272:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_IIR2Filter(posX,
2273:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                            CapSense_1_posFiltersDat
2274:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = posX;
2275:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2276:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_IIR2Filter(posY,
2277:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
2278:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = posY;
2279:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 }
2280:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2281:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_IIR2_FILTER & \
2282:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    *          CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
2283:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    */
2284:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2285:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_
2286:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
2287:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 {
2288:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_IIR4Filter((uint16)posX,
2289:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
2290:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = posX;
2291:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2292:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_IIR4Filter((uint16)posY,
2293:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
2294:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = posY;
2295:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 }
2296:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2297:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_IIR4_FILTER & \
2298:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
2299:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    */
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 74


2300:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2301:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_TOUCH_PADS_POS_FILTER
2302:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
2303:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     {
2304:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                         posX = (uint8) CapSense_1_JitterFilter(posX,
2305:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
2306:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                         CapSense_1_posFiltersData[posXIndex] = posX;
2307:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2308:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                         posY = (uint8) CapSense_1_JitterFilter(posY,
2309:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
2310:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                         CapSense_1_posFiltersData[posYIndex] = posY;
2311:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     }
2312:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_JITTER_FILTER & \
2313:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
2314:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    */
2315:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         }
2316:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
2317:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
2318:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2319:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Save positions */
2320:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 pos[0u] = posX;
2321:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 pos[1u] = posY;
2322:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
2323:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
2324:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2325:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
2326:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if(touch == 0u)
2327:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
2328:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Reset filters */
2329:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if ((posFiltersMask & CapSense_1_ANY_POS_FILTER) != 0u)
2330:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
2331:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
2332:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
2333:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
2334:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
2335:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2336:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return (touch);
2337:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
2338:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2339:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2340:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2341:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER)) || \
2342:Generated_Source\PSoC4/CapSense_1_CSHL.c ****       (0u != (CapSense_1_POS_FILTERS_MASK & CapSense_1_MEDIAN_FILTER)) || \
2343:Generated_Source\PSoC4/CapSense_1_CSHL.c ****       ((CapSense_1_TUNING_METHOD == CapSense_1__TUNING_AUTO)) )
2344:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
2345:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_MedianFilter
2346:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
2347:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2348:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
2349:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This is the Median filter function.
2350:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2351:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  median value.
2352:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2353:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
2354:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x1:  Current value.
2355:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x2:  Previous value.
2356:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x3:  Before previous value.
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 75


2357:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2358:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
2359:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns filtered value.
2360:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2361:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Global Variables:
2362:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None.
2363:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2364:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
2365:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
2366:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2367:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
2368:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2369:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 1848              		.loc 1 2369 0
 1849              		.cfi_startproc
 1850 0000 90B5     		push	{r4, r7, lr}
 1851              		.cfi_def_cfa_offset 12
 1852              		.cfi_offset 4, -12
 1853              		.cfi_offset 7, -8
 1854              		.cfi_offset 14, -4
 1855 0002 85B0     		sub	sp, sp, #20
 1856              		.cfi_def_cfa_offset 32
 1857 0004 00AF     		add	r7, sp, #0
 1858              		.cfi_def_cfa_register 7
 1859 0006 041C     		mov	r4, r0
 1860 0008 081C     		mov	r0, r1
 1861 000a 111C     		mov	r1, r2
 1862 000c BB1D     		add	r3, r7, #6
 1863 000e 221C     		add	r2, r4, #0
 1864 0010 1A80     		strh	r2, [r3]
 1865 0012 3B1D     		add	r3, r7, #4
 1866 0014 021C     		add	r2, r0, #0
 1867 0016 1A80     		strh	r2, [r3]
 1868 0018 BB1C     		add	r3, r7, #2
 1869 001a 0A1C     		add	r2, r1, #0
 1870 001c 1A80     		strh	r2, [r3]
2370:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint16 tmp;
2371:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2372:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if (x1 > x2)
 1871              		.loc 1 2372 0
 1872 001e BA1D     		add	r2, r7, #6
 1873 0020 3B1D     		add	r3, r7, #4
 1874 0022 1288     		ldrh	r2, [r2]
 1875 0024 1B88     		ldrh	r3, [r3]
 1876 0026 9A42     		cmp	r2, r3
 1877 0028 0DD9     		bls	.L121
2373:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
2374:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             tmp = x2;
 1878              		.loc 1 2374 0
 1879 002a 0E23     		mov	r3, #14
 1880 002c FB18     		add	r3, r7, r3
 1881 002e 3A1D     		add	r2, r7, #4
 1882 0030 1288     		ldrh	r2, [r2]
 1883 0032 1A80     		strh	r2, [r3]
2375:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             x2 = x1;
 1884              		.loc 1 2375 0
 1885 0034 3B1D     		add	r3, r7, #4
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 76


 1886 0036 BA1D     		add	r2, r7, #6
 1887 0038 1288     		ldrh	r2, [r2]
 1888 003a 1A80     		strh	r2, [r3]
2376:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             x1 = tmp;
 1889              		.loc 1 2376 0
 1890 003c BB1D     		add	r3, r7, #6
 1891 003e 0E22     		mov	r2, #14
 1892 0040 BA18     		add	r2, r7, r2
 1893 0042 1288     		ldrh	r2, [r2]
 1894 0044 1A80     		strh	r2, [r3]
 1895              	.L121:
2377:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
2378:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2379:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if (x2 > x3)
 1896              		.loc 1 2379 0
 1897 0046 3A1D     		add	r2, r7, #4
 1898 0048 BB1C     		add	r3, r7, #2
 1899 004a 1288     		ldrh	r2, [r2]
 1900 004c 1B88     		ldrh	r3, [r3]
 1901 004e 9A42     		cmp	r2, r3
 1902 0050 03D9     		bls	.L122
2380:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
2381:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             x2 = x3;
 1903              		.loc 1 2381 0
 1904 0052 3B1D     		add	r3, r7, #4
 1905 0054 BA1C     		add	r2, r7, #2
 1906 0056 1288     		ldrh	r2, [r2]
 1907 0058 1A80     		strh	r2, [r3]
 1908              	.L122:
2382:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
2383:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2384:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 1909              		.loc 1 2384 0
 1910 005a 3B1D     		add	r3, r7, #4
 1911 005c BA1D     		add	r2, r7, #6
 1912 005e 1088     		ldrh	r0, [r2]
 1913 0060 1B88     		ldrh	r3, [r3]
 1914 0062 99B2     		uxth	r1, r3
 1915 0064 82B2     		uxth	r2, r0
 1916 0066 9142     		cmp	r1, r2
 1917 0068 00D2     		bcs	.L123
 1918 006a 031C     		add	r3, r0, #0
 1919              	.L123:
 1920 006c 9BB2     		uxth	r3, r3
2385:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 1921              		.loc 1 2385 0
 1922 006e 181C     		mov	r0, r3
 1923 0070 BD46     		mov	sp, r7
 1924 0072 05B0     		add	sp, sp, #20
 1925              		@ sp needed
 1926 0074 90BD     		pop	{r4, r7, pc}
 1927              		.cfi_endproc
 1928              	.LFE62:
 1929              		.size	CapSense_1_MedianFilter, .-CapSense_1_MedianFilter
 1930 0076 C046     		.section	.text.CapSense_1_IIR4Filter,"ax",%progbits
 1931              		.align	2
 1932              		.global	CapSense_1_IIR4Filter
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 77


 1933              		.code	16
 1934              		.thumb_func
 1935              		.type	CapSense_1_IIR4Filter, %function
 1936              	CapSense_1_IIR4Filter:
 1937              	.LFB63:
2386:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER)) || \
2387:Generated_Source\PSoC4/CapSense_1_CSHL.c ****       (0u != (CapSense_1_POS_FILTERS_MASK & CapSense_1_MEDIAN_FILTER)) || \
2388:Generated_Source\PSoC4/CapSense_1_CSHL.c ****       ((CapSense_1_TUNING_METHOD == CapSense_1__TUNING_AUTO)) ) */
2389:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2390:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2391:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER)) || \
2392:Generated_Source\PSoC4/CapSense_1_CSHL.c ****       (0u != (CapSense_1_POS_FILTERS_MASK & CapSense_1_AVERAGING_FILTER)) )
2393:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
2394:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_AveragingFilter
2395:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
2396:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2397:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
2398:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This is the Averaging filter function.
2399:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2400:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  reports the averaging value.
2401:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2402:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
2403:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x1:  Current value.
2404:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x2:  Previous value.
2405:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x3:  Before previous value.
2406:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2407:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
2408:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns filtered value.
2409:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2410:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Global Variables:
2411:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None.
2412:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2413:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
2414:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
2415:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2416:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
2417:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2418:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
2419:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2420:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2421:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return ((uint16) tmp);
2422:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
2423:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) || \
2424:Generated_Source\PSoC4/CapSense_1_CSHL.c ****       (0u != (CapSense_1_POS_FILTERS_MASK & CapSense_1_AVERAGING_FILTER) ) */
2425:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2426:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2427:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER)) || \
2428:Generated_Source\PSoC4/CapSense_1_CSHL.c ****       (0u != (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR2_FILTER)) )
2429:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
2430:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR2Filter
2431:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
2432:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2433:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
2434:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2435:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2436:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
2437:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x1:  Current value.
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 78


2438:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x2:  Previous value.
2439:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2440:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
2441:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns filtered value.
2442:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2443:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Global Variables:
2444:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None.
2445:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2446:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
2447:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
2448:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2449:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
2450:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR2Filter(uint16 x1, uint16 x2)
2451:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
2452:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint32 tmp;
2453:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2454:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2455:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2456:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp >>= 1u;
2457:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2458:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return ((uint16) tmp);
2459:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
2460:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER)) || \
2461:Generated_Source\PSoC4/CapSense_1_CSHL.c ****        *    (0u != (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR2_FILTER)) )
2462:Generated_Source\PSoC4/CapSense_1_CSHL.c ****        */
2463:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2464:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2465:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER)) || \
2466:Generated_Source\PSoC4/CapSense_1_CSHL.c ****       (0u != (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR4_FILTER)) )
2467:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
2468:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR4Filter
2469:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
2470:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2471:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
2472:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2473:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2474:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
2475:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x1:  Current value.
2476:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x2:  Previous value.
2477:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2478:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
2479:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns a filtered value.
2480:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2481:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Global Variables:
2482:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None.
2483:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2484:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
2485:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
2486:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2487:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
2488:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR4Filter(uint16 x1, uint16 x2)
2489:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 1938              		.loc 1 2489 0
 1939              		.cfi_startproc
 1940 0000 80B5     		push	{r7, lr}
 1941              		.cfi_def_cfa_offset 8
 1942              		.cfi_offset 7, -8
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 79


 1943              		.cfi_offset 14, -4
 1944 0002 84B0     		sub	sp, sp, #16
 1945              		.cfi_def_cfa_offset 24
 1946 0004 00AF     		add	r7, sp, #0
 1947              		.cfi_def_cfa_register 7
 1948 0006 021C     		mov	r2, r0
 1949 0008 BB1D     		add	r3, r7, #6
 1950 000a 1A80     		strh	r2, [r3]
 1951 000c 3B1D     		add	r3, r7, #4
 1952 000e 0A1C     		add	r2, r1, #0
 1953 0010 1A80     		strh	r2, [r3]
2490:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint32 tmp;
2491:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2492:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2493:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1954              		.loc 1 2493 0
 1955 0012 BB1D     		add	r3, r7, #6
 1956 0014 1A88     		ldrh	r2, [r3]
 1957 0016 3B1D     		add	r3, r7, #4
 1958 0018 1B88     		ldrh	r3, [r3]
 1959 001a D318     		add	r3, r2, r3
 1960 001c FB60     		str	r3, [r7, #12]
2494:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1961              		.loc 1 2494 0
 1962 001e 3B1D     		add	r3, r7, #4
 1963 0020 1B88     		ldrh	r3, [r3]
 1964 0022 5B00     		lsl	r3, r3, #1
 1965 0024 FA68     		ldr	r2, [r7, #12]
 1966 0026 D318     		add	r3, r2, r3
 1967 0028 FB60     		str	r3, [r7, #12]
2495:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp >>= 2u;
 1968              		.loc 1 2495 0
 1969 002a FB68     		ldr	r3, [r7, #12]
 1970 002c 9B08     		lsr	r3, r3, #2
 1971 002e FB60     		str	r3, [r7, #12]
2496:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2497:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return ((uint16) tmp);
 1972              		.loc 1 2497 0
 1973 0030 FB68     		ldr	r3, [r7, #12]
 1974 0032 9BB2     		uxth	r3, r3
2498:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 1975              		.loc 1 2498 0
 1976 0034 181C     		mov	r0, r3
 1977 0036 BD46     		mov	sp, r7
 1978 0038 04B0     		add	sp, sp, #16
 1979              		@ sp needed
 1980 003a 80BD     		pop	{r7, pc}
 1981              		.cfi_endproc
 1982              	.LFE63:
 1983              		.size	CapSense_1_IIR4Filter, .-CapSense_1_IIR4Filter
 1984              		.section	.text.CapSense_1_GetWidgetNumber,"ax",%progbits
 1985              		.align	2
 1986              		.global	CapSense_1_GetWidgetNumber
 1987              		.code	16
 1988              		.thumb_func
 1989              		.type	CapSense_1_GetWidgetNumber, %function
 1990              	CapSense_1_GetWidgetNumber:
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 80


 1991              	.LFB64:
2499:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER)) || \
2500:Generated_Source\PSoC4/CapSense_1_CSHL.c ****        *    (0u != (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR4_FILTER)) )
2501:Generated_Source\PSoC4/CapSense_1_CSHL.c ****        */
2502:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2503:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2504:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER)) || \
2505:Generated_Source\PSoC4/CapSense_1_CSHL.c ****       (0u != (CapSense_1_POS_FILTERS_MASK & CapSense_1_JITTER_FILTER)) || \
2506:Generated_Source\PSoC4/CapSense_1_CSHL.c ****       (0u != (CapSense_1_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_1_JITTER_FILTER)))
2507:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
2508:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: uint16 CapSense_1_JitterFilter
2509:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
2510:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2511:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
2512:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This is the Jitter filter function.
2513:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2514:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
2515:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x1:  Current value.
2516:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x2:  Previous value.
2517:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2518:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
2519:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns filtered value.
2520:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2521:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Global Variables:
2522:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None.
2523:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2524:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
2525:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
2526:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2527:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
2528:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_JitterFilter(uint16 x1, uint16 x2)
2529:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
2530:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if (x1 > x2)
2531:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
2532:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             x1--;
2533:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
2534:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         else
2535:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
2536:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if (x1 < x2)
2537:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
2538:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 x1++;
2539:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
2540:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
2541:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2542:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return x1;
2543:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
2544:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER)) || \
2545:Generated_Source\PSoC4/CapSense_1_CSHL.c ****        *    (0u != (CapSense_1_POS_FILTERS_MASK & CapSense_1_JITTER_FILTER)) )
2546:Generated_Source\PSoC4/CapSense_1_CSHL.c ****        *    (0u != (CapSense_1_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_1_JITTER_FILTER)) )
2547:Generated_Source\PSoC4/CapSense_1_CSHL.c ****        */
2548:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2549:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2550:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER))
2551:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
2552:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR8Filter
2553:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
2554:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 81


2555:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
2556:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2557:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Only applies for raw data.
2558:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2559:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
2560:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x1:  Current value.
2561:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x2:  Previous value.
2562:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2563:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
2564:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns filtered value.
2565:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2566:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Global Variables:
2567:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None.
2568:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2569:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
2570:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
2571:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2572:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
2573:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR8Filter(uint16 x1, uint16 x2)
2574:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
2575:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint32 tmp;
2576:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2577:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2578:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp = (uint32)x1;
2579:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2580:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp >>= 3u;
2581:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2582:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return ((uint16) tmp);
2583:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
2584:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER)) */
2585:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2586:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2587:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER))
2588:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
2589:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR16Filter
2590:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
2591:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2592:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
2593:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2594:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Only applies for raw data.
2595:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2596:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
2597:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x1:  Current value.
2598:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x2:  Previous value.
2599:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2600:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
2601:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns filtered value.
2602:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2603:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Global Variables:
2604:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None.
2605:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2606:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
2607:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
2608:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2609:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
2610:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR16Filter(uint16 x1, uint16 x2)
2611:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 82


2612:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint32 tmp;
2613:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2614:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2615:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp = (uint32)x1;
2616:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2617:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp >>= 4u;
2618:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2619:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return ((uint16) tmp);
2620:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
2621:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER) */
2622:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2623:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2624:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if (0u != (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT))
2625:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2626:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
2627:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetMatrixButtonPos
2628:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
2629:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2630:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
2631:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2632:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  button widget.
2633:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2634:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
2635:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  widget:  widget number;
2636:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2637:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *           stored:
2638:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *           pos[0] - column position;
2639:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *           pos[1] - raw position.
2640:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2641:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
2642:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2643:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  cases.
2644:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2645:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Global Variables:
2646:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  CapSense_1_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2647:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  CapSense_1_sensorSignal[ ] - used to store a difference between the current value of
2648:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  raw data and a previous value of the baseline.
2649:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2650:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
2651:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
2652:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2653:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
2654:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 CapSense_1_GetMatrixButtonPos(uint32 widget, uint8* pos)
2655:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
2656:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 i;
2657:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint32 retVal = 0u;
2658:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint16 row_sig_max = 0u;
2659:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint16 col_sig_max = 0u;
2660:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 row_ind = 0u;
2661:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 col_ind = 0u;
2662:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2663:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if (CapSense_1_CheckIsWidgetActive(widget) == 1u)
2664:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
2665:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Find row number with maximal signal value */
2666:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             for(i = CapSense_1_rawDataIndex[widget]; i < (CapSense_1_rawDataIndex[widget] + \
2667:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                  CapSense_1_numberOfSensors[widget]); i++)
2668:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 83


2669:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if (CapSense_1_sensorSignal[i] > col_sig_max)
2670:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
2671:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     col_ind = i;
2672:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     col_sig_max = CapSense_1_sensorSignal[i];
2673:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
2674:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
2675:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2676:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Find row number with maximal signal value */
2677:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             for(i = CapSense_1_rawDataIndex[widget+1u]; i < (CapSense_1_rawDataIndex[widget+1u] + \
2678:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                  CapSense_1_numberOfSensors[widget+1u]); i++)
2679:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
2680:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if (CapSense_1_sensorSignal[i] > row_sig_max)
2681:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
2682:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     row_ind = i;
2683:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     row_sig_max = CapSense_1_sensorSignal[i];
2684:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
2685:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
2686:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2687:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if((col_sig_max >= CapSense_1_fingerThreshold[widget]) && \
2688:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                (row_sig_max >= CapSense_1_fingerThreshold[widget+1u]))
2689:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
2690:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 pos[0u] = col_ind - CapSense_1_rawDataIndex[widget];
2691:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 pos[1u] = row_ind - CapSense_1_rawDataIndex[widget+1u];
2692:Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 retVal = 1u;
2693:Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
2694:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
2695:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return (retVal);
2696:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
2697:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2698:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* (0u != (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT)) */
2699:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2700:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
2701:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_GetWidgetNumber
2702:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
2703:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2704:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
2705:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API returns the widget number for the sensor.
2706:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2707:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
2708:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor: sensor index. The value of index can be
2709:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  from 0 to (CapSense_1_TOTAL_SENSOR_COUNT-1).
2710:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2711:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
2712:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API returns the widget number for the sensor.
2713:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2714:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
2715:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_widgetNumber[]  - stores widget numbers.
2716:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2717:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
2718:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
2719:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2720:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint32 CapSense_1_GetWidgetNumber(uint32 sensor)
2722:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 1992              		.loc 1 2722 0
 1993              		.cfi_startproc
 1994 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 84


 1995              		.cfi_def_cfa_offset 8
 1996              		.cfi_offset 7, -8
 1997              		.cfi_offset 14, -4
 1998 0002 82B0     		sub	sp, sp, #8
 1999              		.cfi_def_cfa_offset 16
 2000 0004 00AF     		add	r7, sp, #0
 2001              		.cfi_def_cfa_register 7
 2002 0006 7860     		str	r0, [r7, #4]
2723:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     return((uint32)CapSense_1_widgetNumber[sensor]);
 2003              		.loc 1 2723 0
 2004 0008 034A     		ldr	r2, .L129
 2005 000a 7B68     		ldr	r3, [r7, #4]
 2006 000c D318     		add	r3, r2, r3
 2007 000e 1B78     		ldrb	r3, [r3]
2724:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 2008              		.loc 1 2724 0
 2009 0010 181C     		mov	r0, r3
 2010 0012 BD46     		mov	sp, r7
 2011 0014 02B0     		add	sp, sp, #8
 2012              		@ sp needed
 2013 0016 80BD     		pop	{r7, pc}
 2014              	.L130:
 2015              		.align	2
 2016              	.L129:
 2017 0018 00000000 		.word	CapSense_1_widgetNumber
 2018              		.cfi_endproc
 2019              	.LFE64:
 2020              		.size	CapSense_1_GetWidgetNumber, .-CapSense_1_GetWidgetNumber
 2021              		.section	.text.CapSense_1_GetLowBaselineReset,"ax",%progbits
 2022              		.align	2
 2023              		.global	CapSense_1_GetLowBaselineReset
 2024              		.code	16
 2025              		.thumb_func
 2026              		.type	CapSense_1_GetLowBaselineReset, %function
 2027              	CapSense_1_GetLowBaselineReset:
 2028              	.LFB65:
2725:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2726:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
2727:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_GetLowBaselineReset
2728:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
2729:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2730:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
2731:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2732:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2733:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
2734:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor: sensor index. The value of index can be
2735:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  from 0 to (CapSense_1_TOTAL_SENSOR_COUNT-1).
2736:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2737:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
2738:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  low baseline reset threshold value a sensor.
2739:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2740:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
2741:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_lowBaselineReset[]  - stores low baseline reset values.
2742:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2743:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
2744:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
2745:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 85


2746:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
2747:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_GetLowBaselineReset(uint32 sensor)
2748:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 2029              		.loc 1 2748 0
 2030              		.cfi_startproc
 2031 0000 80B5     		push	{r7, lr}
 2032              		.cfi_def_cfa_offset 8
 2033              		.cfi_offset 7, -8
 2034              		.cfi_offset 14, -4
 2035 0002 82B0     		sub	sp, sp, #8
 2036              		.cfi_def_cfa_offset 16
 2037 0004 00AF     		add	r7, sp, #0
 2038              		.cfi_def_cfa_register 7
 2039 0006 7860     		str	r0, [r7, #4]
2749:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     return(CapSense_1_lowBaselineReset[sensor]);
 2040              		.loc 1 2749 0
 2041 0008 034A     		ldr	r2, .L133
 2042 000a 7B68     		ldr	r3, [r7, #4]
 2043 000c D318     		add	r3, r2, r3
 2044 000e 1B78     		ldrb	r3, [r3]
2750:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 2045              		.loc 1 2750 0
 2046 0010 181C     		mov	r0, r3
 2047 0012 BD46     		mov	sp, r7
 2048 0014 02B0     		add	sp, sp, #8
 2049              		@ sp needed
 2050 0016 80BD     		pop	{r7, pc}
 2051              	.L134:
 2052              		.align	2
 2053              	.L133:
 2054 0018 00000000 		.word	CapSense_1_lowBaselineReset
 2055              		.cfi_endproc
 2056              	.LFE65:
 2057              		.size	CapSense_1_GetLowBaselineReset, .-CapSense_1_GetLowBaselineReset
 2058              		.section	.text.CapSense_1_GetDebounce,"ax",%progbits
 2059              		.align	2
 2060              		.global	CapSense_1_GetDebounce
 2061              		.code	16
 2062              		.thumb_func
 2063              		.type	CapSense_1_GetDebounce, %function
 2064              	CapSense_1_GetDebounce:
 2065              	.LFB66:
2751:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2752:Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
2753:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_GetDebounce
2754:Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
2755:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2756:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
2757:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API returns a debounce value.
2758:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2759:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
2760:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor: sensor index. The value of index can be
2761:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  from 0 to (CapSense_1_TOTAL_SENSOR_COUNT-1).
2762:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2763:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
2764:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Debounce value
2765:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 86


2766:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
2767:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_debounce[]  - stores the debounce value.
2768:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2769:Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
2770:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
2771:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2772:Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
2773:Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_GetDebounce(uint32 widget)
2774:Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 2066              		.loc 1 2774 0
 2067              		.cfi_startproc
 2068 0000 80B5     		push	{r7, lr}
 2069              		.cfi_def_cfa_offset 8
 2070              		.cfi_offset 7, -8
 2071              		.cfi_offset 14, -4
 2072 0002 82B0     		sub	sp, sp, #8
 2073              		.cfi_def_cfa_offset 16
 2074 0004 00AF     		add	r7, sp, #0
 2075              		.cfi_def_cfa_register 7
 2076 0006 7860     		str	r0, [r7, #4]
2775:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     return(CapSense_1_debounce[widget]);
 2077              		.loc 1 2775 0
 2078 0008 034A     		ldr	r2, .L137
 2079 000a 7B68     		ldr	r3, [r7, #4]
 2080 000c D318     		add	r3, r2, r3
 2081 000e 1B78     		ldrb	r3, [r3]
2776:Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 2082              		.loc 1 2776 0
 2083 0010 181C     		mov	r0, r3
 2084 0012 BD46     		mov	sp, r7
 2085 0014 02B0     		add	sp, sp, #8
 2086              		@ sp needed
 2087 0016 80BD     		pop	{r7, pc}
 2088              	.L138:
 2089              		.align	2
 2090              	.L137:
 2091 0018 00000000 		.word	CapSense_1_debounce
 2092              		.cfi_endproc
 2093              	.LFE66:
 2094              		.size	CapSense_1_GetDebounce, .-CapSense_1_GetDebounce
 2095              		.section	.text.CapSense_1_EnableRawDataFilters,"ax",%progbits
 2096              		.align	2
 2097              		.global	CapSense_1_EnableRawDataFilters
 2098              		.code	16
 2099              		.thumb_func
 2100              		.type	CapSense_1_EnableRawDataFilters, %function
 2101              	CapSense_1_EnableRawDataFilters:
 2102              	.LFB67:
2777:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2778:Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if (CapSense_1_RAW_FILTER_MASK != 0u)
2779:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
2780:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_EnableRawDataFilters
2781:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
2782:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2783:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
2784:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2785:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 87


2786:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
2787:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
2788:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2789:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
2790:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
2791:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2792:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Global Variables:
2793:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  CapSense_1_enableRawFilters defines if the filters are enabled or not.
2794:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2795:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
2796:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
2797:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2798:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
2799:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     void CapSense_1_EnableRawDataFilters(void)
2800:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 2103              		.loc 1 2800 0
 2104              		.cfi_startproc
 2105 0000 80B5     		push	{r7, lr}
 2106              		.cfi_def_cfa_offset 8
 2107              		.cfi_offset 7, -8
 2108              		.cfi_offset 14, -4
 2109 0002 00AF     		add	r7, sp, #0
 2110              		.cfi_def_cfa_register 7
2801:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_enableRawFilters = CapSense_1_RAW_FILTERS_ENABLED;
 2111              		.loc 1 2801 0
 2112 0004 024B     		ldr	r3, .L140
 2113 0006 0122     		mov	r2, #1
 2114 0008 1A70     		strb	r2, [r3]
2802:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 2115              		.loc 1 2802 0
 2116 000a BD46     		mov	sp, r7
 2117              		@ sp needed
 2118 000c 80BD     		pop	{r7, pc}
 2119              	.L141:
 2120 000e C046     		.align	2
 2121              	.L140:
 2122 0010 00000000 		.word	CapSense_1_enableRawFilters
 2123              		.cfi_endproc
 2124              	.LFE67:
 2125              		.size	CapSense_1_EnableRawDataFilters, .-CapSense_1_EnableRawDataFilters
 2126              		.section	.text.CapSense_1_DisableRawDataFilters,"ax",%progbits
 2127              		.align	2
 2128              		.global	CapSense_1_DisableRawDataFilters
 2129              		.code	16
 2130              		.thumb_func
 2131              		.type	CapSense_1_DisableRawDataFilters, %function
 2132              	CapSense_1_DisableRawDataFilters:
 2133              	.LFB68:
2803:Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2804:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
2805:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_DisableRawDataFilters
2806:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
2807:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2808:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
2809:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2810:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2811:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 88


2812:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
2813:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2814:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
2815:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
2816:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2817:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Global Variables:
2818:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  CapSense_1_enableRawFilters defines if the filters are enabled or not.
2819:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2820:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
2821:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  None
2822:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2823:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
2824:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     void CapSense_1_DisableRawDataFilters(void)
2825:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 2134              		.loc 1 2825 0
 2135              		.cfi_startproc
 2136 0000 80B5     		push	{r7, lr}
 2137              		.cfi_def_cfa_offset 8
 2138              		.cfi_offset 7, -8
 2139              		.cfi_offset 14, -4
 2140 0002 00AF     		add	r7, sp, #0
 2141              		.cfi_def_cfa_register 7
2826:Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_enableRawFilters = CapSense_1_RAW_FILTERS_DISABLED;
 2142              		.loc 1 2826 0
 2143 0004 024B     		ldr	r3, .L143
 2144 0006 0022     		mov	r2, #0
 2145 0008 1A70     		strb	r2, [r3]
2827:Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 2146              		.loc 1 2827 0
 2147 000a BD46     		mov	sp, r7
 2148              		@ sp needed
 2149 000c 80BD     		pop	{r7, pc}
 2150              	.L144:
 2151 000e C046     		.align	2
 2152              	.L143:
 2153 0010 00000000 		.word	CapSense_1_enableRawFilters
 2154              		.cfi_endproc
 2155              	.LFE68:
 2156              		.size	CapSense_1_DisableRawDataFilters, .-CapSense_1_DisableRawDataFilters
 2157              		.text
 2158              	.Letext0:
 2159              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2160              		.file 3 "Generated_Source\\PSoC4\\CapSense_1_PVT.h"
 2161              		.section	.debug_info,"",%progbits
 2162              	.Ldebug_info0:
 2163 0000 880B0000 		.4byte	0xb88
 2164 0004 0400     		.2byte	0x4
 2165 0006 00000000 		.4byte	.Ldebug_abbrev0
 2166 000a 04       		.byte	0x4
 2167 000b 01       		.uleb128 0x1
 2168 000c 60090000 		.4byte	.LASF121
 2169 0010 01       		.byte	0x1
 2170 0011 F8080000 		.4byte	.LASF122
 2171 0015 44000000 		.4byte	.LASF123
 2172 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2173 001d 00000000 		.4byte	0
 2174 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 89


 2175 0025 02       		.uleb128 0x2
 2176 0026 01       		.byte	0x1
 2177 0027 06       		.byte	0x6
 2178 0028 AA010000 		.4byte	.LASF0
 2179 002c 02       		.uleb128 0x2
 2180 002d 01       		.byte	0x1
 2181 002e 08       		.byte	0x8
 2182 002f 57070000 		.4byte	.LASF1
 2183 0033 02       		.uleb128 0x2
 2184 0034 02       		.byte	0x2
 2185 0035 05       		.byte	0x5
 2186 0036 AB070000 		.4byte	.LASF2
 2187 003a 02       		.uleb128 0x2
 2188 003b 02       		.byte	0x2
 2189 003c 07       		.byte	0x7
 2190 003d 95030000 		.4byte	.LASF3
 2191 0041 02       		.uleb128 0x2
 2192 0042 04       		.byte	0x4
 2193 0043 05       		.byte	0x5
 2194 0044 E6010000 		.4byte	.LASF4
 2195 0048 02       		.uleb128 0x2
 2196 0049 04       		.byte	0x4
 2197 004a 07       		.byte	0x7
 2198 004b 1A030000 		.4byte	.LASF5
 2199 004f 02       		.uleb128 0x2
 2200 0050 08       		.byte	0x8
 2201 0051 05       		.byte	0x5
 2202 0052 9C010000 		.4byte	.LASF6
 2203 0056 02       		.uleb128 0x2
 2204 0057 08       		.byte	0x8
 2205 0058 07       		.byte	0x7
 2206 0059 D3000000 		.4byte	.LASF7
 2207 005d 03       		.uleb128 0x3
 2208 005e 04       		.byte	0x4
 2209 005f 05       		.byte	0x5
 2210 0060 696E7400 		.ascii	"int\000"
 2211 0064 02       		.uleb128 0x2
 2212 0065 04       		.byte	0x4
 2213 0066 07       		.byte	0x7
 2214 0067 E0020000 		.4byte	.LASF8
 2215 006b 04       		.uleb128 0x4
 2216 006c 08020000 		.4byte	.LASF9
 2217 0070 02       		.byte	0x2
 2218 0071 B901     		.2byte	0x1b9
 2219 0073 2C000000 		.4byte	0x2c
 2220 0077 04       		.uleb128 0x4
 2221 0078 00000000 		.4byte	.LASF10
 2222 007c 02       		.byte	0x2
 2223 007d BA01     		.2byte	0x1ba
 2224 007f 3A000000 		.4byte	0x3a
 2225 0083 04       		.uleb128 0x4
 2226 0084 15020000 		.4byte	.LASF11
 2227 0088 02       		.byte	0x2
 2228 0089 BB01     		.2byte	0x1bb
 2229 008b 48000000 		.4byte	0x48
 2230 008f 02       		.uleb128 0x2
 2231 0090 04       		.byte	0x4
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 90


 2232 0091 04       		.byte	0x4
 2233 0092 2A060000 		.4byte	.LASF12
 2234 0096 02       		.uleb128 0x2
 2235 0097 08       		.byte	0x8
 2236 0098 04       		.byte	0x4
 2237 0099 0E020000 		.4byte	.LASF13
 2238 009d 02       		.uleb128 0x2
 2239 009e 01       		.byte	0x1
 2240 009f 08       		.byte	0x8
 2241 00a0 8F080000 		.4byte	.LASF14
 2242 00a4 02       		.uleb128 0x2
 2243 00a5 04       		.byte	0x4
 2244 00a6 07       		.byte	0x7
 2245 00a7 0B050000 		.4byte	.LASF15
 2246 00ab 05       		.uleb128 0x5
 2247 00ac 5C       		.byte	0x5c
 2248 00ad 03       		.byte	0x3
 2249 00ae 2F       		.byte	0x2f
 2250 00af C8010000 		.4byte	0x1c8
 2251 00b3 06       		.uleb128 0x6
 2252 00b4 66050000 		.4byte	.LASF16
 2253 00b8 03       		.byte	0x3
 2254 00b9 31       		.byte	0x31
 2255 00ba C8010000 		.4byte	0x1c8
 2256 00be 00       		.byte	0
 2257 00bf 06       		.uleb128 0x6
 2258 00c0 75050000 		.4byte	.LASF17
 2259 00c4 03       		.byte	0x3
 2260 00c5 32       		.byte	0x32
 2261 00c6 C8010000 		.4byte	0x1c8
 2262 00ca 04       		.byte	0x4
 2263 00cb 06       		.uleb128 0x6
 2264 00cc A8030000 		.4byte	.LASF18
 2265 00d0 03       		.byte	0x3
 2266 00d1 33       		.byte	0x33
 2267 00d2 C8010000 		.4byte	0x1c8
 2268 00d6 08       		.byte	0x8
 2269 00d7 06       		.uleb128 0x6
 2270 00d8 72040000 		.4byte	.LASF19
 2271 00dc 03       		.byte	0x3
 2272 00dd 34       		.byte	0x34
 2273 00de C8010000 		.4byte	0x1c8
 2274 00e2 0C       		.byte	0xc
 2275 00e3 06       		.uleb128 0x6
 2276 00e4 BC070000 		.4byte	.LASF20
 2277 00e8 03       		.byte	0x3
 2278 00e9 35       		.byte	0x35
 2279 00ea C8010000 		.4byte	0x1c8
 2280 00ee 10       		.byte	0x10
 2281 00ef 06       		.uleb128 0x6
 2282 00f0 CF010000 		.4byte	.LASF21
 2283 00f4 03       		.byte	0x3
 2284 00f5 36       		.byte	0x36
 2285 00f6 CE010000 		.4byte	0x1ce
 2286 00fa 14       		.byte	0x14
 2287 00fb 06       		.uleb128 0x6
 2288 00fc 2C030000 		.4byte	.LASF22
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 91


 2289 0100 03       		.byte	0x3
 2290 0101 37       		.byte	0x37
 2291 0102 D9010000 		.4byte	0x1d9
 2292 0106 18       		.byte	0x18
 2293 0107 06       		.uleb128 0x6
 2294 0108 E3040000 		.4byte	.LASF23
 2295 010c 03       		.byte	0x3
 2296 010d 38       		.byte	0x38
 2297 010e C8010000 		.4byte	0x1c8
 2298 0112 1C       		.byte	0x1c
 2299 0113 06       		.uleb128 0x6
 2300 0114 94080000 		.4byte	.LASF24
 2301 0118 03       		.byte	0x3
 2302 0119 39       		.byte	0x39
 2303 011a C8010000 		.4byte	0x1c8
 2304 011e 20       		.byte	0x20
 2305 011f 06       		.uleb128 0x6
 2306 0120 8E060000 		.4byte	.LASF25
 2307 0124 03       		.byte	0x3
 2308 0125 3A       		.byte	0x3a
 2309 0126 C8010000 		.4byte	0x1c8
 2310 012a 24       		.byte	0x24
 2311 012b 06       		.uleb128 0x6
 2312 012c 7F040000 		.4byte	.LASF26
 2313 0130 03       		.byte	0x3
 2314 0131 3B       		.byte	0x3b
 2315 0132 DF010000 		.4byte	0x1df
 2316 0136 28       		.byte	0x28
 2317 0137 06       		.uleb128 0x6
 2318 0138 ED020000 		.4byte	.LASF27
 2319 013c 03       		.byte	0x3
 2320 013d 3C       		.byte	0x3c
 2321 013e DF010000 		.4byte	0x1df
 2322 0142 2C       		.byte	0x2c
 2323 0143 06       		.uleb128 0x6
 2324 0144 63080000 		.4byte	.LASF28
 2325 0148 03       		.byte	0x3
 2326 0149 3D       		.byte	0x3d
 2327 014a DF010000 		.4byte	0x1df
 2328 014e 30       		.byte	0x30
 2329 014f 06       		.uleb128 0x6
 2330 0150 48080000 		.4byte	.LASF29
 2331 0154 03       		.byte	0x3
 2332 0155 3E       		.byte	0x3e
 2333 0156 C8010000 		.4byte	0x1c8
 2334 015a 34       		.byte	0x34
 2335 015b 06       		.uleb128 0x6
 2336 015c EB080000 		.4byte	.LASF30
 2337 0160 03       		.byte	0x3
 2338 0161 3F       		.byte	0x3f
 2339 0162 C8010000 		.4byte	0x1c8
 2340 0166 38       		.byte	0x38
 2341 0167 06       		.uleb128 0x6
 2342 0168 ED060000 		.4byte	.LASF31
 2343 016c 03       		.byte	0x3
 2344 016d 40       		.byte	0x40
 2345 016e CE010000 		.4byte	0x1ce
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 92


 2346 0172 3C       		.byte	0x3c
 2347 0173 06       		.uleb128 0x6
 2348 0174 4F0A0000 		.4byte	.LASF32
 2349 0178 03       		.byte	0x3
 2350 0179 41       		.byte	0x41
 2351 017a CE010000 		.4byte	0x1ce
 2352 017e 40       		.byte	0x40
 2353 017f 06       		.uleb128 0x6
 2354 0180 BF010000 		.4byte	.LASF33
 2355 0184 03       		.byte	0x3
 2356 0185 42       		.byte	0x42
 2357 0186 CE010000 		.4byte	0x1ce
 2358 018a 44       		.byte	0x44
 2359 018b 06       		.uleb128 0x6
 2360 018c 93000000 		.4byte	.LASF34
 2361 0190 03       		.byte	0x3
 2362 0191 43       		.byte	0x43
 2363 0192 F4010000 		.4byte	0x1f4
 2364 0196 48       		.byte	0x48
 2365 0197 06       		.uleb128 0x6
 2366 0198 E0080000 		.4byte	.LASF35
 2367 019c 03       		.byte	0x3
 2368 019d 44       		.byte	0x44
 2369 019e 05020000 		.4byte	0x205
 2370 01a2 4C       		.byte	0x4c
 2371 01a3 06       		.uleb128 0x6
 2372 01a4 65070000 		.4byte	.LASF36
 2373 01a8 03       		.byte	0x3
 2374 01a9 45       		.byte	0x45
 2375 01aa F4010000 		.4byte	0x1f4
 2376 01ae 50       		.byte	0x50
 2377 01af 06       		.uleb128 0x6
 2378 01b0 3B030000 		.4byte	.LASF37
 2379 01b4 03       		.byte	0x3
 2380 01b5 46       		.byte	0x46
 2381 01b6 1F020000 		.4byte	0x21f
 2382 01ba 54       		.byte	0x54
 2383 01bb 06       		.uleb128 0x6
 2384 01bc 0C0A0000 		.4byte	.LASF38
 2385 01c0 03       		.byte	0x3
 2386 01c1 47       		.byte	0x47
 2387 01c2 3A020000 		.4byte	0x23a
 2388 01c6 58       		.byte	0x58
 2389 01c7 00       		.byte	0
 2390 01c8 07       		.uleb128 0x7
 2391 01c9 04       		.byte	0x4
 2392 01ca 6B000000 		.4byte	0x6b
 2393 01ce 07       		.uleb128 0x7
 2394 01cf 04       		.byte	0x4
 2395 01d0 D4010000 		.4byte	0x1d4
 2396 01d4 08       		.uleb128 0x8
 2397 01d5 6B000000 		.4byte	0x6b
 2398 01d9 07       		.uleb128 0x7
 2399 01da 04       		.byte	0x4
 2400 01db 83000000 		.4byte	0x83
 2401 01df 07       		.uleb128 0x7
 2402 01e0 04       		.byte	0x4
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 93


 2403 01e1 77000000 		.4byte	0x77
 2404 01e5 09       		.uleb128 0x9
 2405 01e6 77000000 		.4byte	0x77
 2406 01ea F4010000 		.4byte	0x1f4
 2407 01ee 0A       		.uleb128 0xa
 2408 01ef 83000000 		.4byte	0x83
 2409 01f3 00       		.byte	0
 2410 01f4 07       		.uleb128 0x7
 2411 01f5 04       		.byte	0x4
 2412 01f6 E5010000 		.4byte	0x1e5
 2413 01fa 0B       		.uleb128 0xb
 2414 01fb 05020000 		.4byte	0x205
 2415 01ff 0A       		.uleb128 0xa
 2416 0200 83000000 		.4byte	0x83
 2417 0204 00       		.byte	0
 2418 0205 07       		.uleb128 0x7
 2419 0206 04       		.byte	0x4
 2420 0207 FA010000 		.4byte	0x1fa
 2421 020b 09       		.uleb128 0x9
 2422 020c 83000000 		.4byte	0x83
 2423 0210 1F020000 		.4byte	0x21f
 2424 0214 0A       		.uleb128 0xa
 2425 0215 CE010000 		.4byte	0x1ce
 2426 0219 0A       		.uleb128 0xa
 2427 021a 83000000 		.4byte	0x83
 2428 021e 00       		.byte	0
 2429 021f 07       		.uleb128 0x7
 2430 0220 04       		.byte	0x4
 2431 0221 0B020000 		.4byte	0x20b
 2432 0225 0B       		.uleb128 0xb
 2433 0226 3A020000 		.4byte	0x23a
 2434 022a 0A       		.uleb128 0xa
 2435 022b C8010000 		.4byte	0x1c8
 2436 022f 0A       		.uleb128 0xa
 2437 0230 83000000 		.4byte	0x83
 2438 0234 0A       		.uleb128 0xa
 2439 0235 83000000 		.4byte	0x83
 2440 0239 00       		.byte	0
 2441 023a 07       		.uleb128 0x7
 2442 023b 04       		.byte	0x4
 2443 023c 25020000 		.4byte	0x225
 2444 0240 0C       		.uleb128 0xc
 2445 0241 E5050000 		.4byte	.LASF39
 2446 0245 03       		.byte	0x3
 2447 0246 48       		.byte	0x48
 2448 0247 AB000000 		.4byte	0xab
 2449 024b 05       		.uleb128 0x5
 2450 024c 0C       		.byte	0xc
 2451 024d 03       		.byte	0x3
 2452 024e 4A       		.byte	0x4a
 2453 024f 9C020000 		.4byte	0x29c
 2454 0253 06       		.uleb128 0x6
 2455 0254 4E090000 		.4byte	.LASF40
 2456 0258 03       		.byte	0x3
 2457 0259 4C       		.byte	0x4c
 2458 025a 6B000000 		.4byte	0x6b
 2459 025e 00       		.byte	0
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 94


 2460 025f 06       		.uleb128 0x6
 2461 0260 640A0000 		.4byte	.LASF41
 2462 0264 03       		.byte	0x3
 2463 0265 4D       		.byte	0x4d
 2464 0266 6B000000 		.4byte	0x6b
 2465 026a 01       		.byte	0x1
 2466 026b 06       		.uleb128 0x6
 2467 026c BF020000 		.4byte	.LASF42
 2468 0270 03       		.byte	0x3
 2469 0271 4E       		.byte	0x4e
 2470 0272 6B000000 		.4byte	0x6b
 2471 0276 02       		.byte	0x2
 2472 0277 06       		.uleb128 0x6
 2473 0278 66020000 		.4byte	.LASF43
 2474 027c 03       		.byte	0x3
 2475 027d 4F       		.byte	0x4f
 2476 027e 77000000 		.4byte	0x77
 2477 0282 04       		.byte	0x4
 2478 0283 06       		.uleb128 0x6
 2479 0284 FD040000 		.4byte	.LASF44
 2480 0288 03       		.byte	0x3
 2481 0289 50       		.byte	0x50
 2482 028a 77000000 		.4byte	0x77
 2483 028e 06       		.byte	0x6
 2484 028f 06       		.uleb128 0x6
 2485 0290 BE030000 		.4byte	.LASF45
 2486 0294 03       		.byte	0x3
 2487 0295 51       		.byte	0x51
 2488 0296 9C020000 		.4byte	0x29c
 2489 029a 08       		.byte	0x8
 2490 029b 00       		.byte	0
 2491 029c 07       		.uleb128 0x7
 2492 029d 04       		.byte	0x4
 2493 029e A2020000 		.4byte	0x2a2
 2494 02a2 08       		.uleb128 0x8
 2495 02a3 40020000 		.4byte	0x240
 2496 02a7 0C       		.uleb128 0xc
 2497 02a8 A7040000 		.4byte	.LASF46
 2498 02ac 03       		.byte	0x3
 2499 02ad 52       		.byte	0x52
 2500 02ae 4B020000 		.4byte	0x24b
 2501 02b2 0D       		.uleb128 0xd
 2502 02b3 BF000000 		.4byte	.LASF47
 2503 02b7 01       		.byte	0x1
 2504 02b8 86       		.byte	0x86
 2505 02b9 00000000 		.4byte	.LFB35
 2506 02bd 84000000 		.4byte	.LFE35-.LFB35
 2507 02c1 01       		.uleb128 0x1
 2508 02c2 9C       		.byte	0x9c
 2509 02c3 E4020000 		.4byte	0x2e4
 2510 02c7 0E       		.uleb128 0xe
 2511 02c8 B7030000 		.4byte	.LASF49
 2512 02cc 01       		.byte	0x1
 2513 02cd 86       		.byte	0x86
 2514 02ce 83000000 		.4byte	0x83
 2515 02d2 02       		.uleb128 0x2
 2516 02d3 91       		.byte	0x91
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 95


 2517 02d4 6C       		.sleb128 -20
 2518 02d5 0F       		.uleb128 0xf
 2519 02d6 B5070000 		.4byte	.LASF51
 2520 02da 01       		.byte	0x1
 2521 02db 8A       		.byte	0x8a
 2522 02dc 6B000000 		.4byte	0x6b
 2523 02e0 02       		.uleb128 0x2
 2524 02e1 91       		.byte	0x91
 2525 02e2 77       		.sleb128 -9
 2526 02e3 00       		.byte	0
 2527 02e4 10       		.uleb128 0x10
 2528 02e5 84050000 		.4byte	.LASF48
 2529 02e9 01       		.byte	0x1
 2530 02ea D2       		.byte	0xd2
 2531 02eb 00000000 		.4byte	.LFB36
 2532 02ef 28000000 		.4byte	.LFE36-.LFB36
 2533 02f3 01       		.uleb128 0x1
 2534 02f4 9C       		.byte	0x9c
 2535 02f5 08030000 		.4byte	0x308
 2536 02f9 0E       		.uleb128 0xe
 2537 02fa B7030000 		.4byte	.LASF49
 2538 02fe 01       		.byte	0x1
 2539 02ff D2       		.byte	0xd2
 2540 0300 83000000 		.4byte	0x83
 2541 0304 02       		.uleb128 0x2
 2542 0305 91       		.byte	0x91
 2543 0306 74       		.sleb128 -12
 2544 0307 00       		.byte	0
 2545 0308 10       		.uleb128 0x10
 2546 0309 9D000000 		.4byte	.LASF50
 2547 030d 01       		.byte	0x1
 2548 030e F7       		.byte	0xf7
 2549 030f 00000000 		.4byte	.LFB37
 2550 0313 26000000 		.4byte	.LFE37-.LFB37
 2551 0317 01       		.uleb128 0x1
 2552 0318 9C       		.byte	0x9c
 2553 0319 2A030000 		.4byte	0x32a
 2554 031d 11       		.uleb128 0x11
 2555 031e 6900     		.ascii	"i\000"
 2556 0320 01       		.byte	0x1
 2557 0321 F9       		.byte	0xf9
 2558 0322 83000000 		.4byte	0x83
 2559 0326 02       		.uleb128 0x2
 2560 0327 91       		.byte	0x91
 2561 0328 74       		.sleb128 -12
 2562 0329 00       		.byte	0
 2563 032a 12       		.uleb128 0x12
 2564 032b 76070000 		.4byte	.LASF52
 2565 032f 01       		.byte	0x1
 2566 0330 1A01     		.2byte	0x11a
 2567 0332 00000000 		.4byte	.LFB38
 2568 0336 50000000 		.4byte	.LFE38-.LFB38
 2569 033a 01       		.uleb128 0x1
 2570 033b 9C       		.byte	0x9c
 2571 033c 5D030000 		.4byte	0x35d
 2572 0340 13       		.uleb128 0x13
 2573 0341 6900     		.ascii	"i\000"
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 96


 2574 0343 01       		.byte	0x1
 2575 0344 1C01     		.2byte	0x11c
 2576 0346 83000000 		.4byte	0x83
 2577 034a 02       		.uleb128 0x2
 2578 034b 91       		.byte	0x91
 2579 034c 74       		.sleb128 -12
 2580 034d 14       		.uleb128 0x14
 2581 034e 38080000 		.4byte	.LASF53
 2582 0352 01       		.byte	0x1
 2583 0353 1D01     		.2byte	0x11d
 2584 0355 83000000 		.4byte	0x83
 2585 0359 02       		.uleb128 0x2
 2586 035a 91       		.byte	0x91
 2587 035b 70       		.sleb128 -16
 2588 035c 00       		.byte	0
 2589 035d 12       		.uleb128 0x12
 2590 035e 69060000 		.4byte	.LASF54
 2591 0362 01       		.byte	0x1
 2592 0363 5B01     		.2byte	0x15b
 2593 0365 00000000 		.4byte	.LFB39
 2594 0369 38020000 		.4byte	.LFE39-.LFB39
 2595 036d 01       		.uleb128 0x1
 2596 036e 9C       		.byte	0x9c
 2597 036f DD030000 		.4byte	0x3dd
 2598 0373 15       		.uleb128 0x15
 2599 0374 B7030000 		.4byte	.LASF49
 2600 0378 01       		.byte	0x1
 2601 0379 5B01     		.2byte	0x15b
 2602 037b 83000000 		.4byte	0x83
 2603 037f 02       		.uleb128 0x2
 2604 0380 91       		.byte	0x91
 2605 0381 5C       		.sleb128 -36
 2606 0382 14       		.uleb128 0x14
 2607 0383 6D040000 		.4byte	.LASF55
 2608 0387 01       		.byte	0x1
 2609 0388 5D01     		.2byte	0x15d
 2610 038a 83000000 		.4byte	0x83
 2611 038e 02       		.uleb128 0x2
 2612 038f 91       		.byte	0x91
 2613 0390 60       		.sleb128 -32
 2614 0391 14       		.uleb128 0x14
 2615 0392 21090000 		.4byte	.LASF56
 2616 0396 01       		.byte	0x1
 2617 0397 5E01     		.2byte	0x15e
 2618 0399 83000000 		.4byte	0x83
 2619 039d 02       		.uleb128 0x2
 2620 039e 91       		.byte	0x91
 2621 039f 6C       		.sleb128 -20
 2622 03a0 14       		.uleb128 0x14
 2623 03a1 5C0A0000 		.4byte	.LASF57
 2624 03a5 01       		.byte	0x1
 2625 03a6 5F01     		.2byte	0x15f
 2626 03a8 77000000 		.4byte	0x77
 2627 03ac 02       		.uleb128 0x2
 2628 03ad 91       		.byte	0x91
 2629 03ae 6A       		.sleb128 -22
 2630 03af 14       		.uleb128 0x14
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 97


 2631 03b0 07000000 		.4byte	.LASF58
 2632 03b4 01       		.byte	0x1
 2633 03b5 6001     		.2byte	0x160
 2634 03b7 77000000 		.4byte	0x77
 2635 03bb 02       		.uleb128 0x2
 2636 03bc 91       		.byte	0x91
 2637 03bd 68       		.sleb128 -24
 2638 03be 14       		.uleb128 0x14
 2639 03bf B5070000 		.4byte	.LASF51
 2640 03c3 01       		.byte	0x1
 2641 03c4 6101     		.2byte	0x161
 2642 03c6 6B000000 		.4byte	0x6b
 2643 03ca 02       		.uleb128 0x2
 2644 03cb 91       		.byte	0x91
 2645 03cc 67       		.sleb128 -25
 2646 03cd 14       		.uleb128 0x14
 2647 03ce 9C070000 		.4byte	.LASF59
 2648 03d2 01       		.byte	0x1
 2649 03d3 6201     		.2byte	0x162
 2650 03d5 6B000000 		.4byte	0x6b
 2651 03d9 02       		.uleb128 0x2
 2652 03da 91       		.byte	0x91
 2653 03db 66       		.sleb128 -26
 2654 03dc 00       		.byte	0
 2655 03dd 12       		.uleb128 0x12
 2656 03de C6070000 		.4byte	.LASF60
 2657 03e2 01       		.byte	0x1
 2658 03e3 1B02     		.2byte	0x21b
 2659 03e5 00000000 		.4byte	.LFB40
 2660 03e9 1E000000 		.4byte	.LFE40-.LFB40
 2661 03ed 01       		.uleb128 0x1
 2662 03ee 9C       		.byte	0x9c
 2663 03ef 03040000 		.4byte	0x403
 2664 03f3 15       		.uleb128 0x15
 2665 03f4 B7030000 		.4byte	.LASF49
 2666 03f8 01       		.byte	0x1
 2667 03f9 1B02     		.2byte	0x21b
 2668 03fb 83000000 		.4byte	0x83
 2669 03ff 02       		.uleb128 0x2
 2670 0400 91       		.byte	0x91
 2671 0401 74       		.sleb128 -12
 2672 0402 00       		.byte	0
 2673 0403 12       		.uleb128 0x12
 2674 0404 C3050000 		.4byte	.LASF61
 2675 0408 01       		.byte	0x1
 2676 0409 5102     		.2byte	0x251
 2677 040b 00000000 		.4byte	.LFB41
 2678 040f 40000000 		.4byte	.LFE41-.LFB41
 2679 0413 01       		.uleb128 0x1
 2680 0414 9C       		.byte	0x9c
 2681 0415 36040000 		.4byte	0x436
 2682 0419 13       		.uleb128 0x13
 2683 041a 6900     		.ascii	"i\000"
 2684 041c 01       		.byte	0x1
 2685 041d 5302     		.2byte	0x253
 2686 041f 83000000 		.4byte	0x83
 2687 0423 02       		.uleb128 0x2
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 98


 2688 0424 91       		.byte	0x91
 2689 0425 74       		.sleb128 -12
 2690 0426 14       		.uleb128 0x14
 2691 0427 38080000 		.4byte	.LASF53
 2692 042b 01       		.byte	0x1
 2693 042c 5402     		.2byte	0x254
 2694 042e 83000000 		.4byte	0x83
 2695 0432 02       		.uleb128 0x2
 2696 0433 91       		.byte	0x91
 2697 0434 70       		.sleb128 -16
 2698 0435 00       		.byte	0
 2699 0436 12       		.uleb128 0x12
 2700 0437 46020000 		.4byte	.LASF62
 2701 043b 01       		.byte	0x1
 2702 043c 7E02     		.2byte	0x27e
 2703 043e 00000000 		.4byte	.LFB42
 2704 0442 58000000 		.4byte	.LFE42-.LFB42
 2705 0446 01       		.uleb128 0x1
 2706 0447 9C       		.byte	0x9c
 2707 0448 A5040000 		.4byte	0x4a5
 2708 044c 15       		.uleb128 0x15
 2709 044d B5070000 		.4byte	.LASF51
 2710 0451 01       		.byte	0x1
 2711 0452 7E02     		.2byte	0x27e
 2712 0454 83000000 		.4byte	0x83
 2713 0458 02       		.uleb128 0x2
 2714 0459 91       		.byte	0x91
 2715 045a 5C       		.sleb128 -36
 2716 045b 14       		.uleb128 0x14
 2717 045c 52080000 		.4byte	.LASF63
 2718 0460 01       		.byte	0x1
 2719 0461 8002     		.2byte	0x280
 2720 0463 83000000 		.4byte	0x83
 2721 0467 02       		.uleb128 0x2
 2722 0468 91       		.byte	0x91
 2723 0469 70       		.sleb128 -16
 2724 046a 14       		.uleb128 0x14
 2725 046b A9080000 		.4byte	.LASF64
 2726 046f 01       		.byte	0x1
 2727 0470 8102     		.2byte	0x281
 2728 0472 83000000 		.4byte	0x83
 2729 0476 02       		.uleb128 0x2
 2730 0477 91       		.byte	0x91
 2731 0478 6C       		.sleb128 -20
 2732 0479 14       		.uleb128 0x14
 2733 047a D5020000 		.4byte	.LASF65
 2734 047e 01       		.byte	0x1
 2735 047f 8202     		.2byte	0x282
 2736 0481 83000000 		.4byte	0x83
 2737 0485 02       		.uleb128 0x2
 2738 0486 91       		.byte	0x91
 2739 0487 68       		.sleb128 -24
 2740 0488 13       		.uleb128 0x13
 2741 0489 6900     		.ascii	"i\000"
 2742 048b 01       		.byte	0x1
 2743 048c 8302     		.2byte	0x283
 2744 048e 83000000 		.4byte	0x83
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 99


 2745 0492 02       		.uleb128 0x2
 2746 0493 91       		.byte	0x91
 2747 0494 74       		.sleb128 -12
 2748 0495 14       		.uleb128 0x14
 2749 0496 38080000 		.4byte	.LASF53
 2750 049a 01       		.byte	0x1
 2751 049b 8402     		.2byte	0x284
 2752 049d 83000000 		.4byte	0x83
 2753 04a1 02       		.uleb128 0x2
 2754 04a2 91       		.byte	0x91
 2755 04a3 64       		.sleb128 -28
 2756 04a4 00       		.byte	0
 2757 04a5 16       		.uleb128 0x16
 2758 04a6 33090000 		.4byte	.LASF68
 2759 04aa 01       		.byte	0x1
 2760 04ab AF02     		.2byte	0x2af
 2761 04ad 77000000 		.4byte	0x77
 2762 04b1 00000000 		.4byte	.LFB43
 2763 04b5 1C000000 		.4byte	.LFE43-.LFB43
 2764 04b9 01       		.uleb128 0x1
 2765 04ba 9C       		.byte	0x9c
 2766 04bb CF040000 		.4byte	0x4cf
 2767 04bf 15       		.uleb128 0x15
 2768 04c0 B7030000 		.4byte	.LASF49
 2769 04c4 01       		.byte	0x1
 2770 04c5 AF02     		.2byte	0x2af
 2771 04c7 83000000 		.4byte	0x83
 2772 04cb 02       		.uleb128 0x2
 2773 04cc 91       		.byte	0x91
 2774 04cd 74       		.sleb128 -12
 2775 04ce 00       		.byte	0
 2776 04cf 17       		.uleb128 0x17
 2777 04d0 8C040000 		.4byte	.LASF66
 2778 04d4 01       		.byte	0x1
 2779 04d5 CA02     		.2byte	0x2ca
 2780 04d7 00000000 		.4byte	.LFB44
 2781 04db 24000000 		.4byte	.LFE44-.LFB44
 2782 04df 01       		.uleb128 0x1
 2783 04e0 9C       		.byte	0x9c
 2784 04e1 04050000 		.4byte	0x504
 2785 04e5 15       		.uleb128 0x15
 2786 04e6 B7030000 		.4byte	.LASF49
 2787 04ea 01       		.byte	0x1
 2788 04eb CA02     		.2byte	0x2ca
 2789 04ed 83000000 		.4byte	0x83
 2790 04f1 02       		.uleb128 0x2
 2791 04f2 91       		.byte	0x91
 2792 04f3 74       		.sleb128 -12
 2793 04f4 15       		.uleb128 0x15
 2794 04f5 7E030000 		.4byte	.LASF67
 2795 04f9 01       		.byte	0x1
 2796 04fa CA02     		.2byte	0x2ca
 2797 04fc 77000000 		.4byte	0x77
 2798 0500 02       		.uleb128 0x2
 2799 0501 91       		.byte	0x91
 2800 0502 72       		.sleb128 -14
 2801 0503 00       		.byte	0
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 100


 2802 0504 16       		.uleb128 0x16
 2803 0505 4A050000 		.4byte	.LASF69
 2804 0509 01       		.byte	0x1
 2805 050a E502     		.2byte	0x2e5
 2806 050c 6B000000 		.4byte	0x6b
 2807 0510 00000000 		.4byte	.LFB45
 2808 0514 1C000000 		.4byte	.LFE45-.LFB45
 2809 0518 01       		.uleb128 0x1
 2810 0519 9C       		.byte	0x9c
 2811 051a 2E050000 		.4byte	0x52e
 2812 051e 15       		.uleb128 0x15
 2813 051f B7030000 		.4byte	.LASF49
 2814 0523 01       		.byte	0x1
 2815 0524 E502     		.2byte	0x2e5
 2816 0526 83000000 		.4byte	0x83
 2817 052a 02       		.uleb128 0x2
 2818 052b 91       		.byte	0x91
 2819 052c 74       		.sleb128 -12
 2820 052d 00       		.byte	0
 2821 052e 17       		.uleb128 0x17
 2822 052f 62030000 		.4byte	.LASF70
 2823 0533 01       		.byte	0x1
 2824 0534 0003     		.2byte	0x300
 2825 0536 00000000 		.4byte	.LFB46
 2826 053a 24000000 		.4byte	.LFE46-.LFB46
 2827 053e 01       		.uleb128 0x1
 2828 053f 9C       		.byte	0x9c
 2829 0540 63050000 		.4byte	0x563
 2830 0544 15       		.uleb128 0x15
 2831 0545 B7030000 		.4byte	.LASF49
 2832 0549 01       		.byte	0x1
 2833 054a 0003     		.2byte	0x300
 2834 054c 83000000 		.4byte	0x83
 2835 0550 02       		.uleb128 0x2
 2836 0551 91       		.byte	0x91
 2837 0552 74       		.sleb128 -12
 2838 0553 15       		.uleb128 0x15
 2839 0554 CF020000 		.4byte	.LASF71
 2840 0558 01       		.byte	0x1
 2841 0559 0003     		.2byte	0x300
 2842 055b 6B000000 		.4byte	0x6b
 2843 055f 02       		.uleb128 0x2
 2844 0560 91       		.byte	0x91
 2845 0561 73       		.sleb128 -13
 2846 0562 00       		.byte	0
 2847 0563 16       		.uleb128 0x16
 2848 0564 EE090000 		.4byte	.LASF72
 2849 0568 01       		.byte	0x1
 2850 0569 1B03     		.2byte	0x31b
 2851 056b 6B000000 		.4byte	0x6b
 2852 056f 00000000 		.4byte	.LFB47
 2853 0573 1C000000 		.4byte	.LFE47-.LFB47
 2854 0577 01       		.uleb128 0x1
 2855 0578 9C       		.byte	0x9c
 2856 0579 8D050000 		.4byte	0x58d
 2857 057d 15       		.uleb128 0x15
 2858 057e B5070000 		.4byte	.LASF51
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 101


 2859 0582 01       		.byte	0x1
 2860 0583 1B03     		.2byte	0x31b
 2861 0585 83000000 		.4byte	0x83
 2862 0589 02       		.uleb128 0x2
 2863 058a 91       		.byte	0x91
 2864 058b 74       		.sleb128 -12
 2865 058c 00       		.byte	0
 2866 058d 16       		.uleb128 0x16
 2867 058e 30060000 		.4byte	.LASF73
 2868 0592 01       		.byte	0x1
 2869 0593 3603     		.2byte	0x336
 2870 0595 6B000000 		.4byte	0x6b
 2871 0599 00000000 		.4byte	.LFB48
 2872 059d 1C000000 		.4byte	.LFE48-.LFB48
 2873 05a1 01       		.uleb128 0x1
 2874 05a2 9C       		.byte	0x9c
 2875 05a3 B7050000 		.4byte	0x5b7
 2876 05a7 15       		.uleb128 0x15
 2877 05a8 B5070000 		.4byte	.LASF51
 2878 05ac 01       		.byte	0x1
 2879 05ad 3603     		.2byte	0x336
 2880 05af 83000000 		.4byte	0x83
 2881 05b3 02       		.uleb128 0x2
 2882 05b4 91       		.byte	0x91
 2883 05b5 74       		.sleb128 -12
 2884 05b6 00       		.byte	0
 2885 05b7 16       		.uleb128 0x16
 2886 05b8 27020000 		.4byte	.LASF74
 2887 05bc 01       		.byte	0x1
 2888 05bd 5203     		.2byte	0x352
 2889 05bf 6B000000 		.4byte	0x6b
 2890 05c3 00000000 		.4byte	.LFB49
 2891 05c7 1C000000 		.4byte	.LFE49-.LFB49
 2892 05cb 01       		.uleb128 0x1
 2893 05cc 9C       		.byte	0x9c
 2894 05cd E1050000 		.4byte	0x5e1
 2895 05d1 15       		.uleb128 0x15
 2896 05d2 B5070000 		.4byte	.LASF51
 2897 05d6 01       		.byte	0x1
 2898 05d7 5203     		.2byte	0x352
 2899 05d9 83000000 		.4byte	0x83
 2900 05dd 02       		.uleb128 0x2
 2901 05de 91       		.byte	0x91
 2902 05df 74       		.sleb128 -12
 2903 05e0 00       		.byte	0
 2904 05e1 16       		.uleb128 0x16
 2905 05e2 E6030000 		.4byte	.LASF75
 2906 05e6 01       		.byte	0x1
 2907 05e7 6E03     		.2byte	0x36e
 2908 05e9 6B000000 		.4byte	0x6b
 2909 05ed 00000000 		.4byte	.LFB50
 2910 05f1 1C000000 		.4byte	.LFE50-.LFB50
 2911 05f5 01       		.uleb128 0x1
 2912 05f6 9C       		.byte	0x9c
 2913 05f7 0B060000 		.4byte	0x60b
 2914 05fb 15       		.uleb128 0x15
 2915 05fc B5070000 		.4byte	.LASF51
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 102


 2916 0600 01       		.byte	0x1
 2917 0601 6E03     		.2byte	0x36e
 2918 0603 83000000 		.4byte	0x83
 2919 0607 02       		.uleb128 0x2
 2920 0608 91       		.byte	0x91
 2921 0609 74       		.sleb128 -12
 2922 060a 00       		.byte	0
 2923 060b 17       		.uleb128 0x17
 2924 060c 1B0A0000 		.4byte	.LASF76
 2925 0610 01       		.byte	0x1
 2926 0611 8F03     		.2byte	0x38f
 2927 0613 00000000 		.4byte	.LFB51
 2928 0617 24000000 		.4byte	.LFE51-.LFB51
 2929 061b 01       		.uleb128 0x1
 2930 061c 9C       		.byte	0x9c
 2931 061d 40060000 		.4byte	0x640
 2932 0621 15       		.uleb128 0x15
 2933 0622 B5070000 		.4byte	.LASF51
 2934 0626 01       		.byte	0x1
 2935 0627 8F03     		.2byte	0x38f
 2936 0629 83000000 		.4byte	0x83
 2937 062d 02       		.uleb128 0x2
 2938 062e 91       		.byte	0x91
 2939 062f 74       		.sleb128 -12
 2940 0630 15       		.uleb128 0x15
 2941 0631 CF020000 		.4byte	.LASF71
 2942 0635 01       		.byte	0x1
 2943 0636 8F03     		.2byte	0x38f
 2944 0638 6B000000 		.4byte	0x6b
 2945 063c 02       		.uleb128 0x2
 2946 063d 91       		.byte	0x91
 2947 063e 73       		.sleb128 -13
 2948 063f 00       		.byte	0
 2949 0640 17       		.uleb128 0x17
 2950 0641 17000000 		.4byte	.LASF77
 2951 0645 01       		.byte	0x1
 2952 0646 AB03     		.2byte	0x3ab
 2953 0648 00000000 		.4byte	.LFB52
 2954 064c 24000000 		.4byte	.LFE52-.LFB52
 2955 0650 01       		.uleb128 0x1
 2956 0651 9C       		.byte	0x9c
 2957 0652 75060000 		.4byte	0x675
 2958 0656 15       		.uleb128 0x15
 2959 0657 B5070000 		.4byte	.LASF51
 2960 065b 01       		.byte	0x1
 2961 065c AB03     		.2byte	0x3ab
 2962 065e 83000000 		.4byte	0x83
 2963 0662 02       		.uleb128 0x2
 2964 0663 91       		.byte	0x91
 2965 0664 74       		.sleb128 -12
 2966 0665 15       		.uleb128 0x15
 2967 0666 CF020000 		.4byte	.LASF71
 2968 066a 01       		.byte	0x1
 2969 066b AB03     		.2byte	0x3ab
 2970 066d 6B000000 		.4byte	0x6b
 2971 0671 02       		.uleb128 0x2
 2972 0672 91       		.byte	0x91
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 103


 2973 0673 73       		.sleb128 -13
 2974 0674 00       		.byte	0
 2975 0675 17       		.uleb128 0x17
 2976 0676 9E060000 		.4byte	.LASF78
 2977 067a 01       		.byte	0x1
 2978 067b C703     		.2byte	0x3c7
 2979 067d 00000000 		.4byte	.LFB53
 2980 0681 24000000 		.4byte	.LFE53-.LFB53
 2981 0685 01       		.uleb128 0x1
 2982 0686 9C       		.byte	0x9c
 2983 0687 AA060000 		.4byte	0x6aa
 2984 068b 15       		.uleb128 0x15
 2985 068c B5070000 		.4byte	.LASF51
 2986 0690 01       		.byte	0x1
 2987 0691 C703     		.2byte	0x3c7
 2988 0693 83000000 		.4byte	0x83
 2989 0697 02       		.uleb128 0x2
 2990 0698 91       		.byte	0x91
 2991 0699 74       		.sleb128 -12
 2992 069a 15       		.uleb128 0x15
 2993 069b CF020000 		.4byte	.LASF71
 2994 069f 01       		.byte	0x1
 2995 06a0 C703     		.2byte	0x3c7
 2996 06a2 6B000000 		.4byte	0x6b
 2997 06a6 02       		.uleb128 0x2
 2998 06a7 91       		.byte	0x91
 2999 06a8 73       		.sleb128 -13
 3000 06a9 00       		.byte	0
 3001 06aa 17       		.uleb128 0x17
 3002 06ab 0B040000 		.4byte	.LASF79
 3003 06af 01       		.byte	0x1
 3004 06b0 E403     		.2byte	0x3e4
 3005 06b2 00000000 		.4byte	.LFB54
 3006 06b6 24000000 		.4byte	.LFE54-.LFB54
 3007 06ba 01       		.uleb128 0x1
 3008 06bb 9C       		.byte	0x9c
 3009 06bc DF060000 		.4byte	0x6df
 3010 06c0 15       		.uleb128 0x15
 3011 06c1 B5070000 		.4byte	.LASF51
 3012 06c5 01       		.byte	0x1
 3013 06c6 E403     		.2byte	0x3e4
 3014 06c8 83000000 		.4byte	0x83
 3015 06cc 02       		.uleb128 0x2
 3016 06cd 91       		.byte	0x91
 3017 06ce 74       		.sleb128 -12
 3018 06cf 15       		.uleb128 0x15
 3019 06d0 CF020000 		.4byte	.LASF71
 3020 06d4 01       		.byte	0x1
 3021 06d5 E403     		.2byte	0x3e4
 3022 06d7 6B000000 		.4byte	0x6b
 3023 06db 02       		.uleb128 0x2
 3024 06dc 91       		.byte	0x91
 3025 06dd 73       		.sleb128 -13
 3026 06de 00       		.byte	0
 3027 06df 17       		.uleb128 0x17
 3028 06e0 4F010000 		.4byte	.LASF80
 3029 06e4 01       		.byte	0x1
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 104


 3030 06e5 0004     		.2byte	0x400
 3031 06e7 00000000 		.4byte	.LFB55
 3032 06eb 24000000 		.4byte	.LFE55-.LFB55
 3033 06ef 01       		.uleb128 0x1
 3034 06f0 9C       		.byte	0x9c
 3035 06f1 14070000 		.4byte	0x714
 3036 06f5 15       		.uleb128 0x15
 3037 06f6 B5070000 		.4byte	.LASF51
 3038 06fa 01       		.byte	0x1
 3039 06fb 0004     		.2byte	0x400
 3040 06fd 83000000 		.4byte	0x83
 3041 0701 02       		.uleb128 0x2
 3042 0702 91       		.byte	0x91
 3043 0703 74       		.sleb128 -12
 3044 0704 15       		.uleb128 0x15
 3045 0705 CF020000 		.4byte	.LASF71
 3046 0709 01       		.byte	0x1
 3047 070a 0004     		.2byte	0x400
 3048 070c 6B000000 		.4byte	0x6b
 3049 0710 02       		.uleb128 0x2
 3050 0711 91       		.byte	0x91
 3051 0712 73       		.sleb128 -13
 3052 0713 00       		.byte	0
 3053 0714 17       		.uleb128 0x17
 3054 0715 C7030000 		.4byte	.LASF81
 3055 0719 01       		.byte	0x1
 3056 071a 1C04     		.2byte	0x41c
 3057 071c 00000000 		.4byte	.LFB56
 3058 0720 24000000 		.4byte	.LFE56-.LFB56
 3059 0724 01       		.uleb128 0x1
 3060 0725 9C       		.byte	0x9c
 3061 0726 49070000 		.4byte	0x749
 3062 072a 15       		.uleb128 0x15
 3063 072b B7030000 		.4byte	.LASF49
 3064 072f 01       		.byte	0x1
 3065 0730 1C04     		.2byte	0x41c
 3066 0732 83000000 		.4byte	0x83
 3067 0736 02       		.uleb128 0x2
 3068 0737 91       		.byte	0x91
 3069 0738 74       		.sleb128 -12
 3070 0739 15       		.uleb128 0x15
 3071 073a CF020000 		.4byte	.LASF71
 3072 073e 01       		.byte	0x1
 3073 073f 1C04     		.2byte	0x41c
 3074 0741 6B000000 		.4byte	0x6b
 3075 0745 02       		.uleb128 0x2
 3076 0746 91       		.byte	0x91
 3077 0747 73       		.sleb128 -13
 3078 0748 00       		.byte	0
 3079 0749 18       		.uleb128 0x18
 3080 074a 16070000 		.4byte	.LASF82
 3081 074e 01       		.byte	0x1
 3082 074f 4A04     		.2byte	0x44a
 3083 0751 83000000 		.4byte	0x83
 3084 0755 00000000 		.4byte	.LFB57
 3085 0759 34010000 		.4byte	.LFE57-.LFB57
 3086 075d 01       		.uleb128 0x1
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 105


 3087 075e 9C       		.byte	0x9c
 3088 075f BE070000 		.4byte	0x7be
 3089 0763 15       		.uleb128 0x15
 3090 0764 B7030000 		.4byte	.LASF49
 3091 0768 01       		.byte	0x1
 3092 0769 4A04     		.2byte	0x44a
 3093 076b 83000000 		.4byte	0x83
 3094 076f 02       		.uleb128 0x2
 3095 0770 91       		.byte	0x91
 3096 0771 6C       		.sleb128 -20
 3097 0772 14       		.uleb128 0x14
 3098 0773 B5070000 		.4byte	.LASF51
 3099 0777 01       		.byte	0x1
 3100 0778 4C04     		.2byte	0x44c
 3101 077a 6B000000 		.4byte	0x6b
 3102 077e 02       		.uleb128 0x2
 3103 077f 91       		.byte	0x91
 3104 0780 77       		.sleb128 -9
 3105 0781 14       		.uleb128 0x14
 3106 0782 F4040000 		.4byte	.LASF83
 3107 0786 01       		.byte	0x1
 3108 0787 4D04     		.2byte	0x44d
 3109 0789 6B000000 		.4byte	0x6b
 3110 078d 02       		.uleb128 0x2
 3111 078e 91       		.byte	0x91
 3112 078f 74       		.sleb128 -12
 3113 0790 14       		.uleb128 0x14
 3114 0791 D2080000 		.4byte	.LASF84
 3115 0795 01       		.byte	0x1
 3116 0796 4E04     		.2byte	0x44e
 3117 0798 6B000000 		.4byte	0x6b
 3118 079c 02       		.uleb128 0x2
 3119 079d 91       		.byte	0x91
 3120 079e 73       		.sleb128 -13
 3121 079f 14       		.uleb128 0x14
 3122 07a0 34000000 		.4byte	.LASF85
 3123 07a4 01       		.byte	0x1
 3124 07a5 5004     		.2byte	0x450
 3125 07a7 6B000000 		.4byte	0x6b
 3126 07ab 02       		.uleb128 0x2
 3127 07ac 91       		.byte	0x91
 3128 07ad 76       		.sleb128 -10
 3129 07ae 14       		.uleb128 0x14
 3130 07af 1C020000 		.4byte	.LASF86
 3131 07b3 01       		.byte	0x1
 3132 07b4 5104     		.2byte	0x451
 3133 07b6 6B000000 		.4byte	0x6b
 3134 07ba 02       		.uleb128 0x2
 3135 07bb 91       		.byte	0x91
 3136 07bc 75       		.sleb128 -11
 3137 07bd 00       		.byte	0
 3138 07be 18       		.uleb128 0x18
 3139 07bf 02010000 		.4byte	.LASF87
 3140 07c3 01       		.byte	0x1
 3141 07c4 9C04     		.2byte	0x49c
 3142 07c6 83000000 		.4byte	0x83
 3143 07ca 00000000 		.4byte	.LFB58
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 106


 3144 07ce 42000000 		.4byte	.LFE58-.LFB58
 3145 07d2 01       		.uleb128 0x1
 3146 07d3 9C       		.byte	0x9c
 3147 07d4 15080000 		.4byte	0x815
 3148 07d8 15       		.uleb128 0x15
 3149 07d9 B5070000 		.4byte	.LASF51
 3150 07dd 01       		.byte	0x1
 3151 07de 9C04     		.2byte	0x49c
 3152 07e0 83000000 		.4byte	0x83
 3153 07e4 02       		.uleb128 0x2
 3154 07e5 91       		.byte	0x91
 3155 07e6 64       		.sleb128 -28
 3156 07e7 14       		.uleb128 0x14
 3157 07e8 B6010000 		.4byte	.LASF88
 3158 07ec 01       		.byte	0x1
 3159 07ed 9E04     		.2byte	0x49e
 3160 07ef 83000000 		.4byte	0x83
 3161 07f3 02       		.uleb128 0x2
 3162 07f4 91       		.byte	0x91
 3163 07f5 74       		.sleb128 -12
 3164 07f6 14       		.uleb128 0x14
 3165 07f7 26090000 		.4byte	.LASF89
 3166 07fb 01       		.byte	0x1
 3167 07fc 9F04     		.2byte	0x49f
 3168 07fe 83000000 		.4byte	0x83
 3169 0802 02       		.uleb128 0x2
 3170 0803 91       		.byte	0x91
 3171 0804 6C       		.sleb128 -20
 3172 0805 14       		.uleb128 0x14
 3173 0806 E0010000 		.4byte	.LASF90
 3174 080a 01       		.byte	0x1
 3175 080b A004     		.2byte	0x4a0
 3176 080d 83000000 		.4byte	0x83
 3177 0811 02       		.uleb128 0x2
 3178 0812 91       		.byte	0x91
 3179 0813 70       		.sleb128 -16
 3180 0814 00       		.byte	0
 3181 0815 18       		.uleb128 0x18
 3182 0816 35070000 		.4byte	.LASF91
 3183 081a 01       		.byte	0x1
 3184 081b CA04     		.2byte	0x4ca
 3185 081d 83000000 		.4byte	0x83
 3186 0821 00000000 		.4byte	.LFB59
 3187 0825 36000000 		.4byte	.LFE59-.LFB59
 3188 0829 01       		.uleb128 0x1
 3189 082a 9C       		.byte	0x9c
 3190 082b 4C080000 		.4byte	0x84c
 3191 082f 13       		.uleb128 0x13
 3192 0830 6900     		.ascii	"i\000"
 3193 0832 01       		.byte	0x1
 3194 0833 CD04     		.2byte	0x4cd
 3195 0835 83000000 		.4byte	0x83
 3196 0839 02       		.uleb128 0x2
 3197 083a 91       		.byte	0x91
 3198 083b 74       		.sleb128 -12
 3199 083c 14       		.uleb128 0x14
 3200 083d E0010000 		.4byte	.LASF90
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 107


 3201 0841 01       		.byte	0x1
 3202 0842 CE04     		.2byte	0x4ce
 3203 0844 83000000 		.4byte	0x83
 3204 0848 02       		.uleb128 0x2
 3205 0849 91       		.byte	0x91
 3206 084a 70       		.sleb128 -16
 3207 084b 00       		.byte	0
 3208 084c 12       		.uleb128 0x12
 3209 084d EA000000 		.4byte	.LASF92
 3210 0851 01       		.byte	0x1
 3211 0852 F904     		.2byte	0x4f9
 3212 0854 00000000 		.4byte	.LFB60
 3213 0858 5C000000 		.4byte	.LFE60-.LFB60
 3214 085c 01       		.uleb128 0x1
 3215 085d 9C       		.byte	0x9c
 3216 085e 90080000 		.4byte	0x890
 3217 0862 15       		.uleb128 0x15
 3218 0863 B5070000 		.4byte	.LASF51
 3219 0867 01       		.byte	0x1
 3220 0868 F904     		.2byte	0x4f9
 3221 086a 83000000 		.4byte	0x83
 3222 086e 02       		.uleb128 0x2
 3223 086f 91       		.byte	0x91
 3224 0870 6C       		.sleb128 -20
 3225 0871 14       		.uleb128 0x14
 3226 0872 B6010000 		.4byte	.LASF88
 3227 0876 01       		.byte	0x1
 3228 0877 FC04     		.2byte	0x4fc
 3229 0879 6B000000 		.4byte	0x6b
 3230 087d 02       		.uleb128 0x2
 3231 087e 91       		.byte	0x91
 3232 087f 77       		.sleb128 -9
 3233 0880 14       		.uleb128 0x14
 3234 0881 26090000 		.4byte	.LASF89
 3235 0885 01       		.byte	0x1
 3236 0886 FD04     		.2byte	0x4fd
 3237 0888 6B000000 		.4byte	0x6b
 3238 088c 02       		.uleb128 0x2
 3239 088d 91       		.byte	0x91
 3240 088e 76       		.sleb128 -10
 3241 088f 00       		.byte	0
 3242 0890 12       		.uleb128 0x12
 3243 0891 EF010000 		.4byte	.LASF93
 3244 0895 01       		.byte	0x1
 3245 0896 2405     		.2byte	0x524
 3246 0898 00000000 		.4byte	.LFB61
 3247 089c 5C000000 		.4byte	.LFE61-.LFB61
 3248 08a0 01       		.uleb128 0x1
 3249 08a1 9C       		.byte	0x9c
 3250 08a2 D4080000 		.4byte	0x8d4
 3251 08a6 15       		.uleb128 0x15
 3252 08a7 B5070000 		.4byte	.LASF51
 3253 08ab 01       		.byte	0x1
 3254 08ac 2405     		.2byte	0x524
 3255 08ae 83000000 		.4byte	0x83
 3256 08b2 02       		.uleb128 0x2
 3257 08b3 91       		.byte	0x91
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 108


 3258 08b4 6C       		.sleb128 -20
 3259 08b5 14       		.uleb128 0x14
 3260 08b6 B6010000 		.4byte	.LASF88
 3261 08ba 01       		.byte	0x1
 3262 08bb 2605     		.2byte	0x526
 3263 08bd 6B000000 		.4byte	0x6b
 3264 08c1 02       		.uleb128 0x2
 3265 08c2 91       		.byte	0x91
 3266 08c3 77       		.sleb128 -9
 3267 08c4 14       		.uleb128 0x14
 3268 08c5 26090000 		.4byte	.LASF89
 3269 08c9 01       		.byte	0x1
 3270 08ca 2705     		.2byte	0x527
 3271 08cc 6B000000 		.4byte	0x6b
 3272 08d0 02       		.uleb128 0x2
 3273 08d1 91       		.byte	0x91
 3274 08d2 76       		.sleb128 -10
 3275 08d3 00       		.byte	0
 3276 08d4 16       		.uleb128 0x16
 3277 08d5 4A030000 		.4byte	.LASF94
 3278 08d9 01       		.byte	0x1
 3279 08da 4009     		.2byte	0x940
 3280 08dc 77000000 		.4byte	0x77
 3281 08e0 00000000 		.4byte	.LFB62
 3282 08e4 76000000 		.4byte	.LFE62-.LFB62
 3283 08e8 01       		.uleb128 0x1
 3284 08e9 9C       		.byte	0x9c
 3285 08ea 28090000 		.4byte	0x928
 3286 08ee 19       		.uleb128 0x19
 3287 08ef 783100   		.ascii	"x1\000"
 3288 08f2 01       		.byte	0x1
 3289 08f3 4009     		.2byte	0x940
 3290 08f5 77000000 		.4byte	0x77
 3291 08f9 02       		.uleb128 0x2
 3292 08fa 91       		.byte	0x91
 3293 08fb 66       		.sleb128 -26
 3294 08fc 19       		.uleb128 0x19
 3295 08fd 783200   		.ascii	"x2\000"
 3296 0900 01       		.byte	0x1
 3297 0901 4009     		.2byte	0x940
 3298 0903 77000000 		.4byte	0x77
 3299 0907 02       		.uleb128 0x2
 3300 0908 91       		.byte	0x91
 3301 0909 64       		.sleb128 -28
 3302 090a 19       		.uleb128 0x19
 3303 090b 783300   		.ascii	"x3\000"
 3304 090e 01       		.byte	0x1
 3305 090f 4009     		.2byte	0x940
 3306 0911 77000000 		.4byte	0x77
 3307 0915 02       		.uleb128 0x2
 3308 0916 91       		.byte	0x91
 3309 0917 62       		.sleb128 -30
 3310 0918 13       		.uleb128 0x13
 3311 0919 746D7000 		.ascii	"tmp\000"
 3312 091d 01       		.byte	0x1
 3313 091e 4209     		.2byte	0x942
 3314 0920 77000000 		.4byte	0x77
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 109


 3315 0924 02       		.uleb128 0x2
 3316 0925 91       		.byte	0x91
 3317 0926 6E       		.sleb128 -18
 3318 0927 00       		.byte	0
 3319 0928 16       		.uleb128 0x16
 3320 0929 390A0000 		.4byte	.LASF95
 3321 092d 01       		.byte	0x1
 3322 092e B809     		.2byte	0x9b8
 3323 0930 77000000 		.4byte	0x77
 3324 0934 00000000 		.4byte	.LFB63
 3325 0938 3C000000 		.4byte	.LFE63-.LFB63
 3326 093c 01       		.uleb128 0x1
 3327 093d 9C       		.byte	0x9c
 3328 093e 6E090000 		.4byte	0x96e
 3329 0942 19       		.uleb128 0x19
 3330 0943 783100   		.ascii	"x1\000"
 3331 0946 01       		.byte	0x1
 3332 0947 B809     		.2byte	0x9b8
 3333 0949 77000000 		.4byte	0x77
 3334 094d 02       		.uleb128 0x2
 3335 094e 91       		.byte	0x91
 3336 094f 6E       		.sleb128 -18
 3337 0950 19       		.uleb128 0x19
 3338 0951 783200   		.ascii	"x2\000"
 3339 0954 01       		.byte	0x1
 3340 0955 B809     		.2byte	0x9b8
 3341 0957 77000000 		.4byte	0x77
 3342 095b 02       		.uleb128 0x2
 3343 095c 91       		.byte	0x91
 3344 095d 6C       		.sleb128 -20
 3345 095e 13       		.uleb128 0x13
 3346 095f 746D7000 		.ascii	"tmp\000"
 3347 0963 01       		.byte	0x1
 3348 0964 BA09     		.2byte	0x9ba
 3349 0966 83000000 		.4byte	0x83
 3350 096a 02       		.uleb128 0x2
 3351 096b 91       		.byte	0x91
 3352 096c 74       		.sleb128 -12
 3353 096d 00       		.byte	0
 3354 096e 16       		.uleb128 0x16
 3355 096f FE070000 		.4byte	.LASF96
 3356 0973 01       		.byte	0x1
 3357 0974 A10A     		.2byte	0xaa1
 3358 0976 83000000 		.4byte	0x83
 3359 097a 00000000 		.4byte	.LFB64
 3360 097e 1C000000 		.4byte	.LFE64-.LFB64
 3361 0982 01       		.uleb128 0x1
 3362 0983 9C       		.byte	0x9c
 3363 0984 98090000 		.4byte	0x998
 3364 0988 15       		.uleb128 0x15
 3365 0989 B7030000 		.4byte	.LASF49
 3366 098d 01       		.byte	0x1
 3367 098e A10A     		.2byte	0xaa1
 3368 0990 83000000 		.4byte	0x83
 3369 0994 02       		.uleb128 0x2
 3370 0995 91       		.byte	0x91
 3371 0996 74       		.sleb128 -12
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 110


 3372 0997 00       		.byte	0
 3373 0998 16       		.uleb128 0x16
 3374 0999 19080000 		.4byte	.LASF97
 3375 099d 01       		.byte	0x1
 3376 099e BB0A     		.2byte	0xabb
 3377 09a0 6B000000 		.4byte	0x6b
 3378 09a4 00000000 		.4byte	.LFB65
 3379 09a8 1C000000 		.4byte	.LFE65-.LFB65
 3380 09ac 01       		.uleb128 0x1
 3381 09ad 9C       		.byte	0x9c
 3382 09ae C2090000 		.4byte	0x9c2
 3383 09b2 15       		.uleb128 0x15
 3384 09b3 B7030000 		.4byte	.LASF49
 3385 09b7 01       		.byte	0x1
 3386 09b8 BB0A     		.2byte	0xabb
 3387 09ba 83000000 		.4byte	0x83
 3388 09be 02       		.uleb128 0x2
 3389 09bf 91       		.byte	0x91
 3390 09c0 74       		.sleb128 -12
 3391 09c1 00       		.byte	0
 3392 09c2 16       		.uleb128 0x16
 3393 09c3 33050000 		.4byte	.LASF98
 3394 09c7 01       		.byte	0x1
 3395 09c8 D50A     		.2byte	0xad5
 3396 09ca 6B000000 		.4byte	0x6b
 3397 09ce 00000000 		.4byte	.LFB66
 3398 09d2 1C000000 		.4byte	.LFE66-.LFB66
 3399 09d6 01       		.uleb128 0x1
 3400 09d7 9C       		.byte	0x9c
 3401 09d8 EC090000 		.4byte	0x9ec
 3402 09dc 15       		.uleb128 0x15
 3403 09dd B5070000 		.4byte	.LASF51
 3404 09e1 01       		.byte	0x1
 3405 09e2 D50A     		.2byte	0xad5
 3406 09e4 83000000 		.4byte	0x83
 3407 09e8 02       		.uleb128 0x2
 3408 09e9 91       		.byte	0x91
 3409 09ea 74       		.sleb128 -12
 3410 09eb 00       		.byte	0
 3411 09ec 1A       		.uleb128 0x1a
 3412 09ed FA020000 		.4byte	.LASF99
 3413 09f1 01       		.byte	0x1
 3414 09f2 EF0A     		.2byte	0xaef
 3415 09f4 00000000 		.4byte	.LFB67
 3416 09f8 14000000 		.4byte	.LFE67-.LFB67
 3417 09fc 01       		.uleb128 0x1
 3418 09fd 9C       		.byte	0x9c
 3419 09fe 1A       		.uleb128 0x1a
 3420 09ff 7B010000 		.4byte	.LASF100
 3421 0a03 01       		.byte	0x1
 3422 0a04 080B     		.2byte	0xb08
 3423 0a06 00000000 		.4byte	.LFB68
 3424 0a0a 14000000 		.4byte	.LFE68-.LFB68
 3425 0a0e 01       		.uleb128 0x1
 3426 0a0f 9C       		.byte	0x9c
 3427 0a10 1B       		.uleb128 0x1b
 3428 0a11 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 111


 3429 0a15 200A0000 		.4byte	0xa20
 3430 0a19 1C       		.uleb128 0x1c
 3431 0a1a A4000000 		.4byte	0xa4
 3432 0a1e 01       		.byte	0x1
 3433 0a1f 00       		.byte	0
 3434 0a20 0F       		.uleb128 0xf
 3435 0a21 A8050000 		.4byte	.LASF101
 3436 0a25 01       		.byte	0x1
 3437 0a26 55       		.byte	0x55
 3438 0a27 100A0000 		.4byte	0xa10
 3439 0a2b 05       		.uleb128 0x5
 3440 0a2c 03       		.byte	0x3
 3441 0a2d 10000000 		.4byte	CapSense_1_debounceCounter
 3442 0a31 1B       		.uleb128 0x1b
 3443 0a32 77000000 		.4byte	0x77
 3444 0a36 410A0000 		.4byte	0xa41
 3445 0a3a 1C       		.uleb128 0x1c
 3446 0a3b A4000000 		.4byte	0xa4
 3447 0a3f 00       		.byte	0
 3448 0a40 00       		.byte	0
 3449 0a41 1D       		.uleb128 0x1d
 3450 0a42 66010000 		.4byte	.LASF102
 3451 0a46 01       		.byte	0x1
 3452 0a47 2C       		.byte	0x2c
 3453 0a48 310A0000 		.4byte	0xa31
 3454 0a4c 1B       		.uleb128 0x1b
 3455 0a4d 6B000000 		.4byte	0x6b
 3456 0a51 5C0A0000 		.4byte	0xa5c
 3457 0a55 1C       		.uleb128 0x1c
 3458 0a56 A4000000 		.4byte	0xa4
 3459 0a5a 00       		.byte	0
 3460 0a5b 00       		.byte	0
 3461 0a5c 1D       		.uleb128 0x1d
 3462 0a5d C7040000 		.4byte	.LASF103
 3463 0a61 01       		.byte	0x1
 3464 0a62 2D       		.byte	0x2d
 3465 0a63 4C0A0000 		.4byte	0xa4c
 3466 0a67 1D       		.uleb128 0x1d
 3467 0a68 D5060000 		.4byte	.LASF104
 3468 0a6c 01       		.byte	0x1
 3469 0a6d 2E       		.byte	0x2e
 3470 0a6e 720A0000 		.4byte	0xa72
 3471 0a72 08       		.uleb128 0x8
 3472 0a73 4C0A0000 		.4byte	0xa4c
 3473 0a77 1E       		.uleb128 0x1e
 3474 0a78 75080000 		.4byte	.LASF105
 3475 0a7c 01       		.byte	0x1
 3476 0a7d 34       		.byte	0x34
 3477 0a7e 310A0000 		.4byte	0xa31
 3478 0a82 05       		.uleb128 0x5
 3479 0a83 03       		.byte	0x3
 3480 0a84 00000000 		.4byte	CapSense_1_sensorBaseline
 3481 0a88 1E       		.uleb128 0x1e
 3482 0a89 B5080000 		.4byte	.LASF106
 3483 0a8d 01       		.byte	0x1
 3484 0a8e 35       		.byte	0x35
 3485 0a8f 4C0A0000 		.4byte	0xa4c
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 112


 3486 0a93 05       		.uleb128 0x5
 3487 0a94 03       		.byte	0x3
 3488 0a95 00000000 		.4byte	CapSense_1_sensorBaselineLow
 3489 0a99 1E       		.uleb128 0x1e
 3490 0a9a E6070000 		.4byte	.LASF107
 3491 0a9e 01       		.byte	0x1
 3492 0a9f 36       		.byte	0x36
 3493 0aa0 4C0A0000 		.4byte	0xa4c
 3494 0aa4 05       		.uleb128 0x5
 3495 0aa5 03       		.byte	0x3
 3496 0aa6 00000000 		.4byte	CapSense_1_sensorSignal
 3497 0aaa 1E       		.uleb128 0x1e
 3498 0aab BD060000 		.4byte	.LASF108
 3499 0aaf 01       		.byte	0x1
 3500 0ab0 37       		.byte	0x37
 3501 0ab1 4C0A0000 		.4byte	0xa4c
 3502 0ab5 05       		.uleb128 0x5
 3503 0ab6 03       		.byte	0x3
 3504 0ab7 00000000 		.4byte	CapSense_1_sensorOnMask
 3505 0abb 1E       		.uleb128 0x1e
 3506 0abc 14050000 		.4byte	.LASF109
 3507 0ac0 01       		.byte	0x1
 3508 0ac1 39       		.byte	0x39
 3509 0ac2 4C0A0000 		.4byte	0xa4c
 3510 0ac6 05       		.uleb128 0x5
 3511 0ac7 03       		.byte	0x3
 3512 0ac8 00000000 		.4byte	CapSense_1_lowBaselineResetCnt
 3513 0acc 1E       		.uleb128 0x1e
 3514 0acd 0E060000 		.4byte	.LASF110
 3515 0ad1 01       		.byte	0x1
 3516 0ad2 3A       		.byte	0x3a
 3517 0ad3 4C0A0000 		.4byte	0xa4c
 3518 0ad7 05       		.uleb128 0x5
 3519 0ad8 03       		.byte	0x3
 3520 0ad9 00000000 		.4byte	CapSense_1_lowBaselineReset
 3521 0add 1E       		.uleb128 0x1e
 3522 0ade A4020000 		.4byte	.LASF111
 3523 0ae2 01       		.byte	0x1
 3524 0ae3 49       		.byte	0x49
 3525 0ae4 4C0A0000 		.4byte	0xa4c
 3526 0ae8 05       		.uleb128 0x5
 3527 0ae9 03       		.byte	0x3
 3528 0aea 00000000 		.4byte	CapSense_1_fingerThreshold
 3529 0aee 1E       		.uleb128 0x1e
 3530 0aef 21010000 		.4byte	.LASF112
 3531 0af3 01       		.byte	0x1
 3532 0af4 4B       		.byte	0x4b
 3533 0af5 4C0A0000 		.4byte	0xa4c
 3534 0af9 05       		.uleb128 0x5
 3535 0afa 03       		.byte	0x3
 3536 0afb 00000000 		.4byte	CapSense_1_noiseThreshold
 3537 0aff 1E       		.uleb128 0x1e
 3538 0b00 30040000 		.4byte	.LASF113
 3539 0b04 01       		.byte	0x1
 3540 0b05 4D       		.byte	0x4d
 3541 0b06 4C0A0000 		.4byte	0xa4c
 3542 0b0a 05       		.uleb128 0x5
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 113


 3543 0b0b 03       		.byte	0x3
 3544 0b0c 00000000 		.4byte	CapSense_1_negativeNoiseThreshold
 3545 0b10 1E       		.uleb128 0x1e
 3546 0b11 76020000 		.4byte	.LASF114
 3547 0b15 01       		.byte	0x1
 3548 0b16 4F       		.byte	0x4f
 3549 0b17 4C0A0000 		.4byte	0xa4c
 3550 0b1b 05       		.uleb128 0x5
 3551 0b1c 03       		.byte	0x3
 3552 0b1d 00000000 		.4byte	CapSense_1_hysteresis
 3553 0b21 1E       		.uleb128 0x1e
 3554 0b22 3B010000 		.4byte	.LASF115
 3555 0b26 01       		.byte	0x1
 3556 0b27 51       		.byte	0x51
 3557 0b28 4C0A0000 		.4byte	0xa4c
 3558 0b2c 05       		.uleb128 0x5
 3559 0b2d 03       		.byte	0x3
 3560 0b2e 00000000 		.4byte	CapSense_1_debounce
 3561 0b32 1E       		.uleb128 0x1e
 3562 0b33 8C020000 		.4byte	.LASF116
 3563 0b37 01       		.byte	0x1
 3564 0b38 59       		.byte	0x59
 3565 0b39 430B0000 		.4byte	0xb43
 3566 0b3d 05       		.uleb128 0x5
 3567 0b3e 03       		.byte	0x3
 3568 0b3f 00000000 		.4byte	CapSense_1_rawDataIndex
 3569 0b43 08       		.uleb128 0x8
 3570 0b44 4C0A0000 		.4byte	0xa4c
 3571 0b48 1E       		.uleb128 0x1e
 3572 0b49 52040000 		.4byte	.LASF117
 3573 0b4d 01       		.byte	0x1
 3574 0b4e 5D       		.byte	0x5d
 3575 0b4f 590B0000 		.4byte	0xb59
 3576 0b53 05       		.uleb128 0x5
 3577 0b54 03       		.byte	0x3
 3578 0b55 00000000 		.4byte	CapSense_1_numberOfSensors
 3579 0b59 08       		.uleb128 0x8
 3580 0b5a 4C0A0000 		.4byte	0xa4c
 3581 0b5e 1E       		.uleb128 0x1e
 3582 0b5f FC060000 		.4byte	.LASF118
 3583 0b63 01       		.byte	0x1
 3584 0b64 27       		.byte	0x27
 3585 0b65 310A0000 		.4byte	0xa31
 3586 0b69 05       		.uleb128 0x5
 3587 0b6a 03       		.byte	0x3
 3588 0b6b 00000000 		.4byte	CapSense_1_rawFilterData1
 3589 0b6f 1D       		.uleb128 0x1d
 3590 0b70 83030000 		.4byte	.LASF119
 3591 0b74 01       		.byte	0x1
 3592 0b75 41       		.byte	0x41
 3593 0b76 A7020000 		.4byte	0x2a7
 3594 0b7a 1E       		.uleb128 0x1e
 3595 0b7b 4D060000 		.4byte	.LASF120
 3596 0b7f 01       		.byte	0x1
 3597 0b80 45       		.byte	0x45
 3598 0b81 6B000000 		.4byte	0x6b
 3599 0b85 05       		.uleb128 0x5
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 114


 3600 0b86 03       		.byte	0x3
 3601 0b87 00000000 		.4byte	CapSense_1_enableRawFilters
 3602 0b8b 00       		.byte	0
 3603              		.section	.debug_abbrev,"",%progbits
 3604              	.Ldebug_abbrev0:
 3605 0000 01       		.uleb128 0x1
 3606 0001 11       		.uleb128 0x11
 3607 0002 01       		.byte	0x1
 3608 0003 25       		.uleb128 0x25
 3609 0004 0E       		.uleb128 0xe
 3610 0005 13       		.uleb128 0x13
 3611 0006 0B       		.uleb128 0xb
 3612 0007 03       		.uleb128 0x3
 3613 0008 0E       		.uleb128 0xe
 3614 0009 1B       		.uleb128 0x1b
 3615 000a 0E       		.uleb128 0xe
 3616 000b 55       		.uleb128 0x55
 3617 000c 17       		.uleb128 0x17
 3618 000d 11       		.uleb128 0x11
 3619 000e 01       		.uleb128 0x1
 3620 000f 10       		.uleb128 0x10
 3621 0010 17       		.uleb128 0x17
 3622 0011 00       		.byte	0
 3623 0012 00       		.byte	0
 3624 0013 02       		.uleb128 0x2
 3625 0014 24       		.uleb128 0x24
 3626 0015 00       		.byte	0
 3627 0016 0B       		.uleb128 0xb
 3628 0017 0B       		.uleb128 0xb
 3629 0018 3E       		.uleb128 0x3e
 3630 0019 0B       		.uleb128 0xb
 3631 001a 03       		.uleb128 0x3
 3632 001b 0E       		.uleb128 0xe
 3633 001c 00       		.byte	0
 3634 001d 00       		.byte	0
 3635 001e 03       		.uleb128 0x3
 3636 001f 24       		.uleb128 0x24
 3637 0020 00       		.byte	0
 3638 0021 0B       		.uleb128 0xb
 3639 0022 0B       		.uleb128 0xb
 3640 0023 3E       		.uleb128 0x3e
 3641 0024 0B       		.uleb128 0xb
 3642 0025 03       		.uleb128 0x3
 3643 0026 08       		.uleb128 0x8
 3644 0027 00       		.byte	0
 3645 0028 00       		.byte	0
 3646 0029 04       		.uleb128 0x4
 3647 002a 16       		.uleb128 0x16
 3648 002b 00       		.byte	0
 3649 002c 03       		.uleb128 0x3
 3650 002d 0E       		.uleb128 0xe
 3651 002e 3A       		.uleb128 0x3a
 3652 002f 0B       		.uleb128 0xb
 3653 0030 3B       		.uleb128 0x3b
 3654 0031 05       		.uleb128 0x5
 3655 0032 49       		.uleb128 0x49
 3656 0033 13       		.uleb128 0x13
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 115


 3657 0034 00       		.byte	0
 3658 0035 00       		.byte	0
 3659 0036 05       		.uleb128 0x5
 3660 0037 13       		.uleb128 0x13
 3661 0038 01       		.byte	0x1
 3662 0039 0B       		.uleb128 0xb
 3663 003a 0B       		.uleb128 0xb
 3664 003b 3A       		.uleb128 0x3a
 3665 003c 0B       		.uleb128 0xb
 3666 003d 3B       		.uleb128 0x3b
 3667 003e 0B       		.uleb128 0xb
 3668 003f 01       		.uleb128 0x1
 3669 0040 13       		.uleb128 0x13
 3670 0041 00       		.byte	0
 3671 0042 00       		.byte	0
 3672 0043 06       		.uleb128 0x6
 3673 0044 0D       		.uleb128 0xd
 3674 0045 00       		.byte	0
 3675 0046 03       		.uleb128 0x3
 3676 0047 0E       		.uleb128 0xe
 3677 0048 3A       		.uleb128 0x3a
 3678 0049 0B       		.uleb128 0xb
 3679 004a 3B       		.uleb128 0x3b
 3680 004b 0B       		.uleb128 0xb
 3681 004c 49       		.uleb128 0x49
 3682 004d 13       		.uleb128 0x13
 3683 004e 38       		.uleb128 0x38
 3684 004f 0B       		.uleb128 0xb
 3685 0050 00       		.byte	0
 3686 0051 00       		.byte	0
 3687 0052 07       		.uleb128 0x7
 3688 0053 0F       		.uleb128 0xf
 3689 0054 00       		.byte	0
 3690 0055 0B       		.uleb128 0xb
 3691 0056 0B       		.uleb128 0xb
 3692 0057 49       		.uleb128 0x49
 3693 0058 13       		.uleb128 0x13
 3694 0059 00       		.byte	0
 3695 005a 00       		.byte	0
 3696 005b 08       		.uleb128 0x8
 3697 005c 26       		.uleb128 0x26
 3698 005d 00       		.byte	0
 3699 005e 49       		.uleb128 0x49
 3700 005f 13       		.uleb128 0x13
 3701 0060 00       		.byte	0
 3702 0061 00       		.byte	0
 3703 0062 09       		.uleb128 0x9
 3704 0063 15       		.uleb128 0x15
 3705 0064 01       		.byte	0x1
 3706 0065 27       		.uleb128 0x27
 3707 0066 19       		.uleb128 0x19
 3708 0067 49       		.uleb128 0x49
 3709 0068 13       		.uleb128 0x13
 3710 0069 01       		.uleb128 0x1
 3711 006a 13       		.uleb128 0x13
 3712 006b 00       		.byte	0
 3713 006c 00       		.byte	0
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 116


 3714 006d 0A       		.uleb128 0xa
 3715 006e 05       		.uleb128 0x5
 3716 006f 00       		.byte	0
 3717 0070 49       		.uleb128 0x49
 3718 0071 13       		.uleb128 0x13
 3719 0072 00       		.byte	0
 3720 0073 00       		.byte	0
 3721 0074 0B       		.uleb128 0xb
 3722 0075 15       		.uleb128 0x15
 3723 0076 01       		.byte	0x1
 3724 0077 27       		.uleb128 0x27
 3725 0078 19       		.uleb128 0x19
 3726 0079 01       		.uleb128 0x1
 3727 007a 13       		.uleb128 0x13
 3728 007b 00       		.byte	0
 3729 007c 00       		.byte	0
 3730 007d 0C       		.uleb128 0xc
 3731 007e 16       		.uleb128 0x16
 3732 007f 00       		.byte	0
 3733 0080 03       		.uleb128 0x3
 3734 0081 0E       		.uleb128 0xe
 3735 0082 3A       		.uleb128 0x3a
 3736 0083 0B       		.uleb128 0xb
 3737 0084 3B       		.uleb128 0x3b
 3738 0085 0B       		.uleb128 0xb
 3739 0086 49       		.uleb128 0x49
 3740 0087 13       		.uleb128 0x13
 3741 0088 00       		.byte	0
 3742 0089 00       		.byte	0
 3743 008a 0D       		.uleb128 0xd
 3744 008b 2E       		.uleb128 0x2e
 3745 008c 01       		.byte	0x1
 3746 008d 3F       		.uleb128 0x3f
 3747 008e 19       		.uleb128 0x19
 3748 008f 03       		.uleb128 0x3
 3749 0090 0E       		.uleb128 0xe
 3750 0091 3A       		.uleb128 0x3a
 3751 0092 0B       		.uleb128 0xb
 3752 0093 3B       		.uleb128 0x3b
 3753 0094 0B       		.uleb128 0xb
 3754 0095 27       		.uleb128 0x27
 3755 0096 19       		.uleb128 0x19
 3756 0097 11       		.uleb128 0x11
 3757 0098 01       		.uleb128 0x1
 3758 0099 12       		.uleb128 0x12
 3759 009a 06       		.uleb128 0x6
 3760 009b 40       		.uleb128 0x40
 3761 009c 18       		.uleb128 0x18
 3762 009d 9742     		.uleb128 0x2117
 3763 009f 19       		.uleb128 0x19
 3764 00a0 01       		.uleb128 0x1
 3765 00a1 13       		.uleb128 0x13
 3766 00a2 00       		.byte	0
 3767 00a3 00       		.byte	0
 3768 00a4 0E       		.uleb128 0xe
 3769 00a5 05       		.uleb128 0x5
 3770 00a6 00       		.byte	0
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 117


 3771 00a7 03       		.uleb128 0x3
 3772 00a8 0E       		.uleb128 0xe
 3773 00a9 3A       		.uleb128 0x3a
 3774 00aa 0B       		.uleb128 0xb
 3775 00ab 3B       		.uleb128 0x3b
 3776 00ac 0B       		.uleb128 0xb
 3777 00ad 49       		.uleb128 0x49
 3778 00ae 13       		.uleb128 0x13
 3779 00af 02       		.uleb128 0x2
 3780 00b0 18       		.uleb128 0x18
 3781 00b1 00       		.byte	0
 3782 00b2 00       		.byte	0
 3783 00b3 0F       		.uleb128 0xf
 3784 00b4 34       		.uleb128 0x34
 3785 00b5 00       		.byte	0
 3786 00b6 03       		.uleb128 0x3
 3787 00b7 0E       		.uleb128 0xe
 3788 00b8 3A       		.uleb128 0x3a
 3789 00b9 0B       		.uleb128 0xb
 3790 00ba 3B       		.uleb128 0x3b
 3791 00bb 0B       		.uleb128 0xb
 3792 00bc 49       		.uleb128 0x49
 3793 00bd 13       		.uleb128 0x13
 3794 00be 02       		.uleb128 0x2
 3795 00bf 18       		.uleb128 0x18
 3796 00c0 00       		.byte	0
 3797 00c1 00       		.byte	0
 3798 00c2 10       		.uleb128 0x10
 3799 00c3 2E       		.uleb128 0x2e
 3800 00c4 01       		.byte	0x1
 3801 00c5 3F       		.uleb128 0x3f
 3802 00c6 19       		.uleb128 0x19
 3803 00c7 03       		.uleb128 0x3
 3804 00c8 0E       		.uleb128 0xe
 3805 00c9 3A       		.uleb128 0x3a
 3806 00ca 0B       		.uleb128 0xb
 3807 00cb 3B       		.uleb128 0x3b
 3808 00cc 0B       		.uleb128 0xb
 3809 00cd 27       		.uleb128 0x27
 3810 00ce 19       		.uleb128 0x19
 3811 00cf 11       		.uleb128 0x11
 3812 00d0 01       		.uleb128 0x1
 3813 00d1 12       		.uleb128 0x12
 3814 00d2 06       		.uleb128 0x6
 3815 00d3 40       		.uleb128 0x40
 3816 00d4 18       		.uleb128 0x18
 3817 00d5 9642     		.uleb128 0x2116
 3818 00d7 19       		.uleb128 0x19
 3819 00d8 01       		.uleb128 0x1
 3820 00d9 13       		.uleb128 0x13
 3821 00da 00       		.byte	0
 3822 00db 00       		.byte	0
 3823 00dc 11       		.uleb128 0x11
 3824 00dd 34       		.uleb128 0x34
 3825 00de 00       		.byte	0
 3826 00df 03       		.uleb128 0x3
 3827 00e0 08       		.uleb128 0x8
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 118


 3828 00e1 3A       		.uleb128 0x3a
 3829 00e2 0B       		.uleb128 0xb
 3830 00e3 3B       		.uleb128 0x3b
 3831 00e4 0B       		.uleb128 0xb
 3832 00e5 49       		.uleb128 0x49
 3833 00e6 13       		.uleb128 0x13
 3834 00e7 02       		.uleb128 0x2
 3835 00e8 18       		.uleb128 0x18
 3836 00e9 00       		.byte	0
 3837 00ea 00       		.byte	0
 3838 00eb 12       		.uleb128 0x12
 3839 00ec 2E       		.uleb128 0x2e
 3840 00ed 01       		.byte	0x1
 3841 00ee 3F       		.uleb128 0x3f
 3842 00ef 19       		.uleb128 0x19
 3843 00f0 03       		.uleb128 0x3
 3844 00f1 0E       		.uleb128 0xe
 3845 00f2 3A       		.uleb128 0x3a
 3846 00f3 0B       		.uleb128 0xb
 3847 00f4 3B       		.uleb128 0x3b
 3848 00f5 05       		.uleb128 0x5
 3849 00f6 27       		.uleb128 0x27
 3850 00f7 19       		.uleb128 0x19
 3851 00f8 11       		.uleb128 0x11
 3852 00f9 01       		.uleb128 0x1
 3853 00fa 12       		.uleb128 0x12
 3854 00fb 06       		.uleb128 0x6
 3855 00fc 40       		.uleb128 0x40
 3856 00fd 18       		.uleb128 0x18
 3857 00fe 9642     		.uleb128 0x2116
 3858 0100 19       		.uleb128 0x19
 3859 0101 01       		.uleb128 0x1
 3860 0102 13       		.uleb128 0x13
 3861 0103 00       		.byte	0
 3862 0104 00       		.byte	0
 3863 0105 13       		.uleb128 0x13
 3864 0106 34       		.uleb128 0x34
 3865 0107 00       		.byte	0
 3866 0108 03       		.uleb128 0x3
 3867 0109 08       		.uleb128 0x8
 3868 010a 3A       		.uleb128 0x3a
 3869 010b 0B       		.uleb128 0xb
 3870 010c 3B       		.uleb128 0x3b
 3871 010d 05       		.uleb128 0x5
 3872 010e 49       		.uleb128 0x49
 3873 010f 13       		.uleb128 0x13
 3874 0110 02       		.uleb128 0x2
 3875 0111 18       		.uleb128 0x18
 3876 0112 00       		.byte	0
 3877 0113 00       		.byte	0
 3878 0114 14       		.uleb128 0x14
 3879 0115 34       		.uleb128 0x34
 3880 0116 00       		.byte	0
 3881 0117 03       		.uleb128 0x3
 3882 0118 0E       		.uleb128 0xe
 3883 0119 3A       		.uleb128 0x3a
 3884 011a 0B       		.uleb128 0xb
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 119


 3885 011b 3B       		.uleb128 0x3b
 3886 011c 05       		.uleb128 0x5
 3887 011d 49       		.uleb128 0x49
 3888 011e 13       		.uleb128 0x13
 3889 011f 02       		.uleb128 0x2
 3890 0120 18       		.uleb128 0x18
 3891 0121 00       		.byte	0
 3892 0122 00       		.byte	0
 3893 0123 15       		.uleb128 0x15
 3894 0124 05       		.uleb128 0x5
 3895 0125 00       		.byte	0
 3896 0126 03       		.uleb128 0x3
 3897 0127 0E       		.uleb128 0xe
 3898 0128 3A       		.uleb128 0x3a
 3899 0129 0B       		.uleb128 0xb
 3900 012a 3B       		.uleb128 0x3b
 3901 012b 05       		.uleb128 0x5
 3902 012c 49       		.uleb128 0x49
 3903 012d 13       		.uleb128 0x13
 3904 012e 02       		.uleb128 0x2
 3905 012f 18       		.uleb128 0x18
 3906 0130 00       		.byte	0
 3907 0131 00       		.byte	0
 3908 0132 16       		.uleb128 0x16
 3909 0133 2E       		.uleb128 0x2e
 3910 0134 01       		.byte	0x1
 3911 0135 3F       		.uleb128 0x3f
 3912 0136 19       		.uleb128 0x19
 3913 0137 03       		.uleb128 0x3
 3914 0138 0E       		.uleb128 0xe
 3915 0139 3A       		.uleb128 0x3a
 3916 013a 0B       		.uleb128 0xb
 3917 013b 3B       		.uleb128 0x3b
 3918 013c 05       		.uleb128 0x5
 3919 013d 27       		.uleb128 0x27
 3920 013e 19       		.uleb128 0x19
 3921 013f 49       		.uleb128 0x49
 3922 0140 13       		.uleb128 0x13
 3923 0141 11       		.uleb128 0x11
 3924 0142 01       		.uleb128 0x1
 3925 0143 12       		.uleb128 0x12
 3926 0144 06       		.uleb128 0x6
 3927 0145 40       		.uleb128 0x40
 3928 0146 18       		.uleb128 0x18
 3929 0147 9742     		.uleb128 0x2117
 3930 0149 19       		.uleb128 0x19
 3931 014a 01       		.uleb128 0x1
 3932 014b 13       		.uleb128 0x13
 3933 014c 00       		.byte	0
 3934 014d 00       		.byte	0
 3935 014e 17       		.uleb128 0x17
 3936 014f 2E       		.uleb128 0x2e
 3937 0150 01       		.byte	0x1
 3938 0151 3F       		.uleb128 0x3f
 3939 0152 19       		.uleb128 0x19
 3940 0153 03       		.uleb128 0x3
 3941 0154 0E       		.uleb128 0xe
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 120


 3942 0155 3A       		.uleb128 0x3a
 3943 0156 0B       		.uleb128 0xb
 3944 0157 3B       		.uleb128 0x3b
 3945 0158 05       		.uleb128 0x5
 3946 0159 27       		.uleb128 0x27
 3947 015a 19       		.uleb128 0x19
 3948 015b 11       		.uleb128 0x11
 3949 015c 01       		.uleb128 0x1
 3950 015d 12       		.uleb128 0x12
 3951 015e 06       		.uleb128 0x6
 3952 015f 40       		.uleb128 0x40
 3953 0160 18       		.uleb128 0x18
 3954 0161 9742     		.uleb128 0x2117
 3955 0163 19       		.uleb128 0x19
 3956 0164 01       		.uleb128 0x1
 3957 0165 13       		.uleb128 0x13
 3958 0166 00       		.byte	0
 3959 0167 00       		.byte	0
 3960 0168 18       		.uleb128 0x18
 3961 0169 2E       		.uleb128 0x2e
 3962 016a 01       		.byte	0x1
 3963 016b 3F       		.uleb128 0x3f
 3964 016c 19       		.uleb128 0x19
 3965 016d 03       		.uleb128 0x3
 3966 016e 0E       		.uleb128 0xe
 3967 016f 3A       		.uleb128 0x3a
 3968 0170 0B       		.uleb128 0xb
 3969 0171 3B       		.uleb128 0x3b
 3970 0172 05       		.uleb128 0x5
 3971 0173 27       		.uleb128 0x27
 3972 0174 19       		.uleb128 0x19
 3973 0175 49       		.uleb128 0x49
 3974 0176 13       		.uleb128 0x13
 3975 0177 11       		.uleb128 0x11
 3976 0178 01       		.uleb128 0x1
 3977 0179 12       		.uleb128 0x12
 3978 017a 06       		.uleb128 0x6
 3979 017b 40       		.uleb128 0x40
 3980 017c 18       		.uleb128 0x18
 3981 017d 9642     		.uleb128 0x2116
 3982 017f 19       		.uleb128 0x19
 3983 0180 01       		.uleb128 0x1
 3984 0181 13       		.uleb128 0x13
 3985 0182 00       		.byte	0
 3986 0183 00       		.byte	0
 3987 0184 19       		.uleb128 0x19
 3988 0185 05       		.uleb128 0x5
 3989 0186 00       		.byte	0
 3990 0187 03       		.uleb128 0x3
 3991 0188 08       		.uleb128 0x8
 3992 0189 3A       		.uleb128 0x3a
 3993 018a 0B       		.uleb128 0xb
 3994 018b 3B       		.uleb128 0x3b
 3995 018c 05       		.uleb128 0x5
 3996 018d 49       		.uleb128 0x49
 3997 018e 13       		.uleb128 0x13
 3998 018f 02       		.uleb128 0x2
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 121


 3999 0190 18       		.uleb128 0x18
 4000 0191 00       		.byte	0
 4001 0192 00       		.byte	0
 4002 0193 1A       		.uleb128 0x1a
 4003 0194 2E       		.uleb128 0x2e
 4004 0195 00       		.byte	0
 4005 0196 3F       		.uleb128 0x3f
 4006 0197 19       		.uleb128 0x19
 4007 0198 03       		.uleb128 0x3
 4008 0199 0E       		.uleb128 0xe
 4009 019a 3A       		.uleb128 0x3a
 4010 019b 0B       		.uleb128 0xb
 4011 019c 3B       		.uleb128 0x3b
 4012 019d 05       		.uleb128 0x5
 4013 019e 27       		.uleb128 0x27
 4014 019f 19       		.uleb128 0x19
 4015 01a0 11       		.uleb128 0x11
 4016 01a1 01       		.uleb128 0x1
 4017 01a2 12       		.uleb128 0x12
 4018 01a3 06       		.uleb128 0x6
 4019 01a4 40       		.uleb128 0x40
 4020 01a5 18       		.uleb128 0x18
 4021 01a6 9742     		.uleb128 0x2117
 4022 01a8 19       		.uleb128 0x19
 4023 01a9 00       		.byte	0
 4024 01aa 00       		.byte	0
 4025 01ab 1B       		.uleb128 0x1b
 4026 01ac 01       		.uleb128 0x1
 4027 01ad 01       		.byte	0x1
 4028 01ae 49       		.uleb128 0x49
 4029 01af 13       		.uleb128 0x13
 4030 01b0 01       		.uleb128 0x1
 4031 01b1 13       		.uleb128 0x13
 4032 01b2 00       		.byte	0
 4033 01b3 00       		.byte	0
 4034 01b4 1C       		.uleb128 0x1c
 4035 01b5 21       		.uleb128 0x21
 4036 01b6 00       		.byte	0
 4037 01b7 49       		.uleb128 0x49
 4038 01b8 13       		.uleb128 0x13
 4039 01b9 2F       		.uleb128 0x2f
 4040 01ba 0B       		.uleb128 0xb
 4041 01bb 00       		.byte	0
 4042 01bc 00       		.byte	0
 4043 01bd 1D       		.uleb128 0x1d
 4044 01be 34       		.uleb128 0x34
 4045 01bf 00       		.byte	0
 4046 01c0 03       		.uleb128 0x3
 4047 01c1 0E       		.uleb128 0xe
 4048 01c2 3A       		.uleb128 0x3a
 4049 01c3 0B       		.uleb128 0xb
 4050 01c4 3B       		.uleb128 0x3b
 4051 01c5 0B       		.uleb128 0xb
 4052 01c6 49       		.uleb128 0x49
 4053 01c7 13       		.uleb128 0x13
 4054 01c8 3F       		.uleb128 0x3f
 4055 01c9 19       		.uleb128 0x19
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 122


 4056 01ca 3C       		.uleb128 0x3c
 4057 01cb 19       		.uleb128 0x19
 4058 01cc 00       		.byte	0
 4059 01cd 00       		.byte	0
 4060 01ce 1E       		.uleb128 0x1e
 4061 01cf 34       		.uleb128 0x34
 4062 01d0 00       		.byte	0
 4063 01d1 03       		.uleb128 0x3
 4064 01d2 0E       		.uleb128 0xe
 4065 01d3 3A       		.uleb128 0x3a
 4066 01d4 0B       		.uleb128 0xb
 4067 01d5 3B       		.uleb128 0x3b
 4068 01d6 0B       		.uleb128 0xb
 4069 01d7 49       		.uleb128 0x49
 4070 01d8 13       		.uleb128 0x13
 4071 01d9 3F       		.uleb128 0x3f
 4072 01da 19       		.uleb128 0x19
 4073 01db 02       		.uleb128 0x2
 4074 01dc 18       		.uleb128 0x18
 4075 01dd 00       		.byte	0
 4076 01de 00       		.byte	0
 4077 01df 00       		.byte	0
 4078              		.section	.debug_aranges,"",%progbits
 4079 0000 24010000 		.4byte	0x124
 4080 0004 0200     		.2byte	0x2
 4081 0006 00000000 		.4byte	.Ldebug_info0
 4082 000a 04       		.byte	0x4
 4083 000b 00       		.byte	0
 4084 000c 0000     		.2byte	0
 4085 000e 0000     		.2byte	0
 4086 0010 00000000 		.4byte	.LFB35
 4087 0014 84000000 		.4byte	.LFE35-.LFB35
 4088 0018 00000000 		.4byte	.LFB36
 4089 001c 28000000 		.4byte	.LFE36-.LFB36
 4090 0020 00000000 		.4byte	.LFB37
 4091 0024 26000000 		.4byte	.LFE37-.LFB37
 4092 0028 00000000 		.4byte	.LFB38
 4093 002c 50000000 		.4byte	.LFE38-.LFB38
 4094 0030 00000000 		.4byte	.LFB39
 4095 0034 38020000 		.4byte	.LFE39-.LFB39
 4096 0038 00000000 		.4byte	.LFB40
 4097 003c 1E000000 		.4byte	.LFE40-.LFB40
 4098 0040 00000000 		.4byte	.LFB41
 4099 0044 40000000 		.4byte	.LFE41-.LFB41
 4100 0048 00000000 		.4byte	.LFB42
 4101 004c 58000000 		.4byte	.LFE42-.LFB42
 4102 0050 00000000 		.4byte	.LFB43
 4103 0054 1C000000 		.4byte	.LFE43-.LFB43
 4104 0058 00000000 		.4byte	.LFB44
 4105 005c 24000000 		.4byte	.LFE44-.LFB44
 4106 0060 00000000 		.4byte	.LFB45
 4107 0064 1C000000 		.4byte	.LFE45-.LFB45
 4108 0068 00000000 		.4byte	.LFB46
 4109 006c 24000000 		.4byte	.LFE46-.LFB46
 4110 0070 00000000 		.4byte	.LFB47
 4111 0074 1C000000 		.4byte	.LFE47-.LFB47
 4112 0078 00000000 		.4byte	.LFB48
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 123


 4113 007c 1C000000 		.4byte	.LFE48-.LFB48
 4114 0080 00000000 		.4byte	.LFB49
 4115 0084 1C000000 		.4byte	.LFE49-.LFB49
 4116 0088 00000000 		.4byte	.LFB50
 4117 008c 1C000000 		.4byte	.LFE50-.LFB50
 4118 0090 00000000 		.4byte	.LFB51
 4119 0094 24000000 		.4byte	.LFE51-.LFB51
 4120 0098 00000000 		.4byte	.LFB52
 4121 009c 24000000 		.4byte	.LFE52-.LFB52
 4122 00a0 00000000 		.4byte	.LFB53
 4123 00a4 24000000 		.4byte	.LFE53-.LFB53
 4124 00a8 00000000 		.4byte	.LFB54
 4125 00ac 24000000 		.4byte	.LFE54-.LFB54
 4126 00b0 00000000 		.4byte	.LFB55
 4127 00b4 24000000 		.4byte	.LFE55-.LFB55
 4128 00b8 00000000 		.4byte	.LFB56
 4129 00bc 24000000 		.4byte	.LFE56-.LFB56
 4130 00c0 00000000 		.4byte	.LFB57
 4131 00c4 34010000 		.4byte	.LFE57-.LFB57
 4132 00c8 00000000 		.4byte	.LFB58
 4133 00cc 42000000 		.4byte	.LFE58-.LFB58
 4134 00d0 00000000 		.4byte	.LFB59
 4135 00d4 36000000 		.4byte	.LFE59-.LFB59
 4136 00d8 00000000 		.4byte	.LFB60
 4137 00dc 5C000000 		.4byte	.LFE60-.LFB60
 4138 00e0 00000000 		.4byte	.LFB61
 4139 00e4 5C000000 		.4byte	.LFE61-.LFB61
 4140 00e8 00000000 		.4byte	.LFB62
 4141 00ec 76000000 		.4byte	.LFE62-.LFB62
 4142 00f0 00000000 		.4byte	.LFB63
 4143 00f4 3C000000 		.4byte	.LFE63-.LFB63
 4144 00f8 00000000 		.4byte	.LFB64
 4145 00fc 1C000000 		.4byte	.LFE64-.LFB64
 4146 0100 00000000 		.4byte	.LFB65
 4147 0104 1C000000 		.4byte	.LFE65-.LFB65
 4148 0108 00000000 		.4byte	.LFB66
 4149 010c 1C000000 		.4byte	.LFE66-.LFB66
 4150 0110 00000000 		.4byte	.LFB67
 4151 0114 14000000 		.4byte	.LFE67-.LFB67
 4152 0118 00000000 		.4byte	.LFB68
 4153 011c 14000000 		.4byte	.LFE68-.LFB68
 4154 0120 00000000 		.4byte	0
 4155 0124 00000000 		.4byte	0
 4156              		.section	.debug_ranges,"",%progbits
 4157              	.Ldebug_ranges0:
 4158 0000 00000000 		.4byte	.LFB35
 4159 0004 84000000 		.4byte	.LFE35
 4160 0008 00000000 		.4byte	.LFB36
 4161 000c 28000000 		.4byte	.LFE36
 4162 0010 00000000 		.4byte	.LFB37
 4163 0014 26000000 		.4byte	.LFE37
 4164 0018 00000000 		.4byte	.LFB38
 4165 001c 50000000 		.4byte	.LFE38
 4166 0020 00000000 		.4byte	.LFB39
 4167 0024 38020000 		.4byte	.LFE39
 4168 0028 00000000 		.4byte	.LFB40
 4169 002c 1E000000 		.4byte	.LFE40
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 124


 4170 0030 00000000 		.4byte	.LFB41
 4171 0034 40000000 		.4byte	.LFE41
 4172 0038 00000000 		.4byte	.LFB42
 4173 003c 58000000 		.4byte	.LFE42
 4174 0040 00000000 		.4byte	.LFB43
 4175 0044 1C000000 		.4byte	.LFE43
 4176 0048 00000000 		.4byte	.LFB44
 4177 004c 24000000 		.4byte	.LFE44
 4178 0050 00000000 		.4byte	.LFB45
 4179 0054 1C000000 		.4byte	.LFE45
 4180 0058 00000000 		.4byte	.LFB46
 4181 005c 24000000 		.4byte	.LFE46
 4182 0060 00000000 		.4byte	.LFB47
 4183 0064 1C000000 		.4byte	.LFE47
 4184 0068 00000000 		.4byte	.LFB48
 4185 006c 1C000000 		.4byte	.LFE48
 4186 0070 00000000 		.4byte	.LFB49
 4187 0074 1C000000 		.4byte	.LFE49
 4188 0078 00000000 		.4byte	.LFB50
 4189 007c 1C000000 		.4byte	.LFE50
 4190 0080 00000000 		.4byte	.LFB51
 4191 0084 24000000 		.4byte	.LFE51
 4192 0088 00000000 		.4byte	.LFB52
 4193 008c 24000000 		.4byte	.LFE52
 4194 0090 00000000 		.4byte	.LFB53
 4195 0094 24000000 		.4byte	.LFE53
 4196 0098 00000000 		.4byte	.LFB54
 4197 009c 24000000 		.4byte	.LFE54
 4198 00a0 00000000 		.4byte	.LFB55
 4199 00a4 24000000 		.4byte	.LFE55
 4200 00a8 00000000 		.4byte	.LFB56
 4201 00ac 24000000 		.4byte	.LFE56
 4202 00b0 00000000 		.4byte	.LFB57
 4203 00b4 34010000 		.4byte	.LFE57
 4204 00b8 00000000 		.4byte	.LFB58
 4205 00bc 42000000 		.4byte	.LFE58
 4206 00c0 00000000 		.4byte	.LFB59
 4207 00c4 36000000 		.4byte	.LFE59
 4208 00c8 00000000 		.4byte	.LFB60
 4209 00cc 5C000000 		.4byte	.LFE60
 4210 00d0 00000000 		.4byte	.LFB61
 4211 00d4 5C000000 		.4byte	.LFE61
 4212 00d8 00000000 		.4byte	.LFB62
 4213 00dc 76000000 		.4byte	.LFE62
 4214 00e0 00000000 		.4byte	.LFB63
 4215 00e4 3C000000 		.4byte	.LFE63
 4216 00e8 00000000 		.4byte	.LFB64
 4217 00ec 1C000000 		.4byte	.LFE64
 4218 00f0 00000000 		.4byte	.LFB65
 4219 00f4 1C000000 		.4byte	.LFE65
 4220 00f8 00000000 		.4byte	.LFB66
 4221 00fc 1C000000 		.4byte	.LFE66
 4222 0100 00000000 		.4byte	.LFB67
 4223 0104 14000000 		.4byte	.LFE67
 4224 0108 00000000 		.4byte	.LFB68
 4225 010c 14000000 		.4byte	.LFE68
 4226 0110 00000000 		.4byte	0
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 125


 4227 0114 00000000 		.4byte	0
 4228              		.section	.debug_line,"",%progbits
 4229              	.Ldebug_line0:
 4230 0000 E4030000 		.section	.debug_str,"MS",%progbits,1
 4230      02006000 
 4230      00000201 
 4230      FB0E0D00 
 4230      01010101 
 4231              	.LASF10:
 4232 0000 75696E74 		.ascii	"uint16\000"
 4232      313600
 4233              	.LASF58:
 4234 0007 66696C74 		.ascii	"filteredRawData\000"
 4234      65726564 
 4234      52617744 
 4234      61746100 
 4235              	.LASF77:
 4236 0017 43617053 		.ascii	"CapSense_1_SetNoiseThreshold\000"
 4236      656E7365 
 4236      5F315F53 
 4236      65744E6F 
 4236      69736554 
 4237              	.LASF85:
 4238 0034 66696E67 		.ascii	"fingerThreshold\000"
 4238      65725468 
 4238      72657368 
 4238      6F6C6400 
 4239              	.LASF123:
 4240 0044 433A5C55 		.ascii	"C:\\Users\\igor.hollaender\\Documents\\GitHub\\CY8S"
 4240      73657273 
 4240      5C69676F 
 4240      722E686F 
 4240      6C6C6165 
 4241 0072 65727665 		.ascii	"erver\\Sensor\\IH_CapGauge01.cydsn\000"
 4241      725C5365 
 4241      6E736F72 
 4241      5C49485F 
 4241      43617047 
 4242              	.LASF34:
 4243 0093 70747247 		.ascii	"ptrGetRaw\000"
 4243      65745261 
 4243      7700
 4244              	.LASF50:
 4245 009d 43617053 		.ascii	"CapSense_1_InitializeAllBaselines\000"
 4245      656E7365 
 4245      5F315F49 
 4245      6E697469 
 4245      616C697A 
 4246              	.LASF47:
 4247 00bf 43617053 		.ascii	"CapSense_1_BaseInit\000"
 4247      656E7365 
 4247      5F315F42 
 4247      61736549 
 4247      6E697400 
 4248              	.LASF7:
 4249 00d3 6C6F6E67 		.ascii	"long long unsigned int\000"
 4249      206C6F6E 
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 126


 4249      6720756E 
 4249      7369676E 
 4249      65642069 
 4250              	.LASF92:
 4251 00ea 43617053 		.ascii	"CapSense_1_EnableWidget\000"
 4251      656E7365 
 4251      5F315F45 
 4251      6E61626C 
 4251      65576964 
 4252              	.LASF87:
 4253 0102 43617053 		.ascii	"CapSense_1_CheckIsWidgetActive\000"
 4253      656E7365 
 4253      5F315F43 
 4253      6865636B 
 4253      49735769 
 4254              	.LASF112:
 4255 0121 43617053 		.ascii	"CapSense_1_noiseThreshold\000"
 4255      656E7365 
 4255      5F315F6E 
 4255      6F697365 
 4255      54687265 
 4256              	.LASF115:
 4257 013b 43617053 		.ascii	"CapSense_1_debounce\000"
 4257      656E7365 
 4257      5F315F64 
 4257      65626F75 
 4257      6E636500 
 4258              	.LASF80:
 4259 014f 43617053 		.ascii	"CapSense_1_SetDebounce\000"
 4259      656E7365 
 4259      5F315F53 
 4259      65744465 
 4259      626F756E 
 4260              	.LASF102:
 4261 0166 43617053 		.ascii	"CapSense_1_sensorRaw\000"
 4261      656E7365 
 4261      5F315F73 
 4261      656E736F 
 4261      72526177 
 4262              	.LASF100:
 4263 017b 43617053 		.ascii	"CapSense_1_DisableRawDataFilters\000"
 4263      656E7365 
 4263      5F315F44 
 4263      69736162 
 4263      6C655261 
 4264              	.LASF6:
 4265 019c 6C6F6E67 		.ascii	"long long int\000"
 4265      206C6F6E 
 4265      6720696E 
 4265      7400
 4266              	.LASF0:
 4267 01aa 7369676E 		.ascii	"signed char\000"
 4267      65642063 
 4267      68617200 
 4268              	.LASF88:
 4269 01b6 72617749 		.ascii	"rawIndex\000"
 4269      6E646578 
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 127


 4269      00
 4270              	.LASF33:
 4271 01bf 6E756D62 		.ascii	"numberOfSensors\000"
 4271      65724F66 
 4271      53656E73 
 4271      6F727300 
 4272              	.LASF21:
 4273 01cf 77696467 		.ascii	"widgetNubmersTbl\000"
 4273      65744E75 
 4273      626D6572 
 4273      7354626C 
 4273      00
 4274              	.LASF90:
 4275 01e0 73746174 		.ascii	"state\000"
 4275      6500
 4276              	.LASF4:
 4277 01e6 6C6F6E67 		.ascii	"long int\000"
 4277      20696E74 
 4277      00
 4278              	.LASF93:
 4279 01ef 43617053 		.ascii	"CapSense_1_DisableWidget\000"
 4279      656E7365 
 4279      5F315F44 
 4279      69736162 
 4279      6C655769 
 4280              	.LASF9:
 4281 0208 75696E74 		.ascii	"uint8\000"
 4281      3800
 4282              	.LASF13:
 4283 020e 646F7562 		.ascii	"double\000"
 4283      6C6500
 4284              	.LASF11:
 4285 0215 75696E74 		.ascii	"uint32\000"
 4285      333200
 4286              	.LASF86:
 4287 021c 68797374 		.ascii	"hysteresis\000"
 4287      65726573 
 4287      697300
 4288              	.LASF74:
 4289 0227 43617053 		.ascii	"CapSense_1_GetFingerHysteresis\000"
 4289      656E7365 
 4289      5F315F47 
 4289      65744669 
 4289      6E676572 
 4290              	.LASF62:
 4291 0246 43617053 		.ascii	"CapSense_1_UpdateWidgetBaseline\000"
 4291      656E7365 
 4291      5F315F55 
 4291      70646174 
 4291      65576964 
 4292              	.LASF43:
 4293 0266 73656E73 		.ascii	"sensetivitySeed\000"
 4293      65746976 
 4293      69747953 
 4293      65656400 
 4294              	.LASF114:
 4295 0276 43617053 		.ascii	"CapSense_1_hysteresis\000"
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 128


 4295      656E7365 
 4295      5F315F68 
 4295      79737465 
 4295      72657369 
 4296              	.LASF116:
 4297 028c 43617053 		.ascii	"CapSense_1_rawDataIndex\000"
 4297      656E7365 
 4297      5F315F72 
 4297      61774461 
 4297      7461496E 
 4298              	.LASF111:
 4299 02a4 43617053 		.ascii	"CapSense_1_fingerThreshold\000"
 4299      656E7365 
 4299      5F315F66 
 4299      696E6765 
 4299      72546872 
 4300              	.LASF42:
 4301 02bf 746F7461 		.ascii	"totalSensorsNum\000"
 4301      6C53656E 
 4301      736F7273 
 4301      4E756D00 
 4302              	.LASF71:
 4303 02cf 76616C75 		.ascii	"value\000"
 4303      6500
 4304              	.LASF65:
 4305 02d5 6C617374 		.ascii	"lastSensor\000"
 4305      53656E73 
 4305      6F7200
 4306              	.LASF8:
 4307 02e0 756E7369 		.ascii	"unsigned int\000"
 4307      676E6564 
 4307      20696E74 
 4307      00
 4308              	.LASF27:
 4309 02ed 73616D70 		.ascii	"sampleMaxTbl\000"
 4309      6C654D61 
 4309      7854626C 
 4309      00
 4310              	.LASF99:
 4311 02fa 43617053 		.ascii	"CapSense_1_EnableRawDataFilters\000"
 4311      656E7365 
 4311      5F315F45 
 4311      6E61626C 
 4311      65526177 
 4312              	.LASF5:
 4313 031a 6C6F6E67 		.ascii	"long unsigned int\000"
 4313      20756E73 
 4313      69676E65 
 4313      6420696E 
 4313      7400
 4314              	.LASF22:
 4315 032c 7265736F 		.ascii	"resolutionsTbl\000"
 4315      6C757469 
 4315      6F6E7354 
 4315      626C00
 4316              	.LASF37:
 4317 033b 70747247 		.ascii	"ptrGetBitValue\000"
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 129


 4317      65744269 
 4317      7456616C 
 4317      756500
 4318              	.LASF94:
 4319 034a 43617053 		.ascii	"CapSense_1_MedianFilter\000"
 4319      656E7365 
 4319      5F315F4D 
 4319      65646961 
 4319      6E46696C 
 4320              	.LASF70:
 4321 0362 43617053 		.ascii	"CapSense_1_SetDiffCountData\000"
 4321      656E7365 
 4321      5F315F53 
 4321      65744469 
 4321      6666436F 
 4322              	.LASF67:
 4323 037e 64617461 		.ascii	"data\000"
 4323      00
 4324              	.LASF119:
 4325 0383 43617053 		.ascii	"CapSense_1_config\000"
 4325      656E7365 
 4325      5F315F63 
 4325      6F6E6669 
 4325      6700
 4326              	.LASF3:
 4327 0395 73686F72 		.ascii	"short unsigned int\000"
 4327      7420756E 
 4327      7369676E 
 4327      65642069 
 4327      6E7400
 4328              	.LASF18:
 4329 03a8 73656E73 		.ascii	"sensetivityTbl\000"
 4329      65746976 
 4329      69747954 
 4329      626C00
 4330              	.LASF49:
 4331 03b7 73656E73 		.ascii	"sensor\000"
 4331      6F7200
 4332              	.LASF45:
 4333 03be 706F696E 		.ascii	"pointers\000"
 4333      74657273 
 4333      00
 4334              	.LASF81:
 4335 03c7 43617053 		.ascii	"CapSense_1_SetLowBaselineReset\000"
 4335      656E7365 
 4335      5F315F53 
 4335      65744C6F 
 4335      77426173 
 4336              	.LASF75:
 4337 03e6 43617053 		.ascii	"CapSense_1_GetNegativeNoiseThreshold\000"
 4337      656E7365 
 4337      5F315F47 
 4337      65744E65 
 4337      67617469 
 4338              	.LASF79:
 4339 040b 43617053 		.ascii	"CapSense_1_SetNegativeNoiseThreshold\000"
 4339      656E7365 
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 130


 4339      5F315F53 
 4339      65744E65 
 4339      67617469 
 4340              	.LASF113:
 4341 0430 43617053 		.ascii	"CapSense_1_negativeNoiseThreshold\000"
 4341      656E7365 
 4341      5F315F6E 
 4341      65676174 
 4341      6976654E 
 4342              	.LASF117:
 4343 0452 43617053 		.ascii	"CapSense_1_numberOfSensors\000"
 4343      656E7365 
 4343      5F315F6E 
 4343      756D6265 
 4343      724F6653 
 4344              	.LASF55:
 4345 046d 63616C63 		.ascii	"calc\000"
 4345      00
 4346              	.LASF19:
 4347 0472 63686172 		.ascii	"chargeDivTbl\000"
 4347      67654469 
 4347      7654626C 
 4347      00
 4348              	.LASF26:
 4349 047f 73616D70 		.ascii	"sampleMinTbl\000"
 4349      6C654D69 
 4349      6E54626C 
 4349      00
 4350              	.LASF66:
 4351 048c 43617053 		.ascii	"CapSense_1_SetBaselineData\000"
 4351      656E7365 
 4351      5F315F53 
 4351      65744261 
 4351      73656C69 
 4352              	.LASF46:
 4353 04a7 43617053 		.ascii	"CapSense_1_CONFIG_TYPE_P4_v2_60\000"
 4353      656E7365 
 4353      5F315F43 
 4353      4F4E4649 
 4353      475F5459 
 4354              	.LASF103:
 4355 04c7 43617053 		.ascii	"CapSense_1_sensorEnableMask\000"
 4355      656E7365 
 4355      5F315F73 
 4355      656E736F 
 4355      72456E61 
 4356              	.LASF23:
 4357 04e3 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 4357      65456E76 
 4357      656C6F70 
 4357      6554626C 
 4357      00
 4358              	.LASF83:
 4359 04f4 6465626F 		.ascii	"debounce\000"
 4359      756E6365 
 4359      00
 4360              	.LASF44:
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 131


 4361 04fd 6866636C 		.ascii	"hfclkFreq_MHz\000"
 4361      6B467265 
 4361      715F4D48 
 4361      7A00
 4362              	.LASF15:
 4363 050b 73697A65 		.ascii	"sizetype\000"
 4363      74797065 
 4363      00
 4364              	.LASF109:
 4365 0514 43617053 		.ascii	"CapSense_1_lowBaselineResetCnt\000"
 4365      656E7365 
 4365      5F315F6C 
 4365      6F774261 
 4365      73656C69 
 4366              	.LASF98:
 4367 0533 43617053 		.ascii	"CapSense_1_GetDebounce\000"
 4367      656E7365 
 4367      5F315F47 
 4367      65744465 
 4367      626F756E 
 4368              	.LASF69:
 4369 054a 43617053 		.ascii	"CapSense_1_GetDiffCountData\000"
 4369      656E7365 
 4369      5F315F47 
 4369      65744469 
 4369      6666436F 
 4370              	.LASF16:
 4371 0566 69646163 		.ascii	"idac1LevelsTbl\000"
 4371      314C6576 
 4371      656C7354 
 4371      626C00
 4372              	.LASF17:
 4373 0575 69646163 		.ascii	"idac2LevelsTbl\000"
 4373      324C6576 
 4373      656C7354 
 4373      626C00
 4374              	.LASF48:
 4375 0584 43617053 		.ascii	"CapSense_1_InitializeSensorBaseline\000"
 4375      656E7365 
 4375      5F315F49 
 4375      6E697469 
 4375      616C697A 
 4376              	.LASF101:
 4377 05a8 43617053 		.ascii	"CapSense_1_debounceCounter\000"
 4377      656E7365 
 4377      5F315F64 
 4377      65626F75 
 4377      6E636543 
 4378              	.LASF61:
 4379 05c3 43617053 		.ascii	"CapSense_1_UpdateEnabledBaselines\000"
 4379      656E7365 
 4379      5F315F55 
 4379      70646174 
 4379      65456E61 
 4380              	.LASF39:
 4381 05e5 43617053 		.ascii	"CapSense_1_CONFIG_TYPE_POINTERS_P4_v2_60\000"
 4381      656E7365 
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 132


 4381      5F315F43 
 4381      4F4E4649 
 4381      475F5459 
 4382              	.LASF110:
 4383 060e 43617053 		.ascii	"CapSense_1_lowBaselineReset\000"
 4383      656E7365 
 4383      5F315F6C 
 4383      6F774261 
 4383      73656C69 
 4384              	.LASF12:
 4385 062a 666C6F61 		.ascii	"float\000"
 4385      7400
 4386              	.LASF73:
 4387 0630 43617053 		.ascii	"CapSense_1_GetNoiseThreshold\000"
 4387      656E7365 
 4387      5F315F47 
 4387      65744E6F 
 4387      69736554 
 4388              	.LASF120:
 4389 064d 43617053 		.ascii	"CapSense_1_enableRawFilters\000"
 4389      656E7365 
 4389      5F315F65 
 4389      6E61626C 
 4389      65526177 
 4390              	.LASF54:
 4391 0669 43617053 		.ascii	"CapSense_1_UpdateBaselineNoThreshold\000"
 4391      656E7365 
 4391      5F315F55 
 4391      70646174 
 4391      65426173 
 4392              	.LASF25:
 4393 068e 7369676E 		.ascii	"signRegisterTbl\000"
 4393      52656769 
 4393      73746572 
 4393      54626C00 
 4394              	.LASF78:
 4395 069e 43617053 		.ascii	"CapSense_1_SetFingerHysteresis\000"
 4395      656E7365 
 4395      5F315F53 
 4395      65744669 
 4395      6E676572 
 4396              	.LASF108:
 4397 06bd 43617053 		.ascii	"CapSense_1_sensorOnMask\000"
 4397      656E7365 
 4397      5F315F73 
 4397      656E736F 
 4397      724F6E4D 
 4398              	.LASF104:
 4399 06d5 43617053 		.ascii	"CapSense_1_widgetNumber\000"
 4399      656E7365 
 4399      5F315F77 
 4399      69646765 
 4399      744E756D 
 4400              	.LASF31:
 4401 06ed 70726573 		.ascii	"prescalerTable\000"
 4401      63616C65 
 4401      72546162 
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 133


 4401      6C6500
 4402              	.LASF118:
 4403 06fc 43617053 		.ascii	"CapSense_1_rawFilterData1\000"
 4403      656E7365 
 4403      5F315F72 
 4403      61774669 
 4403      6C746572 
 4404              	.LASF82:
 4405 0716 43617053 		.ascii	"CapSense_1_CheckIsSensorActive\000"
 4405      656E7365 
 4405      5F315F43 
 4405      6865636B 
 4405      49735365 
 4406              	.LASF91:
 4407 0735 43617053 		.ascii	"CapSense_1_CheckIsAnyWidgetActive\000"
 4407      656E7365 
 4407      5F315F43 
 4407      6865636B 
 4407      4973416E 
 4408              	.LASF1:
 4409 0757 756E7369 		.ascii	"unsigned char\000"
 4409      676E6564 
 4409      20636861 
 4409      7200
 4410              	.LASF36:
 4411 0765 70747252 		.ascii	"ptrReadSensorRaw\000"
 4411      65616453 
 4411      656E736F 
 4411      72526177 
 4411      00
 4412              	.LASF52:
 4413 0776 43617053 		.ascii	"CapSense_1_InitializeEnabledBaselines\000"
 4413      656E7365 
 4413      5F315F49 
 4413      6E697469 
 4413      616C697A 
 4414              	.LASF59:
 4415 079c 6E6F6973 		.ascii	"noiseThreshold\000"
 4415      65546872 
 4415      6573686F 
 4415      6C6400
 4416              	.LASF2:
 4417 07ab 73686F72 		.ascii	"short int\000"
 4417      7420696E 
 4417      7400
 4418              	.LASF51:
 4419 07b5 77696467 		.ascii	"widget\000"
 4419      657400
 4420              	.LASF20:
 4421 07bc 6D6F6444 		.ascii	"modDivTbl\000"
 4421      69765462 
 4421      6C00
 4422              	.LASF60:
 4423 07c6 43617053 		.ascii	"CapSense_1_UpdateSensorBaseline\000"
 4423      656E7365 
 4423      5F315F55 
 4423      70646174 
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 134


 4423      6553656E 
 4424              	.LASF107:
 4425 07e6 43617053 		.ascii	"CapSense_1_sensorSignal\000"
 4425      656E7365 
 4425      5F315F73 
 4425      656E736F 
 4425      72536967 
 4426              	.LASF96:
 4427 07fe 43617053 		.ascii	"CapSense_1_GetWidgetNumber\000"
 4427      656E7365 
 4427      5F315F47 
 4427      65745769 
 4427      64676574 
 4428              	.LASF97:
 4429 0819 43617053 		.ascii	"CapSense_1_GetLowBaselineReset\000"
 4429      656E7365 
 4429      5F315F47 
 4429      65744C6F 
 4429      77426173 
 4430              	.LASF53:
 4431 0838 69735365 		.ascii	"isSensorEnabled\000"
 4431      6E736F72 
 4431      456E6162 
 4431      6C656400 
 4432              	.LASF29:
 4433 0848 6B56616C 		.ascii	"kValueTbl\000"
 4433      75655462 
 4433      6C00
 4434              	.LASF63:
 4435 0852 73656E73 		.ascii	"sensorsPerWidget\000"
 4435      6F727350 
 4435      65725769 
 4435      64676574 
 4435      00
 4436              	.LASF28:
 4437 0863 70726576 		.ascii	"previousSampleTbl\000"
 4437      696F7573 
 4437      53616D70 
 4437      6C655462 
 4437      6C00
 4438              	.LASF105:
 4439 0875 43617053 		.ascii	"CapSense_1_sensorBaseline\000"
 4439      656E7365 
 4439      5F315F73 
 4439      656E736F 
 4439      72426173 
 4440              	.LASF14:
 4441 088f 63686172 		.ascii	"char\000"
 4441      00
 4442              	.LASF24:
 4443 0894 72756E6E 		.ascii	"runningDifferenceTbl\000"
 4443      696E6744 
 4443      69666665 
 4443      72656E63 
 4443      6554626C 
 4444              	.LASF64:
 4445 08a9 66697273 		.ascii	"firstSensor\000"
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 135


 4445      7453656E 
 4445      736F7200 
 4446              	.LASF106:
 4447 08b5 43617053 		.ascii	"CapSense_1_sensorBaselineLow\000"
 4447      656E7365 
 4447      5F315F73 
 4447      656E736F 
 4447      72426173 
 4448              	.LASF84:
 4449 08d2 6465626F 		.ascii	"debounceIndex\000"
 4449      756E6365 
 4449      496E6465 
 4449      7800
 4450              	.LASF35:
 4451 08e0 70747250 		.ascii	"ptrPreScan\000"
 4451      72655363 
 4451      616E00
 4452              	.LASF30:
 4453 08eb 7363616E 		.ascii	"scanSpeedTbl\000"
 4453      53706565 
 4453      6454626C 
 4453      00
 4454              	.LASF122:
 4455 08f8 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_1_CSHL.c\000"
 4455      72617465 
 4455      645F536F 
 4455      75726365 
 4455      5C50536F 
 4456              	.LASF56:
 4457 0921 7369676E 		.ascii	"sign\000"
 4457      00
 4458              	.LASF89:
 4459 0926 6E756D4F 		.ascii	"numOfSensors\000"
 4459      6653656E 
 4459      736F7273 
 4459      00
 4460              	.LASF68:
 4461 0933 43617053 		.ascii	"CapSense_1_GetBaselineData\000"
 4461      656E7365 
 4461      5F315F47 
 4461      65744261 
 4461      73656C69 
 4462              	.LASF40:
 4463 094e 746F7461 		.ascii	"totalScanslotsNum\000"
 4463      6C536361 
 4463      6E736C6F 
 4463      74734E75 
 4463      6D00
 4464              	.LASF121:
 4465 0960 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4465      4320342E 
 4465      392E3320 
 4465      32303135 
 4465      30333033 
 4466 0993 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4466      20726576 
 4466      6973696F 
ARM GAS  C:\Users\IGOR~1.HOL\AppData\Local\Temp\cc8IZ2FY.s 			page 136


 4466      6E203232 
 4466      31323230 
 4467 09c6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4467      66756E63 
 4467      74696F6E 
 4467      2D736563 
 4467      74696F6E 
 4468              	.LASF72:
 4469 09ee 43617053 		.ascii	"CapSense_1_GetFingerThreshold\000"
 4469      656E7365 
 4469      5F315F47 
 4469      65744669 
 4469      6E676572 
 4470              	.LASF38:
 4471 0a0c 70747253 		.ascii	"ptrSetBitValue\000"
 4471      65744269 
 4471      7456616C 
 4471      756500
 4472              	.LASF76:
 4473 0a1b 43617053 		.ascii	"CapSense_1_SetFingerThreshold\000"
 4473      656E7365 
 4473      5F315F53 
 4473      65744669 
 4473      6E676572 
 4474              	.LASF95:
 4475 0a39 43617053 		.ascii	"CapSense_1_IIR4Filter\000"
 4475      656E7365 
 4475      5F315F49 
 4475      49523446 
 4475      696C7465 
 4476              	.LASF32:
 4477 0a4f 72617744 		.ascii	"rawDataIndex\000"
 4477      61746149 
 4477      6E646578 
 4477      00
 4478              	.LASF57:
 4479 0a5c 74656D70 		.ascii	"tempRaw\000"
 4479      52617700 
 4480              	.LASF41:
 4481 0a64 746F7461 		.ascii	"totalWidgetsNum\000"
 4481      6C576964 
 4481      67657473 
 4481      4E756D00 
 4482              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
